!function(A){var i={};function e(t){if(i[t])return i[t].exports;var C=i[t]={i:t,l:!1,exports:{}};return A[t].call(C.exports,C,C.exports,e),C.l=!0,C.exports}e.m=A,e.c=i,e.d=function(A,i,t){e.o(A,i)||Object.defineProperty(A,i,{enumerable:!0,get:t})},e.r=function(A){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},e.t=function(A,i){if(1&i&&(A=e(A)),8&i)return A;if(4&i&&"object"==typeof A&&A&&A.__esModule)return A;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:A}),2&i&&"string"!=typeof A)for(var C in A)e.d(t,C,function(i){return A[i]}.bind(null,C));return t},e.n=function(A){var i=A&&A.__esModule?function(){return A.default}:function(){return A};return e.d(i,"a",i),i},e.o=function(A,i){return Object.prototype.hasOwnProperty.call(A,i)},e.p="",e(e.s=78)}([function(A,i,e){"use strict";A.exports=e(41)},function(A,i,e){A.exports=e(45)()},function(A,i,e){"use strict";A.exports=function(A,i,e,t,C,n,h,r){if(!A){var E;if(void 0===i)E=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[e,t,C,n,h,r],o=0;(E=new Error(i.replace(/%s/g,(function(){return l[o++]})))).name="Invariant Violation"}throw E.framesToPop=1,E}}},function(A,i,e){"use strict";var t=function(){};A.exports=t},function(A,i,e){(function(i){function e(A){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A})(A)}function t(){this.va=!1,this.Z=null,this.wd=void 0,this.Y=1,this.vc=this.Kd=0,this.ra=null}function C(A){if(A.va)throw new TypeError("Generator is already running");A.va=!0}function n(A){this.o=new t,this.Je=A}function h(A,i,e,t){try{var C=i.call(A.o.Z,e);if(!(C instanceof Object))throw new TypeError("Iterator result "+C+" is not an object");if(!C.done)return A.o.va=!1,C;var n=C.value}catch(i){return A.o.Z=null,A.o.ya(i),r(A)}return A.o.Z=null,t.call(A.o,n),r(A)}function r(A){for(;A.o.Y;)try{var i=A.Je(A.o);if(i)return A.o.va=!1,{value:i.value,done:!1}}catch(i){A.o.wd=void 0,A.o.ya(i)}if(A.o.va=!1,A.o.ra){if(i=A.o.ra,A.o.ra=null,i.ue)throw i.Xd;return{value:i.return,done:!0}}return{value:void 0,done:!0}}function E(A){this.next=function(i){return A.wa(i)},this.throw=function(i){return A.ya(i)},this.return=function(i){return function(A,i){C(A.o);var e=A.o.Z;return e?h(A,"return"in e?e.return:function(A){return{value:A,done:!0}},i,A.o.return):(A.o.return(i),r(A))}(A,i)},this[Symbol.iterator]=function(){return this}}function l(A,i){if(0===i||"object"!==e(A))return A;for(var t in i=void 0===i||-1===i?-1:i-1,A=Object.assign({},A))A[t]=l(A[t],i);return A}function o(A,i,e){return(A=Math.min(Math.max((e-A)/(i-A),0),1))*A*(3-2*A)}function k(A,i,e){return Math.min(Math.max((e-A)/(i-A),0),1)}function g(A,i,e,t){return Math.pow(Math.min(Math.max((t-A)/(i-A),0),1),e)}function D(A,i){var e=i%8;return A[(i-e)/8]>>7-e&1}t.prototype.wa=function(A){this.wd=A},t.prototype.ya=function(A){this.ra={Xd:A,ue:!0},this.Y=this.Kd||this.vc},t.prototype.return=function(A){this.ra={return:A},this.Y=this.vc},n.prototype.wa=function(A){return C(this.o),this.o.Z?h(this,this.o.Z.next,A,this.o.wa):(this.o.wa(A),r(this))},n.prototype.ya=function(A){return C(this.o),this.o.Z?h(this,this.o.Z.throw,A,this.o.wa):(this.o.ya(A),r(this))};var a,s,B,j,m,c,u,F=function(){function A(A,i,e){return i=A.createShader(i),A.shaderSource(i,e),A.compileShader(i),!!A.getShaderParameter(i,A.COMPILE_STATUS)&&i}function i(i,e){if(e.B=!!e.B,!e.B){if(void 0===e.za&&(e.za="precision lowp float;attribute vec2 a0;varying vec2 vv0;void main(){gl_Position=vec4(a0,0.,1.),vv0=a0*.5+vec2(.5,.5);}"),void 0===e.Da&&(e.Da=["a0"]),void 0===e.sa&&(e.sa=[2]),void 0!==e.precision&&"highp"!==e.precision||(e.precision=E),e.id=h++,void 0!==e.ld&&(e.ld.forEach((function(A,i){e.h=e.h.replace(A,e.Ya[i])})),e.ld.splice(0)),e.ac=0,e.sa.forEach((function(A){e.ac+=4*A})),e.da=function(i,e,C){e=A(i,i.VERTEX_SHADER,e),C=A(i,i.FRAGMENT_SHADER,C),i===G&&t.push(e,C);var n=i.createProgram();return i.attachShader(n,e),i.attachShader(n,C),i.linkProgram(n),n}(i,e.za,"precision "+e.precision+" float;\n"+e.h),e.v={},e.i.forEach((function(A){e.v[A]=i.getUniformLocation(e.da,A)})),e.attributes={},e.ta=[],e.Da.forEach((function(A){var t=i.getAttribLocation(e.da,A);e.attributes[A]=t,e.ta.push(t)})),e.j)for(var r in i.useProgram(e.da),n=e,C=e.id,e.j)i.uniform1i(e.v[r],e.j[r]);e.ca=!0}}function e(A,e,t){return i(A,e),A.useProgram(e.da),A.enableVertexAttribArray(0),C=-1,n=e}var t=[],C=-1,n=null,h=0,r=!1,E="highp",o=["u1"],k=["u0"],g={u1:0},D={u0:0},a={u1:0,u2:1},s={u3:0},B={s0:{h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vv0);}",i:["u1"],j:{u1:0}},s1:{h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vv0);}",i:o,j:g,precision:"lowp"},s2:{h:"uniform sampler2D u1,u2;varying vec2 vv0;void main(){vec4 a=texture2D(u2,vv0),b=texture2D(u1,vv0);gl_FragColor=a*b;}",i:["u1","u2"],j:a},s3:{h:"uniform sampler2D u1;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u1,vv0);gl_FragColor=a.r*f;}",i:o,j:g},s4:{h:"uniform sampler2D u1,u2;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u2,vv0),b=texture2D(u1,vv0);gl_FragColor=a.a*b.r*f;}",i:["u1","u2"],j:a},s5:{h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vec2(1.-vv0.x,vv0.y));}",i:o,j:g},s6:{h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vec2(vv0.x,1.-vv0.y));}",i:o,j:g},s7:{h:"uniform sampler2D u0;uniform float u4;varying vec2 vv0;void main(){vec4 a=texture2D(u0,vv0);gl_FragColor=a*u4;}",i:["u0","u4"],j:D},s8:{h:"uniform sampler2D u0;uniform float u4;varying vec2 vv0;const vec4 f=vec4(.25,.25,.25,.25),g=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0);float b=dot(a*u4,f);gl_FragColor=b*g;}",i:["u0","u4"],j:D},s9:{h:"uniform sampler2D u1;varying vec2 vv0;const vec4 e=vec4(1.,1.,1.,1.);void main(){float a=.25*dot(e,texture2D(u1,vv0));gl_FragColor=a*e;}",i:o,j:g},s10:{h:"uniform sampler2D u1,u5;uniform float u6;const vec4 f=vec4(1.,1.,1.,1.);varying vec2 vv0;void main(){vec4 a=texture2D(u1,vv0),b=texture2D(u5,vv0);gl_FragColor=mix(b,a,u6*f);}",i:["u1","u5","u6"],j:{u1:0,u5:1}},s11:{h:"uniform sampler2D u1;uniform vec2 u7;varying vec2 vv0;void main(){gl_FragColor=.25*(texture2D(u1,vv0+u7)+texture2D(u1,vv0+u7*vec2(1.,-1.))+texture2D(u1,vv0+u7*vec2(-1.,-1.))+texture2D(u1,vv0+u7*vec2(-1.,1.)));}",i:["u1","u7"],j:g},s12:{h:"uniform sampler2D u1;uniform vec4 u8;varying vec2 vv0;float g(float a,float b){a=floor(a)+.5;return floor(a/exp2(b));}float h(float a,float b){return floor(a*exp2(b)+.5);}float i(float a,float b){return mod(a,h(1.,b));}float e(float c,float a,float b){a=floor(a+.5),b=floor(b+.5);return i(g(c,a),b-a);}vec4 j(float a){if(a==0.)return vec4(0.,0.,0.,0.);float k=128.*step(a,0.);a=abs(a);float c=floor(log2(a)),l=c+127.,b=(a/exp2(c)-1.)*8388608.,d=l/2.,m=fract(d)*2.,n=floor(d),o=e(b,0.,8.),p=e(b,8.,16.),q=m*128.+e(b,16.,23.),r=k+n;return vec4(o,p,q,r)/255.;}void main(){float a=dot(texture2D(u1,vv0),u8);gl_FragColor=j(a);}",i:["u1","u8"],j:g},s13:{h:"uniform sampler2D u0;varying vec2 vv0;const vec4 e=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0),b=e/(e+exp(-a));gl_FragColor=b;}",i:k,j:D,B:!0},s14:{h:"uniform sampler2D u0;varying vec2 vv0;const vec4 f=vec4(0.,0.,0.,0.);void main(){vec4 a=texture2D(u0,vv0);gl_FragColor=max(f,a);}",i:k,j:D},s15:{h:"uniform sampler2D u0;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0);gl_FragColor=mix(exp(-abs(a))-f,a,step(0.,a));}",i:k,j:D},s16:{h:"uniform sampler2D u0;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0),b=exp(-abs(a))-f;gl_FragColor=mix(.1*b,a,step(0.,a));}",i:k,j:D},s17:{h:"uniform sampler2D u0,u6,u9;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0),c=texture2D(u6,vv0),d=texture2D(u9,vv0),b=a/d;gl_FragColor=c*mix(exp(-abs(b))-f,b,step(0.,a));}",i:["u0","u6","u9"],j:{u0:0,u6:1,u9:2},B:!0},s18:{h:"uniform sampler2D u0;const float e=3.141593;varying vec2 vv0;void main(){gl_FragColor=atan(e*texture2D(u0,vv0))/e;}",i:k,j:D},s19:{h:"uniform sampler2D u0;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=texture2D(u0,vv0),b=log(f+a);gl_FragColor=b;}",i:k,j:D,B:!0},s20:{h:"uniform sampler2D u0,u10;uniform float u11;const vec2 e=vec2(.5,.5);const float f=1e-5;const vec4 g=vec4(1.,1.,1.,1.),i=vec4(0.,0.,0.,0.);varying vec2 vv0;void main(){vec4 a=texture2D(u10,e);float b=u11*u11;vec4 c=max(b*a,f*g);gl_FragColor=texture2D(u0,vv0)/c;}",i:["u0","u10","u11"],j:{u0:0,u10:1},B:!0},s21:{h:"uniform sampler2D u1;uniform vec2 u12;varying vec2 vv0;void main(){float a=u12.x*u12.y;vec2 b=floor(vv0*a)/a,c=fract(vv0*a),d=floor(b*u12.y),f=floor(u12.x*fract(b*u12.y)),g=(f*u12.y+d)/a;gl_FragColor=texture2D(u1,g+c/a);}",i:["u1","u12"],j:g},s22:{h:"uniform sampler2D u13,u14,u15;varying vec2 vv0;void main(){vec4 a=texture2D(u15,vv0);vec2 b=a.rg,c=a.ba;vec4 d=texture2D(u13,b),f=texture2D(u14,c);gl_FragColor=d*f;}",i:["u13","u14","u15"],j:{u14:0,u13:1,u15:2},B:!0},s23:{h:"uniform float u16;uniform sampler2D u13,u14;varying vec2 vv0;void main(){vec2 a=fract(vv0*u16);vec4 b=texture2D(u13,vv0),c=texture2D(u14,a);gl_FragColor=b*c;}",i:["u14","u13","u16"],j:{u14:0,u13:1}},s24:{h:"uniform float u16;uniform sampler2D u13,u14,u17,u18,u19,u20;varying vec2 vv0;const vec4 e=vec4(1.,1.,1.,1.),g=vec4(1e-3,1e-3,1e-3,1e-3);void main(){vec2 h=vv0*u16,l=floor(h),c=h-l;vec4 m=texture2D(u13,vv0),d=texture2D(u14,c),a=texture2D(u20,vv0);a=a*255.;vec4 n=texture2D(u17,c),o=texture2D(u18,c),p=texture2D(u19,c),i=step(-g,-a),b=e-i,j=b*step(-e-g,-a);b*=e-j;vec4 k=b*step(-2.*e-g,-a);b*=e-k;vec4 q=b;d=i*d+j*n+k*o+q*p,gl_FragColor=m*d;}",i:"u13 u14 u16 u20 u17 u18 u19".split(" "),j:{u14:0,u13:1,u20:3,u17:4,u18:5,u19:6},B:!0},s25:{h:"uniform sampler2D u13,u14,u21;uniform float u16,u22,u23,u24;varying vec2 vv0;const vec2 j=vec2(1.,1.);void main(){vec2 a=floor(u22*vv0),b=u22*vv0-a;float c=u16/u22;vec2 d=floor(b*c),f=b*c-d,g=(a+f)/u22;float k=u22*u24/u16;vec2 l=k*d,h=(l+f*u23)/u24,i=step(h,j);vec4 m=texture2D(u13,g),n=texture2D(u14,h),o=m*n*i.x*i.y,p=texture2D(u21,g);gl_FragColor=o*u23*u23+p;}",i:"u13 u14 u16 u22 u23 u24 u21".split(" "),j:{u14:0,u13:1,u21:2}},s26:{h:"uniform sampler2D u13,u14;varying vec2 vv0;void main(){vec4 a=texture2D(u13,vv0),b=texture2D(u14,vv0);gl_FragColor=a*b;}",i:["u13","u14"],j:{u14:0,u13:1},B:!0},s27:{h:"uniform sampler2D u1,u21;uniform float u25;varying vec2 vv0;void main(){gl_FragColor=texture2D(u21,vv0)+u25*texture2D(u1,vv0);}",i:["u1","u21","u25"],j:{u1:0,u21:1}},s28:{h:"varying vec2 vv0;uniform sampler2D u1;const vec4 f=vec4(1.,1.,1.,1.),g=vec4(.299,.587,.114,0.);void main(){vec4 a=texture2D(u1,vv0);gl_FragColor=dot(a,g)*f;}",i:o,j:g,precision:"lowp"},s29:{h:"varying vec2 vv0;uniform sampler2D u1;uniform float u26;const vec3 f=vec3(.299,.587,.114);void main(){vec3 a=texture2D(u1,vv0).rgb,b=texture2D(u1,vv0+vec2(0.,u26)).rgb,c=texture2D(u1,vv0+vec2(u26,u26)).rgb,d=texture2D(u1,vv0+vec2(u26,0.)).rgb;gl_FragColor=vec4(dot(a,f),dot(b,f),dot(c,f),dot(d,f));}",i:["u1","u26"],j:g,precision:"lowp"},s30:{h:"varying vec2 vv0;uniform sampler2D u1;uniform float u26;const vec3 f=vec3(.299,.587,.114);void main(){vec3 a=texture2D(u1,vv0).rgb,b=texture2D(u1,vv0+vec2(0.,u26)).rgb,c=texture2D(u1,vv0+vec2(u26,u26)).rgb,d=texture2D(u1,vv0+vec2(u26,0.)).rgb;gl_FragColor=vec4(a.r,b.g,c.b,dot(d,f));}",i:["u1","u26"],j:g,precision:"lowp"},s31:{h:"varying vec2 vv0;uniform sampler2D u1,u2;uniform float u27;const vec4 f=vec4(1.,1.,1.,1.);void main(){vec4 a=vec4(0.);a-=texture2D(u1,vec2(vv0.x-u27,vv0.y-u27))*1.,a-=texture2D(u1,vec2(vv0.x-u27,vv0.y))*2.,a-=texture2D(u1,vec2(vv0.x-u27,vv0.y+u27))*1.,a+=texture2D(u1,vec2(vv0.x+u27,vv0.y-u27))*1.,a+=texture2D(u1,vec2(vv0.x+u27,vv0.y))*2.,a+=texture2D(u1,vec2(vv0.x+u27,vv0.y+u27))*1.;vec4 b=vec4(0.);b-=texture2D(u1,vec2(vv0.x-u27,vv0.y-u27))*1.,b-=texture2D(u1,vec2(vv0.x,vv0.y-u27))*2.,b-=texture2D(u1,vec2(vv0.x+u27,vv0.y-u27))*1.,b+=texture2D(u1,vec2(vv0.x-u27,vv0.y+u27))*1.,b+=texture2D(u1,vec2(vv0.x,vv0.y+u27))*2.,b+=texture2D(u1,vec2(vv0.x+u27,vv0.y+u27))*1.;vec3 c=sqrt(a.rgb*a.rgb+b.rgb*b.rgb);vec4 e=vec4(c,texture2D(u1,vv0).a),g=texture2D(u2,vv0);gl_FragColor=g.a*e.r*f;}",i:["u1","u2","u27"],j:a,B:!0},s32:{h:"varying vec2 vv0;uniform sampler2D u1,u2;uniform float u27;const vec4 j=vec4(1.,1.,1.,1.);const vec2 k=vec2(1.,1.);void main(){float h=0.;vec2 l=k*u27,a,b;float c,d,i=0.;for(float e=-4.;e<=4.;e+=1.)for(float f=-4.;f<=4.;f+=1.)a=vec2(e,f),c=length(a)/2.,d=exp(-c*c),b=vv0+l*a,h+=d*texture2D(u1,b).r,i+=d;vec4 m=texture2D(u2,vv0);gl_FragColor=m.a*(texture2D(u1,b).r-h/i)*j;}",i:["u1","u2","u27"],j:a,B:!0},s33:{h:"uniform sampler2D u3;uniform vec2 u7;varying vec2 vv0;vec4 e(vec4 a,vec4 b){vec4 c=step(a,b);return mix(a,b,c);}const vec2 g=vec2(.5,.5),h=vec2(1.,0.),i=vec2(0.,1.);void main(){vec2 a=vv0-u7*g;vec4 b=texture2D(u3,a),c=texture2D(u3,a+u7*h),d=texture2D(u3,a+u7*i),j=texture2D(u3,a+u7),k=e(b,c),l=e(d,j);gl_FragColor=e(k,l);}",i:["u3","u7"],j:s},s34:{h:"uniform sampler2D u3;uniform vec2 u7;varying vec2 vv0;const vec2 k=vec2(1.,0.),l=vec2(0.,1.),m=vec2(2.,0.),n=vec2(0.,2.);vec4 e(vec4 a,vec4 b){vec4 c=step(a,b);return mix(a,b,c);}vec4 f(vec2 a){vec4 b=texture2D(u3,a),c=texture2D(u3,a+u7*k),d=texture2D(u3,a+u7*l),g=texture2D(u3,a+u7),h=e(b,c),i=e(d,g);return e(h,i);}void main(){vec2 a=vv0+u7*vec2(-.55,-1.05);vec4 b=f(a),c=f(a+u7*m),d=f(a+u7*2.),g=f(a+u7*n),h=e(b,c),i=e(d,g);gl_FragColor=e(h,i);}",i:["u3","u7"],j:s,B:!0},s35:{h:"uniform sampler2D u1;varying vec2 vv0;void main(){vec4 a=texture2D(u1,vv0);gl_FragColor=a*a;}",i:["u1"],j:g,precision:"lowp",B:!0},s36:{h:"uniform sampler2D u1;uniform vec2 u7;varying vec2 vv0;const float e=15444.;void main(){vec4 a=1001./e*texture2D(u1,vv0-3.*u7)+2002./e*texture2D(u1,vv0-2.*u7)+3003./e*texture2D(u1,vv0-u7)+3432./e*texture2D(u1,vv0)+3003./e*texture2D(u1,vv0+u7)+2002./e*texture2D(u1,vv0+2.*u7)+1001./e*texture2D(u1,vv0+3.*u7);gl_FragColor=a;}",i:["u7","u1"],j:g,precision:"lowp",B:!0},s37:{h:"uniform sampler2D u1,u10,u28;varying vec2 vv0;const vec4 f=vec4(1.,1.,1.,1.);const float g=.1;void main(){vec4 a=texture2D(u10,vv0),b=texture2D(u28,vv0),c=texture2D(u1,vv0),d=max(f*g,b-a*a),h=sqrt(d);gl_FragColor=(c-a)/h;}",i:["u1","u10","u28"],j:{u1:0,u10:1,u28:2},B:!0}},j={s38:{h:"uniform float u16,u29;uniform sampler2D u13,u14,u21;varying vec2 vv0;const vec2 ZERO2=vec2(0.,0.),ONE2=vec2(1.,1.),HALF2=vec2(.5,.5),EPS2=vec2(1e-5,1e-5);void main(){vec4 sum=texture2D(u21,vv0);float toSparsity=1.1111;vec2 uvFrom,uvWeight,xyPatch=ZERO2,eps2=EPS2/u16,xyTo=floor(vv0*u16+eps2);float weightSize=toSparsity*u16;vec2 halfFromSparsity=ONE2*(toSparsity-1.)/2.;for(float patch_x=0.;patch_x<1.1111;patch_x+=1.){xyPatch.x=patch_x;for(float patch_y=0.;patch_y<1.1111;patch_y+=1.)xyPatch.y=patch_y,uvFrom=(xyTo+HALF2+u29*(xyPatch-halfFromSparsity))/u16,uvFrom+=step(uvFrom,-eps2),uvFrom-=step(ONE2-eps2,uvFrom),uvWeight=(xyTo*toSparsity+xyPatch+HALF2)/weightSize,sum+=texture2D(u13,uvWeight)*texture2D(u14,uvFrom);}gl_FragColor=sum,gl_FragColor*=2.2222;}",i:["u16","u13","u14","u21","u29"],Ya:["1.1111","gl_FragColor\\*=2.2222;"]},s39:{h:"uniform float u16,u29,u24;uniform sampler2D u13,u14,u21;varying vec2 vv0;const vec2 ZERO2=vec2(0.,0.),ONE2=vec2(1.,1.),HALF2=vec2(.5,.5),EPS2=vec2(1e-4,1e-4);void main(){vec4 sum=texture2D(u21,vv0);float fromSparsity=1.1111,shrinkFactor=3.3333;vec2 uvFrom,uvWeight,xyFrom,xyPatchTo,xyPatch=ZERO2,xyShrink=ZERO2,eps2=EPS2/u24,xyTo=floor(vv0*u16+eps2);float weightSize=fromSparsity*u24;vec2 halfFromSparsity=ONE2*(fromSparsity-1.)/2.;float toSparsity=weightSize/u16;vec2 xyFrom0=xyTo*shrinkFactor;for(float patch_x=0.;patch_x<1.1111;patch_x+=1.){xyPatch.x=patch_x;for(float patch_y=0.;patch_y<1.1111;patch_y+=1.){xyPatch.y=patch_y;for(float shrink_x=0.;shrink_x<3.3333;shrink_x+=1.){xyShrink.x=shrink_x;for(float shrink_y=0.;shrink_y<3.3333;shrink_y+=1.)xyShrink.y=shrink_y,xyFrom=xyFrom0+xyShrink+shrinkFactor*u29*(xyPatch-halfFromSparsity),uvFrom=(xyFrom+HALF2)/u24,uvFrom+=step(uvFrom,-eps2),uvFrom-=step(ONE2-eps2,uvFrom),xyPatchTo=xyPatch*shrinkFactor+xyShrink,uvWeight=(xyTo*toSparsity+xyPatchTo+HALF2)/weightSize,sum+=texture2D(u13,uvWeight)*texture2D(u14,uvFrom);}}}gl_FragColor=sum,gl_FragColor*=2.2222;}",i:"u16 u24 u13 u14 u21 u29".split(" "),Ya:["1.1111","gl_FragColor\\*=2.2222;","3.3333"]}},m=null,c=null,u={Sa:function(){return r},s:function(){if(!r){for(var A in m=l(B,2),c=l(j,2),E="highp",m)i(G,m[A]);F.set("s0"),G.enableVertexAttribArray(0),r=!0}},ec:function(A){A.forEach((function(A){u.dc(A)}))},dc:function(A){m[A.id]=A,i(G,A,A.id)},Ec:function(A,e,t){e||(e=A),m[e]=Object.create(c[A]),m[e].we=!0,c[A].Ya&&c[A].Ya.forEach((function(A,i){m[e].h=m[e].h.replace(new RegExp(A,"g"),t[i])})),i(G,m[e])},set:function(A){(A=m[A]).B&&(A.B=!1,i(G,A,A.id)),function(A){f.af(u),C!==A.id&&(u.N(),C=A.id,n=A,G.useProgram(A.da),A.ta.forEach((function(A){0!==A&&G.enableVertexAttribArray(A)})))}(A)},xa:function(A){return e(A,{h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vv0);}",i:["u1"],j:{u1:0}})},Sb:function(A){return e(A,{h:"void main(){gl_FragColor=vec4(.5,.5,.5,.5);}",i:[],precision:"highp"})},Yd:function(A){return void 0!==m[A]&&m[A].ca},N:function(){-1!==C&&(C=-1,n.ta.forEach((function(A){0!==A&&G.disableVertexAttribArray(A)})))},Ub:function(){var A=0;n.ta.forEach((function(i,e){e=n.sa[e],G.vertexAttribPointer(i,e,G.FLOAT,!1,n.ac,A),A+=4*e}))},Df:function(){G.enableVertexAttribArray(0)},Za:function(){u.$a(G)},$a:function(A){A.vertexAttribPointer(n.ta[0],2,A.FLOAT,!1,8,0)},hg:function(A,i){G.uniform1i(n.v[A],i)},L:function(A,i){G.uniform1f(n.v[A],i)},ea:function(A,i,e){G.uniform2f(n.v[A],i,e)},ig:function(A,i){G.uniform2fv(n.v[A],i)},od:function(A,i){G.uniform3fv(n.v[A],i)},jg:function(A,i,e,t){G.uniform3f(n.v[A],i,e,t)},kg:function(A,i,e,t,C){G.uniform4f(n.v[A],i,e,t,C)},Tb:function(A,i){G.uniform4fv(n.v[A],i)},lg:function(A,i){G.uniformMatrix2fv(n.v[A],!1,i)},mg:function(A,i){G.uniformMatrix3fv(n.v[A],!1,i)},ng:function(A,i){G.uniformMatrix4fv(n.v[A],!1,i)},I:function(A,i){u.set(A),i.forEach((function(A){switch(A.type){case"4f":G.uniform4fv(n.v[A.name],A.value);break;case"3f":G.uniform3fv(n.v[A.name],A.value);break;case"2f":G.uniform2fv(n.v[A.name],A.value);break;case"1f":G.uniform1f(n.v[A.name],A.value);break;case"1i":G.uniform1i(n.v[A.name],A.value);break;case"mat2":G.uniformMatrix2fv(n.v[A.name],!1,A.value);break;case"mat3":G.uniformMatrix3fv(n.v[A.name],!1,A.value);break;case"mat4":G.uniformMatrix4fv(n.v[A.name],!1,A.value)}}))},Nf:function(){return"lowp"},m:function(){for(var A in G.disableVertexAttribArray(0),u.N(),m){var i=m[A];i.ca&&(i.ca=!1,G.deleteProgram(i.da)),i.we&&delete m[A]}t.forEach((function(A){G.deleteShader(A)})),t.splice(0),h=0,r=!1,n=null,C=-1}};return u}(),G=null,d=function(){function A(A){return console.log("ERROR in ContextFF: ",A),!1}function i(A){function i(){b.m(),y.reset(),C.getExtension("WEBGL_lose_context").loseContext()}if(navigator.userAgent&&-1!==navigator.userAgent.indexOf("forceWebGL1"))return!1;var t=document.createElement("canvas");t.setAttribute("width",5),t.setAttribute("height",5);var C=null;try{C=t.getContext("webgl2",A)}catch(A){return!1}return!!C&&(e(C),y.nc(C),(A=y.pb(C)).V||A.W?(A=b.kc(C,A),i(),!!A):(i(),!1))}function e(A){A.clearColor(0,0,0,0),A.disable(A.DEPTH_TEST),A.disable(A.BLEND),A.disable(A.DITHER),A.disable(A.STENCIL_TEST),A.disable(A.CULL_FACE),A.GENERATE_MIPMAP_HINT&&A.hint(A.GENERATE_MIPMAP_HINT,A.FASTEST),A.disable(A.SAMPLE_ALPHA_TO_COVERAGE),A.disable(A.SAMPLE_COVERAGE),A.depthFunc(A.LEQUAL),A.clearDepth(1)}var t=null,C=null,n=null,h=null,r=!0,E=null,l=null,o={A:function(){return t.width},J:function(){return t.height},La:function(){return t},Ff:function(){return G},X:function(){return r},flush:function(){G.flush()},be:function(){return E||(E=new Uint8Array(t.width*t.height*4)),G.readPixels(0,0,t.width,t.height,G.RGBA,G.UNSIGNED_BYTE,E),E},Hf:function(){return t.toDataURL("image/jpeg")},If:function(){I.M(),C||(C=document.createElement("canvas"),n=C.getContext("2d")),C.width=t.width,C.height=t.height;for(var A=o.be(),i=n.createImageData(C.width,C.height),e=C.width,h=C.height,r=i.data,E=0;E<h;++E)for(var l=h-E-1,k=0;k<e;++k){var g=4*(E*e+k),D=4*(l*e+k);r[g]=A[D],r[g+1]=A[D+1],r[g+2]=A[D+2],r[g+3]=A[D+3]}return n.putImageData(i,0,0),C.toDataURL("image/png")},Gf:function(A){!C&&A&&(C=document.createElement("canvas"),n=C.getContext("2d"));var i=A?C:document.createElement("canvas");return i.width=t.width,i.height=t.height,(A?n:i.getContext("2d")).drawImage(t,0,0),i},s:function(C){if(C.Pd&&!C.ob?t=document.getElementById(C.Pd):C.ob&&(t=C.ob),t||(t=document.createElement("canvas")),t.width=C&&void 0!==C.width?C.width:512,t.height=C&&void 0!==C.height?C.height:512,void 0===C&&(C={}),void 0===C.premultipliedAlpha&&(C.premultipliedAlpha=!1),void 0===C.Bb&&(C.Bb=!0),void 0===C.antialias&&(C.antialias=!1),G)r=G instanceof WebGL2RenderingContext;else{r=!0;var n={antialias:C.antialias,alpha:!0,preserveDrawingBuffer:!0,premultipliedAlpha:C.premultipliedAlpha,stencil:!1,depth:C.Bb};navigator&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("noAntialiasing")&&(n.antialias=!1);var E=i(n);!E&&n.antialias&&(n.antialias=!1,E=i(n)),E&&(G=t.getContext("webgl2",n)),G?r=!0:((G=t.getContext("webgl",n))||(G=t.getContext("experimental-webgl",n)),r=!1)}return G?((h=G.getExtension("WEBGL_lose_context"))&&C.Wc&&(l=C.Wc,t.addEventListener("webglcontextlost",l,!1)),y.s()?(e(G),F.s(),H.s(),!!b.kc(G,y.$d())||A("Cannot filter float textures")):A("Not enough GL capabilities")):A("WebGL1 and 2 are not enabled")},m:function(){G&&(y.m(),b.m()),h&&l&&(t.removeEventListener("webglcontextlost",l,!1),h=l=null),G=E=n=C=t=null}};return o}(),f=function(){function A(){null===i&&(void 0!==F?i=F:"undefined"!=typeof JEShaders&&(i=JEShaders))}var i=null;return A(),{af:function(A){i!==A&&(i&&i.N(),i=A)},Sa:function(){return i.Sa()},Za:function(){return i.Za()},$a:function(A){return i.$a(A)},Ub:function(){return i.Ub()},N:function(){return i.N()},set:function(A){return i.set(A)},xa:function(e){return A(),i.xa(e)},Sb:function(e){return A(),i.Sb(e)},m:function(){return i.m()}}}(),p=function(){function A(A){G.bindTexture(G.TEXTURE_2D,A)}function e(A){var i=new Uint16Array(A.length);return A.forEach((function(A,e){i[e]=function(A){v[0]=A;var i=(A=M[0])>>16&32768,e=A>>12&2047,t=A>>23&255;return 103>t?i:142<t?31744|i|((255==t?0:1)&&8388607&A):113>t?i|((e|=2048)>>114-t)+(e>>113-t&1):i=(i|t-112<<10|e>>1)+(1&e)}(A)})),i}function t(A){if(!f.Sa()||!a)return null;var i=null,e=Math.sqrt(A.length/4);try{var t=G.getError();if("FUCKING_BIG_ERROR"===t)return!1;if(i=w.instance({isFloat:!1,G:!0,array:A,width:e}),(t=G.getError())!==G.NO_ERROR)return!1}catch(A){return!1}I.M(),G.viewport(0,0,e,e),G.clearColor(0,0,0,0),G.clear(G.COLOR_BUFFER_BIT),f.set("s0"),i.ic(0),H.l(!0,!0),A=4*e*e,t=new Uint8Array(A),G.readPixels(0,0,e,e,G.RGBA,G.UNSIGNED_BYTE,t),e=!0;for(var C=0;C<A;++C)e=e&&3>Math.abs(t[C]-127);return i.remove(),I.U(),e}var C=0,n=null,h=0,r=null,E=null,l=null,o=null,k=null,g=null,a=!1,s=[],B={isFloat:!1,isPot:!0,isLinear:!1,isMipmap:!1,isAnisotropicFiltering:!1,isMirrorX:!1,isMirrorY:!1,isSrgb:!1,isKeepArray:!1,isFlipY:null,width:0,height:0,url:null,array:null,data:null,C:null,Bc:null,ve:!1,G:!1,ba:null,Ua:4,Hb:0},j=!1,m=null,c=null,u=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],d=!1,p=!1,v=new Float32Array(1),M=new Int32Array(v.buffer),x={yb:null,zb:null},w={s:function(){a||(k=[G.RGBA,null,G.RGBA,G.RGBA],g=[G.RGBA,null,G.RGBA,G.RGBA],n=[G.TEXTURE0,G.TEXTURE1,G.TEXTURE2,G.TEXTURE3,G.TEXTURE4,G.TEXTURE5,G.TEXTURE6,G.TEXTURE7],d="undefined"!=typeof JEContext,p=void 0!==y,d&&JEContext.ag()&&n.push(G.TEXTURE8,G.TEXTURE9),r=[-1,-1,-1,-1,-1,-1,-1,-1],o=[G.UNSIGNED_BYTE,G.FLOAT,G.FLOAT],a=!0)},pe:function(){if(!E){for(var A=new Float32Array(16384),i=0;16384>i;++i)A[i]=2*Math.random()-1;E={random:w.instance({isFloat:!0,isPot:!0,array:A,width:64}),td:w.instance({isFloat:!1,isPot:!0,width:1,array:new Uint8Array([0,0,0,0])})}}w.mf()},Tf:function(){return E.td},mf:function(){o[1]=y.tb(G)},Ze:function(){g=k=[G.RGBA,G.RGBA,G.RGBA,G.RGBA]},fd:function(A){F.set("s1"),I.M();var i=A.A(),e=A.J();G.viewport(0,0,i,e),A.g(0),H.l(!1,!1)},Pe:function(A,i){w.fd(A),G.readPixels(0,0,A.A(),A.J(),G.RGBA,G.UNSIGNED_BYTE,i)},Qe:function(A,i){return w.fd(A),y.Rb(0,0,A.A(),A.J(),i)},uc:function(A,i,e,t,n,h,E){A.activeTexture(A.TEXTURE0);var o=A.createTexture();A.bindTexture(A.TEXTURE_2D,o),n=n instanceof Float32Array?n:new Float32Array(n),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,A.NEAREST),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,A.NEAREST),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,h),A.texImage2D(A.TEXTURE_2D,0,A.RGBA,e,t,0,A.RGBA,A.FLOAT,n),A.bindTexture(A.TEXTURE_2D,null),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,!1),E&&(I.U(),F.xa(A)),A.viewport(0,0,e,t),A.framebufferTexture2D(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,A.TEXTURE_2D,i,0),A.bindTexture(A.TEXTURE_2D,o),E?H.l(!0,!0):H.Ja(A),A.deleteTexture(o),a&&(r[0]=-1,l=null,C=0)},jb:function(A){A!==C&&(G.activeTexture(n[A]),C=A)},instance:function(E){function a(){Q=void 0!==R.C.videoWidth?R.C.videoWidth:R.C.width,Y=void 0!==R.C.videoHeight?R.C.videoHeight:R.C.height}function v(A){var i=G.getError();return"FUCKING_BIG_ERROR"!==i&&(G.texImage2D(G.TEXTURE_2D,0,tA,CA,nA,A),(i=G.getError())!==G.NO_ERROR&&CA!==G.RGBA&&(CA=G.RGBA,G.texImage2D(G.TEXTURE_2D,0,tA,CA,nA,A)),!0)}function M(){if(!Z){if(A(W),hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,hA),R.isPot?(G.texParameteri(G.TEXTURE_2D,G.TEXTURE_WRAP_S,R.isMirrorX?G.MIRRORED_REPEAT:G.REPEAT),G.texParameteri(G.TEXTURE_2D,G.TEXTURE_WRAP_T,R.isMirrorY?G.MIRRORED_REPEAT:G.REPEAT)):(G.texParameteri(G.TEXTURE_2D,G.TEXTURE_WRAP_S,G.CLAMP_TO_EDGE),G.texParameteri(G.TEXTURE_2D,G.TEXTURE_WRAP_T,G.CLAMP_TO_EDGE)),R.isAnisotropicFiltering&&"undefined"!=typeof JESETTINGS&&G.texParameterf(G.TEXTURE_2D,JEContext.Kf().TEXTURE_MAX_ANISOTROPY_EXT,JESETTINGS.sf),G.texParameteri(G.TEXTURE_2D,G.TEXTURE_MAG_FILTER,R.isLinear?G.LINEAR:G.NEAREST),R.isLinear?G.texParameteri(G.TEXTURE_2D,G.TEXTURE_MIN_FILTER,R.isMipmap&&!EA?G.NEAREST_MIPMAP_LINEAR:G.LINEAR):G.texParameteri(G.TEXTURE_2D,G.TEXTURE_MIN_FILTER,R.isMipmap&&!EA?G.NEAREST_MIPMAP_NEAREST:G.NEAREST),CA=k[R.Ua-1],tA=g[R.Ua-1],nA=o[O],y.X()){var i=y.ce();CA===G.RGBA&&nA===G.FLOAT?R.isMipmap||R.isLinear?tA=b.ee(G):y.lc()?i&&(tA=i):tA=G.RGBA16F||G.RGBA:CA===G.RGB&&nA===G.FLOAT&&i&&(tA=i,CA=G.RGBA)}if((R.G&&!R.isFloat||R.isFloat&&R.isMipmap&&b.ze())&&(tA=y.de(),nA=y.tb(G)),R.Hb&&(oA=R.Hb),R.isSrgb&&4===R.Ua&&(CA=JEContext.Rf()),R.C)v(R.C);else if(R.url)v(z);else if(q){i=q;try{"FUCKING_BIG_ERROR"!==G.getError()&&(G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,i),G.getError()!==G.NO_ERROR&&(G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,null),G.getError()!==G.NO_ERROR&&G.texImage2D(G.TEXTURE_2D,0,G.RGBA,Q,Y,0,G.RGBA,G.UNSIGNED_BYTE,null)))}catch(A){G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,null)}R.isKeepArray||(q=null)}else"FUCKING_BIG_ERROR"!==(i=G.getError())&&(G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,null),(i=G.getError())!==G.NO_ERROR&&(CA=G.RGBA,R.G&&nA!==G.FLOAT&&(nA=G.FLOAT,G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,null))));if(R.isMipmap)if(!EA&&DA)DA.sb(),kA=!0;else if(EA){i=Math.log2(Math.min(Q,Y)),(lA=Array(1+i))[0]=W;for(var e=1;e<=i;++e){var t=Math.pow(2,e),n=Q/t;t=Y/t;var h=G.createTexture();A(h),G.texParameteri(G.TEXTURE_2D,G.TEXTURE_MIN_FILTER,G.NEAREST),G.texParameteri(G.TEXTURE_2D,G.TEXTURE_MAG_FILTER,G.NEAREST),G.texImage2D(G.TEXTURE_2D,0,tA,n,t,0,CA,nA,null),A(null),lA[e]=h}kA=!0}A(null),r[C]=-1,hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!1),X=!0,R.ba&&DA&&(R.ba(DA),R.ba=null)}}function S(){for(var A=Q*Y,i=2*A,e=3*A,t=0;t<A;++t)$[0][t]=eA[t],$[1][t]=eA[t+A],$[2][t]=eA[t+i],$[3][t]=eA[t+e]}function T(){var A=Q*Y*4;AA=[new Uint8Array(A),new Uint8Array(A),new Uint8Array(A),new Uint8Array(A)],$=[new Float32Array(AA[0].buffer),new Float32Array(AA[1].buffer),new Float32Array(AA[2].buffer),new Float32Array(AA[3].buffer)],iA=new Uint8Array(4*A),eA=new Float32Array(iA.buffer),_=!0}function L(){gA.lb=new Uint8Array(Q*Y*4),gA.wc=new Float32Array(gA.buffer),gA.Db=!0}var R=Object.assign({},B,E),P=h++;null===R.isFlipY&&(R.isFlipY=!(!R.url&&!R.array)),R.data&&(R.array="string"==typeof R.data?function(A){var e=JSON.parse(A);A=e.ne;var t=e.nf,C=e.n,n="undefined"==typeof btoa?i.from(e.data,"base64").toString("latin1"):atob(e.data),h=n.length;e=new Uint8Array(h);for(var r=0;r<h;++r)e[r]=n.charCodeAt(r);n=new Float32Array(C),h=new Float32Array(t),r=A+t+1;for(var E=0;E<C;++E){for(var l=r*E,o=0===D(e,l)?1:-1,k=l+1,g=1,a=0,s=k+A-1;s>=k;--s)a+=g*D(e,s),g*=2;for(k=a,l=l+1+A,g=h.length,a=0,s=l;s<l+g;++s)h[a]=D(e,s),++a;for(g=l=0;g<t;++g)l+=h[g]*Math.pow(2,-g-1);n[E]=0===l&&0===k?0:o*(1+l)*Math.pow(2,1+k-Math.pow(2,A-1))}return n}(R.data):R.isFloat?new Float32Array(R.data):new Uint8Array(R.data),R.isFlipY=!1);var O=0,N=!!R.C,J=null,K=null,U=!1,V=null;R.G=R.G||R.isFloat,R.G&&(O=1),!R.ve&&R.isFloat&&p&&!y.lc()&&(R.isFloat=!1),R.isFloat&&(O=2),R.isAnisotropicFiltering&&d&&!JEContext.Wf()&&(R.isAnisotropicFiltering=!1);var W=R.Bc||G.createTexture(),z=null,q=!1,Q=0,Y=0,X=!1,Z=!1,_=!1,$=null,AA=null,iA=null,eA=null,tA=null,CA=null,nA=null,hA=R.isFlipY,rA=(E=R.G&&R.isMipmap)&&b.Gd(),EA=!(!E||!rA),lA=null,oA=-1,kA=!1,gA={Db:!1,lb:null,wc:null};R.width&&(Q=R.width,Y=R.height?R.height:Q);var DA={get:function(){return W},A:function(){return Q},J:function(){return Y},Uf:function(){return R.url},Xf:function(){return R.isFloat},Zf:function(){return R.G},$f:function(){return R.isLinear},sb:function(){G.generateMipmap(G.TEXTURE_2D)},Ed:function(i,e){EA?(i||(i=DA.zc()),w.jb(e),A(lA[i]),r[e]=-1):DA.g(e)},zc:function(){return-1===oA&&(oA=Math.log(Q)/Math.log(2)),oA},Zd:function(i){if(EA){i||(i=DA.zc()),F.set("s11"),w.jb(0);for(var e=Q,t=Y,C=1;C<=i;++C)e/=2,t/=2,F.ea("u7",.25/e,.25/t),G.viewport(0,0,e,t),A(lA[C-1]),G.framebufferTexture2D(I.Na(),G.COLOR_ATTACHMENT0,G.TEXTURE_2D,lA[C],0),H.l(!1,1===C);r[0]=-1}else DA.sb()},gg:function(A){(N=!(Array.isArray(A)||A.constructor===Float32Array||A.constructor===Uint8Array))?(q=null,R.C=A,a()):q=A},g:function(i){return!!X&&(w.jb(i),r[i]!==P&&(A(W),r[i]=P,!0))},ic:function(i){G.activeTexture(n[i]),C=i,A(W),r[i]=P},u:function(){l=DA,G.framebufferTexture2D(I.Na(),G.COLOR_ATTACHMENT0,G.TEXTURE_2D,W,0)},P:function(){l=DA,G.viewport(0,0,Q,Y),G.framebufferTexture2D(I.Na(),G.COLOR_ATTACHMENT0,G.TEXTURE_2D,W,0)},$b:w.$b,resize:function(A,i){Q=A,Y=i,M()},clone:function(A){return A=w.instance({width:Q,height:Y,G:R.G,isFloat:R.isFloat,isLinear:R.isLinear,isMirrorY:R.isMirrorY,isFlipY:A?!hA:hA,isPot:R.isPot}),f.set("s0"),I.U(),A.u(),G.viewport(0,0,Q,Y),DA.g(0),H.l(!0,!0),A},bf:function(){G.viewport(0,0,Q,Y)},remove:function(){G.deleteTexture(W),Z=!0,s.splice(s.indexOf(DA),1),DA=null},refresh:function(){DA.ic(0),hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!0),N?G.texImage2D(G.TEXTURE_2D,0,tA,CA,G.UNSIGNED_BYTE,R.C):G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,q),hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!1)},Qb:function(){return _||T(),G.readPixels(0,0,Q,4*Y,G.RGBA,G.UNSIGNED_BYTE,iA),S(),$},Me:function(){return _||T(),y.Rb(0,0,Q,4*Y,iA).then((function(){return S(),$}))},Oe:function(){return gA.Db||L(),G.readPixels(0,0,Q,Y,G.RGBA,G.UNSIGNED_BYTE,gA.lb),gA.wc},Ne:function(){return gA.Db||L(),y.Rb(0,0,Q,Y,gA.lb)},qb:function(A){if(I.M(),F.set("s12"),DA.g(0),A)G.viewport(0,0,Q,Y),F.Tb("u8",.25,.25,.25,.25),H.l(!1,!0);else for(A=0;4>A;++A)G.viewport(0,Y*A,Q,Y),F.Tb("u8",u[A]),H.l(!1,0===A)},qg:function(i){var e=nA===o[0]&&!function(){if(null!==x.zb)return x.zb;var A=t(new Uint8Array([127,127,127,127]));return null===A||(x.zb=A)}();A(W),hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!0),e?(U||((J=document.createElement("canvas")).width=Q,J.height=Y,K=J.getContext("2d"),V=K.createImageData(Q,Y),U=!0),V.data.set(i),K.putImageData(V,0,0),G.texImage2D(G.TEXTURE_2D,0,tA,CA,nA,J)):G.texImage2D(G.TEXTURE_2D,0,tA,Q,Y,0,CA,nA,i),r[C]=P,hA&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!1)},rg:function(i,e){A(W),e&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!0),G.texImage2D(G.TEXTURE_2D,0,tA,CA,nA,i),r[C]=P,e&&G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,!1)},eg:function(A,i){var e=Q*Y,t=4*e;A=R.G?A?"RGBE":"JSON":"RGBA",i&&(A=i),i=y.X()&&!1;var C=null;switch(A){case"RGBE":C="s42";break;case"JSON":C=i?"s0":"s12";break;case"RGBA":case"RGBAARRAY":C="s6"}if(_||("RGBA"===A||"RGBE"===A||"RGBAARRAY"===A?(AA=new Uint8Array(t),_=!0):"JSON"!==A||i||T()),I.M(),F.set(C),DA.g(0),t=null,"RGBA"===A||"RGBE"===A||"RGBAARRAY"===A){if(G.viewport(0,0,Q,Y),H.l(!0,!0),G.readPixels(0,0,Q,Y,G.RGBA,G.UNSIGNED_BYTE,AA),"RGBAARRAY"===A)return{data:AA};j||(m=document.createElement("canvas"),c=m.getContext("2d"),j=!0),m.width=Q,m.height=Y,(e=c.createImageData(Q,Y)).data.set(AA),c.putImageData(e,0,0),t=m.toDataURL("image/png")}else if("JSON"===A)if(i)t=new Float32Array(e),G.viewport(0,0,Q,Y),H.l(!0,!0),G.readPixels(0,0,Q,Y,G.RGBA,G.FLOAT,t);else{for(t=0;4>t;++t)G.viewport(0,Y*t,Q,Y),F.Tb("u8",u[t]),H.l(!t,!t);for(DA.Qb(),t=Array(e),i=0;i<e;++i)t[4*i]=$[0][i],t[4*i+1]=$[1][i],t[4*i+2]=$[2][i],t[4*i+3]=$[3][i]}return{format:A,data:t,width:Q,height:Y,isMirrorY:R.isMirrorY,isFlipY:"RGBA"===A?R.isFlipY:!R.isFlipY}}};if(R.isMipmap&&!EA&&X&&!kA&&(DA.sb(),kA=!0),R.url)A(W),G.texImage2D(G.TEXTURE_2D,0,G.RGBA,1,1,0,G.RGBA,G.UNSIGNED_BYTE,null),(z=new Image).Af="Anonymous",z.crossOrigin="Anonymous",z.src=R.url,z.onload=function(){Q=z.width,Y=z.height,M()};else if(R.C){!function A(){a(),Q?M():setTimeout(A,1)}()}else R.array?(R.G&&!R.isFloat?R.array instanceof Uint16Array?(q=R.array,M()):function(){if(null!==x.yb)return x.yb;var A=t(e([.5,.5,.5,.5]));return null===A||(x.yb=A)}()?(q=e(R.array),M()):(M(),w.uc(G,W,DA.A(),DA.J(),R.array,hA,!0)):(q=R.isFloat?R.array instanceof Float32Array?R.array:new Float32Array(R.array):R.array instanceof Uint8Array?R.array:new Uint8Array(R.array),M()),R.isKeepArray||(q&&q!==R.array&&(q=null),delete R.array)):R.Bc?X=!0:M();return DA.Qf=DA.A,R.ba&&X&&(R.ba(DA),R.ba=null),s.push(DA),DA},M:function(i){i!==C&&(G.activeTexture(n[i]),C=i),r[i]=-1,A(null)},vf:function(A){E.random.g(A)},$b:function(){l=null,G.framebufferTexture2D(I.Na(),G.COLOR_ATTACHMENT0,G.TEXTURE_2D,null,0)},reset:function(){0!==C&&G.activeTexture(n[0]);for(var A=0;A<n.length;++A)r[A]=-1;C=-1},dg:function(){C=-1},hf:function(){for(var A=0;A<n.length;++A)w.M(A)},xc:function(){E&&(E.random.remove(),E.td.remove())},pg:function(A,i){if("RGBA"===A.format||"RGBE"===A.format){var e=new Image;e.src=A.data,e.onload=function(){w.instance({isMirrorY:A.isMirrorY,isFlipY:A.isFlipY,isFloat:!1,C:e,ba:function(e){if("RGBA"===A.format)i(e);else{var t=A.width,C=A.height,n=w.instance({isMirrorY:A.isMirrorY,isFloat:!0,width:t,height:C,isFlipY:A.isFlipY});I.U(),G.viewport(0,0,t,C),F.set("s43"),n.u(),e.g(0),H.l(!0,!0),w.M(0),i(n),G.flush(),setTimeout(e.remove,50)}}})}}else"JSON"===A.format?i(w.instance({isFloat:!0,isFlipY:A.isFlipY,width:A.width,height:A.height,array:new Float32Array(A.data)})):i(!1)},Ld:e,m:function(){l&&(I.U(),w.$b(),I.M()),w.hf(),s.slice(0).forEach((function(A){A.remove()})),s.splice(0),a=!1,h=0,void 0!==b&&b.m(),E=null}};return w}(),v=function(A){var i=[p.instance(A),p.instance(A)],e=[i[1],i[0]],t=e,C={nd:function(A){t[1].u(),t[0].g(A),C.rd()},fg:function(A){t[1].P(),t[0].g(A),C.rd()},rd:function(){t=t===i?e:i},refresh:function(){t[0].refresh(),t[1].refresh()},g:function(A){t[0].g(A)},uf:function(A){t[1].g(A)},he:function(){return t[0]},Of:function(){return t[1]},remove:function(){t[0].remove(),t[1].remove(),t=null}};return C},H=function(){function A(A){var i={T:null,F:null};return i.T=A.createBuffer(),A.bindBuffer(A.ARRAY_BUFFER,i.T),A.bufferData(A.ARRAY_BUFFER,new Float32Array([-1,-1,3,-1,-1,3]),A.STATIC_DRAW),i.F=A.createBuffer(),A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,i.F),A.bufferData(A.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2]),A.STATIC_DRAW),i}var i=null,e=0,t=!1,C=[],n=-2,h=-2,r={reset:function(){h=n=-2},s:function(){t||(i=A(G),r.kb(),t=!0)},instance:function(A){var i=e++,t=A.F?A.F.length:0,r=void 0===A.mode?G.STATIC_DRAW:A.mode,E=G.createBuffer();G.bindBuffer(G.ARRAY_BUFFER,E),G.bufferData(G.ARRAY_BUFFER,A.T instanceof Float32Array?A.T:new Float32Array(A.T),r),n=i;var l=null,o=null,k=null;if(A.F){l=G.createBuffer(),G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,l);var g=null;65536>A.F.length?(g=Uint16Array,o=G.UNSIGNED_SHORT,k=2):(g=Uint32Array,o=G.UNSIGNED_INT,k=4),g=A.F instanceof g?A.F:new g(A.F),G.bufferData(G.ELEMENT_ARRAY_BUFFER,g,r),h=i}var D={Fd:function(A){n!==i&&(G.bindBuffer(G.ARRAY_BUFFER,E),n=i),A&&f.Ub()},Cd:function(){h!==i&&(G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,l),h=i)},bind:function(A){D.Fd(A),D.Cd()},Bf:function(){G.drawElements(G.TRIANGLES,t,o,0)},Cf:function(A,i){G.drawElements(G.TRIANGLES,A,o,i*k)},remove:function(){G.deleteBuffer(E),A.F&&G.deleteBuffer(l),D=null}};return C.push(D),D},kb:function(){-1!==n&&(G.bindBuffer(G.ARRAY_BUFFER,i.T),n=-1),-1!==h&&(G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,i.F),h=-1)},l:function(A,i){A&&H.kb(),i&&f.Za(),G.drawElements(G.TRIANGLES,3,G.UNSIGNED_SHORT,0)},Ja:function(i){var e=A(i=i||G);i.bindBuffer(i.ARRAY_BUFFER,e.T),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.F),f.$a(i),i.clear(i.COLOR_BUFFER_BIT),i.drawElements(i.TRIANGLES,3,i.UNSIGNED_SHORT,0),i.flush(),i.bindBuffer(i.ARRAY_BUFFER,null),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,null),i.deleteBuffer(e.T),i.deleteBuffer(e.F),r.reset(),t&&(r.kb(),f.Za())},xc:function(){var A=G,e=i;A.deleteBuffer(e.T),A.deleteBuffer(e.F)},m:function(){r.xc(),C.forEach((function(A){A.remove()})),G.bindBuffer(G.ARRAY_BUFFER,null),G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,null),r.reset(),t=!1,C.splice(0),e=0}};return r}(),I=(a=null,s=null,B=null,j=!1,m=[],c={D:-2,tc:1},u={Sa:function(){return j},s:function(){if(!j){a=G.createFramebuffer();var A=y.X();s=A&&G.DRAW_FRAMEBUFFER?G.DRAW_FRAMEBUFFER:G.FRAMEBUFFER,B=A&&G.READ_FRAMEBUFFER?G.READ_FRAMEBUFFER:G.FRAMEBUFFER,j=!0}},Lf:function(){return s},fe:function(){return B},Na:function(){return G.FRAMEBUFFER},Pf:function(){return c},Ef:function(){return a},instance:function(A){void 0===A.Ic&&(A.Ic=!1);var i=A.pa?A.pa:null,e=A.width,t=void 0!==A.height?A.height:A.width,C=a,n=null,h=!1,r=!1,E=0;i&&(e=e||i.A(),t=t||i.J());var l={md:function(){h||(C=G.createFramebuffer(),h=!0,E=c.tc++)},xd:function(){l.md(),l.u(),n=G.createRenderbuffer(),G.bindRenderbuffer(G.RENDERBUFFER,n),G.renderbufferStorage(G.RENDERBUFFER,G.DEPTH_COMPONENT16,e,t),G.framebufferRenderbuffer(s,G.DEPTH_ATTACHMENT,G.RENDERBUFFER,n),G.clearDepth(1)},bind:function(A,n){E!==c.D&&(G.bindFramebuffer(s,C),c.D=E),i&&i.u(),n&&G.viewport(0,0,e,t),A&&G.clear(G.COLOR_BUFFER_BIT|G.DEPTH_BUFFER_BIT)},tf:function(){E!==c.D&&(G.bindFramebuffer(s,C),c.D=E)},clear:function(){G.clear(G.COLOR_BUFFER_BIT|G.DEPTH_BUFFER_BIT)},yf:function(){G.clear(G.COLOR_BUFFER_BIT)},zf:function(){G.clear(G.DEPTH_BUFFER_BIT)},bf:function(){G.viewport(0,0,e,t)},u:function(){E!==c.D&&(G.bindFramebuffer(s,C),c.D=E)},rtt:function(A){i=A,c.D!==E&&(G.bindFramebuffer(G.FRAMEBUFFER,C),c.D=E),A.u()},M:function(){G.bindFramebuffer(s,null),c.D=-1},resize:function(A,i){e=A,t=i,n&&(G.bindRenderbuffer(G.RENDERBUFFER,n),G.renderbufferStorage(G.RENDERBUFFER,G.DEPTH_COMPONENT16,e,t))},remove:function(){C===a||r||(G.bindFramebuffer(s,C),G.framebufferTexture2D(s,G.COLOR_ATTACHMENT0,G.TEXTURE_2D,null,0),n&&G.framebufferRenderbuffer(s,G.DEPTH_ATTACHMENT,G.RENDERBUFFER,null),G.bindFramebuffer(s,null),G.deleteFramebuffer(C),n&&G.deleteRenderbuffer(n)),r=!0}};return A.Ic&&l.xd(),m.push(l),l},M:function(){G.bindFramebuffer(s,null),c.D=-1},jf:function(){G.bindFramebuffer(s,null),G.clear(G.COLOR_BUFFER_BIT|G.DEPTH_BUFFER_BIT),G.viewport(0,0,y.A(),y.J()),c.D=-1},reset:function(){c.D=-2},U:function(){0!==c.D&&(G.bindFramebuffer(s,a),c.D=0)},clear:function(){G.viewport(0,0,y.A(),y.J()),G.clear(G.COLOR_BUFFER_BIT)},m:function(){u.M(),m.forEach((function(A){A.remove()})),null!==a&&(G.deleteFramebuffer(a),a=null),u.reset(),j=!1,m.splice(0),c.tc=1}}),y=function(){function A(){t=void 0===d?JEContext:d,C=!0}function i(A,i){for(var e=0;e<A.length;++e){var t=i.getExtension(A[e]);if(t)return t}return null}function e(){null!==g.cb&&(clearInterval(g.cb),g.cb=null),g.ua=!1}var t=null,C=!1,n={Jc:!1,Wb:null,Xb:null,Mc:!1,ye:!1,Yb:null,Nc:!1,Zb:null,Kc:!1,mb:null,se:!1,nb:null,te:!1},h=null,r={V:!0,W:!0,rb:!0,ed:!1},E=null,l=!0,o=null,k=null,g={ua:!1,ja:null,Oa:null,wb:-1,ka:null,cb:null},D="undefined"==typeof window?{}:window,a={s:function(){if(C)return!0;a.reset(),C||A();var i=G;return h.Jc||(h.Wb=a.qc(i),D.GL_EXT_FLOAT=h.Wb,h.Mc=!!h.Wb,(h.Mc||a.X())&&(h.Xb=a.rc(i),h.ye=!!h.Xb,D.GL_EXT_FLOATLINEAR=h.Xb),h.Jc=!0),h.Kc||(h.Yb=a.Ia(i),h.Yb&&(h.Nc=!0,D.GL_EXT_HALFFLOAT=h.Yb),(h.Nc||a.X())&&(h.Zb=a.sc(i),D.GL_EXT_HALFFLOATLINEAR=h.Zb),h.Vf=!!h.Zb,h.Kc=!0),h.mb=a.oc(i),h.se=!!h.mb,D.GL_EXT_COLORBUFFERFLOAT=h.mb,h.nb=a.pc(i),h.te=!!h.nb,D.GL_EXT_COLORBUFFERHALFFLOAT=h.nb,I.s(),p.s(),!!a.Rd()&&(H.s(),p.pe(),!0)},reset:function(){h=Object.assign({},n),E=Object.assign({},r)},A:function(){return C||A(),t.A()},J:function(){return C||A(),t.J()},X:function(){return C||A(),t.X()},nc:function(A){a.oc(A),a.pc(A),a.qc(A),a.rc(A),a.Ia(A),a.sc(A)},oc:i.bind(null,["EXT_color_buffer_float","WEBGL_color_buffer_float","OES_color_buffer_float"]),pc:i.bind(null,["EXT_color_buffer_half_float","WEBGL_color_buffer_half_float","OES_color_buffer_half_float"]),qc:i.bind(null,["OES_texture_float","MOZ_OES_texture_float","WEBKIT_OES_texture_float"]),rc:i.bind(null,["OES_texture_float_linear","MOZ_OES_texture_float_linear","WEBKIT_OES_texture_float_linear"]),Ia:i.bind(null,["OES_texture_half_float","MOZ_OES_texture_half_float","WEBKIT_OES_texture_half_float"]),sc:i.bind(null,["OES_texture_half_float_linear","MOZ_OES_texture_half_float_linear","WEBKIT_OES_texture_half_float_linear"]),tb:function(A){var i=a.Ia(A);return i&&i.HALF_FLOAT_OES?i.HALF_FLOAT_OES:A.HALF_FLOAT||A.FLOAT},ce:function(){return k||G.RGBA32F||G.RGBA},de:function(){return o||G.RGBA16F||G.RGBA},$d:function(){return E},lc:function(){return E.V},xf:function(){return E.W},wf:function(){return E.rb},Hd:function(){return E.ed&&l},sd:function(A){l=A,!A&&g.ua&&(G.deleteSync(g.Oa),G.bindBuffer(g.ka,null),g.ua=!1)},bb:function(A,i,e){function t(){A.bindTexture(A.TEXTURE_2D,null),A.bindFramebuffer(C,null),A.deleteTexture(r),A.deleteFramebuffer(h)}var C=A.FRAMEBUFFER,n=A.NEAREST,h=A.createFramebuffer();A.bindFramebuffer(C,h);var r=A.createTexture();if(A.activeTexture(A.TEXTURE0),A.bindTexture(A.TEXTURE_2D,r),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,!1),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,n),A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,n),A.texImage2D(A.TEXTURE_2D,0,i,3,3,0,A.RGBA,e,null),A.framebufferTexture2D(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,A.TEXTURE_2D,r,0),A.checkFramebufferStatus(A.READ_FRAMEBUFFER||A.FRAMEBUFFER)!==A.FRAMEBUFFER_COMPLETE)return t(),!1;for(f.Sb(A),A.clearColor(0,0,0,0),A.viewport(0,0,3,3),A.disable(A.DEPTH_TEST),A.clear(A.COLOR_BUFFER_BIT),H.Ja(A),A.bindFramebuffer(C,null),f.xa(A),A.activeTexture(A.TEXTURE0),A.bindTexture(A.TEXTURE_2D,r),H.Ja(A),i=new Uint8Array(36),A.readPixels(0,0,3,3,A.RGBA,A.UNSIGNED_BYTE,i),t(),e=0;36>e;++e)if(3!=e%4&&3<Math.abs(i[e]-127))return!1;return!0},pb:function(A){var i={V:!1,W:!1};A.disable(A.BLEND),A.clearColor(0,0,0,0),A.clear(A.COLOR_BUFFER_BIT),A.RGBA32F&&a.bb(A,A.RGBA32F,A.FLOAT)&&(i.V=!0,k=A.RGBA32F),!i.V&&a.bb(A,A.RGBA,A.FLOAT)&&(i.V=!0,k=A.RGBA);var e=a.tb(A);return o=null,A.RGBA16F&&a.bb(A,A.RGBA16F,e)&&(i.W=!0,o=A.RGBA16F),!i.W&&a.bb(A,A.RGBA,e)&&(i.W=!0,o=A.RGBA),i},Sd:function(){var A=I.instance({width:2});A.md();var i=p.instance({width:2,isFloat:!0,Ua:3});A.u(),i.u(),G.flush(),G.checkFramebufferStatus(I.fe())!==G.FRAMEBUFFER_COMPLETE?(p.Ze(),E.rb=!1):E.rb=!0,A.remove(),i.remove()},Td:function(){var A=!1;a.X()&&(A="PIXEL_PACK_BUFFER STREAM_READ SYNC_GPU_COMMANDS_COMPLETE WAIT_FAILED fenceSync deleteSync createBuffer".split(" ").every((function(A){return void 0!==G[A]}))),E.ed=A},Rd:function(){var A=a.pb(G);return Object.assign(E,A),!(!E.V&&!E.W)&&(a.Sd(),a.Td(),!0)},Rb:function(A,i,t,C,n){return a.Hd()?(null===g.ja&&(g.ka=G.PIXEL_PACK_BUFFER,g.ja=G.createBuffer(),g.wb=-1),G.bindBuffer(g.ka,g.ja),n.byteLength!==g.wb&&(G.bufferData(g.ka,n.byteLength,G.STREAM_READ),g.wb=n.byteLength),G.readPixels(A,i,t,C,G.RGBA,G.UNSIGNED_BYTE,0),g.Oa=G.fenceSync(G.SYNC_GPU_COMMANDS_COMPLETE,0),G.flush(),new Promise((function(A,i){function t(){if(!g.ua)return e(),i(),!1;switch(G.clientWaitSync(g.Oa,0,0)){case G.TIMEOUT_EXPIRED:return!1;case G.WAIT_FAILED:return e(),i(),!1;default:return e(),G.deleteSync(g.Oa),G.getBufferSubData(g.ka,0,n),G.bindBuffer(g.ka,null),A(n),!0}}e(),g.ua=!0,t()||(g.cb=setInterval(t,0))}))):(G.readPixels(A,i,t,C,G.RGBA,G.UNSIGNED_BYTE,n),Promise.resolve(n))},m:function(){e(),p.m(),f.m(),I.m(),H.m(),null!==g.ja&&(G.deleteBuffer(g.ja),g.ja=null),C=!1}};return a}(),b=function(){function A(A,i,e,t){j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,t?j.NEAREST_MIPMAP_NEAREST:j.LINEAR);var C=null;if(null!==e)try{if("FUCKING_BIG_ERROR"===(C=j.getError()))return!1;if(j.texImage2D(j.TEXTURE_2D,0,A,4,4,0,j.RGBA,i,e),(C=j.getError())!==j.NO_ERROR)return!1}catch(A){return!1}if(t&&j.generateMipmap(j.TEXTURE_2D),j.clear(j.COLOR_BUFFER_BIT),H.Ja(j),"FUCKING_BIG_ERROR"===(C=j.getError()))return!1;if(j.readPixels(0,0,2,2,j.RGBA,j.UNSIGNED_BYTE,k),(C=j.getError())===j.INVALID_OPERATION&&void 0!==j.PIXEL_PACK_BUFFER&&(j.bindBuffer(j.PIXEL_PACK_BUFFER,null),j.readPixels(0,0,2,2,j.RGBA,j.UNSIGNED_BYTE,k),C=j.getError()),C!==j.NO_ERROR)return!1;for(e=!0,t=0;16>t;++t)e=e&&4>Math.abs(k[t]-127);return e&&(l.Yc=i,l.Hc=A),e}function i(i,e){return!(!m.V||!A(i,j.FLOAT,new Float32Array(g),e))&&(E=r.cc,!0)}function t(i,e,t){if(!m.W)return!1;var C=p.Ld(g),n=y.Ia(j);return n&&n.HALF_FLOAT_OES&&A(i,n.HALF_FLOAT_OES,C,e)||j.HALF_FLOAT&&A(i,j.HALF_FLOAT,C,e)?(E=r.qa,!0):(C=new Float32Array(g),A(i,j.FLOAT,C,e)?(E=r.qa,!0):(j.bindTexture(j.TEXTURE_2D,t),j.texImage2D(j.TEXTURE_2D,0,j.RGBA,2,2,0,j.RGBA,j.UNSIGNED_BYTE,null),j.bindFramebuffer(l.Ga,d),p.uc(j,t,2,2,C,!1,!1),j.bindFramebuffer(l.Ga,null),j.bindTexture(j.TEXTURE_2D,t),!!A(i,null,null,e)&&(E=r.qa,!0)))}function C(A,e,C){return o=!0,!(!t(A,!0,C)&&!i(e,!0))||(o=!1,!(!t(A,!1,C)&&!i(e,!1)))}function n(A){if(E===r.N){j=A||G,E=r.RGBA8,o=!0,y.nc(j),m||(m=y.pb(j)),I.reset(),d=j.createFramebuffer(),l.Ga=j.DRAW_FRAMEBUFFER||j.FRAMEBUFFER,j.bindFramebuffer(l.Ga,null),j.clearColor(0,0,0,0),j.viewport(0,0,2,2),F.N(),c=F.xa(j),A=j.createTexture(),j.activeTexture(j.TEXTURE0),j.bindTexture(j.TEXTURE_2D,A),j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.REPEAT),j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.REPEAT),j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.NEAREST),u=A;var i=A=j.RGBA,e=j.RGBA16F,t=j.RGBA32F;return t&&(A=t),e&&(i=e),(e||t)&&C(i,A,u)?(h(),!0):(A=i=j.RGBA,C(i,A,u)?(h(),!0):(E=r.RGBA8,h(),!1))}}function h(){j.deleteProgram(c.da),j.deleteTexture(u),u=c=null}for(var r={N:-1,cc:3,qa:2,RGBA8:0},E=r.N,l={Yc:null,Hc:null,Ga:null},o=!0,k=new Uint8Array(16),g=Array(64),D=0;4>D;++D)for(var a=0;4>a;++a){var s=0==(a+D)%2?1:0,B=4*D+a;g[4*B]=s,g[4*B+1]=s,g[4*B+2]=s,g[4*B+3]=s}var j=null,m=null,c=null,u=null,d=null;return{Gd:function(A){return n(A),o},kc:function(A,i){return E===r.N&&(e("undefined"!==i)&&(m=i),n(A)),E!==r.RGBA8},Yf:function(A){return n(A),E===r.cc},ze:function(A){return n(A),E===r.qa},Mf:function(A){return n(A),l.Yc},ee:function(A){return n(A),l.Hc},m:function(){j=null,o=!0,E=r.N,m=null}}}(),M=function(A){var i=p.instance(A.alpha),e=p.instance(A.beta);return{Vd:function(){i.g(1),e.g(2)}}},x=function(A){var i=null,e=!1,t=!1,C=null,n=!1,h=!1,r=null,E=void 0!==A.preprocessing&&A.preprocessing,l=void 0===A.preprocessingSize?A.size:A.preprocessingSize;A.mask&&(e=!0,CA&&void 0!==CA.Bd&&(A.mask=CA.Bd+A.mask),i=p.instance({isFloat:!1,url:A.mask}));var o=!1;switch(A.customInputShader&&(o="s44",F.dc({name:"_",id:o,h:A.customInputShader,og:["uSource"],precision:"lowp"}),F.I(o,[{type:"1i",name:"_",value:0}])),E){case"sobel":r="s31",n=!0;break;case"meanNormalization":r="s32",n=!0;break;case"grayScale":r="s28",n=!1;break;case"grayScaleTilt":r="s29",h=!0,n=!1;break;case"rgbGrayTilt":r="s30",h=!0,n=!1;break;case"copy":r=o||"s0";break;case"inputLightRegulation":r=o||"s28",C=N.instance({Gc:l,Xc:A.size,Tc:A.nBlurPass,Ra:!1}),t=!0;break;case"inputMix0":r="none",C=J.instance({ga:l,vd:A.varianceMin,jc:A.blurKernelSizePx,Ra:!1}),t=!0;break;case"direct":case"none":r="abort";break;default:r="s3"}h&&F.I(r,[{name:"u26",type:"1f",value:A.tilt}]),e&&(r+="Mask");var k=p.instance({isFloat:!1,isPot:!1,width:A.size}),g={A:function(){return l},ub:function(){return g.A()},le:function(){return t?C.vb():k},K:function(h){I.U(),"abort"!==r&&("none"!==r&&(F.set(r),n&&F.L("u27",1/A.size),k.P(),e&&i.g(1),H.l(!1,!1),k.g(0),h=k),t&&C.process(h))},m:function(){k.remove(),e&&i.remove()}};return g},w=function(A){function i(A){return C.forEach((function(i,e){n[e][0]=A[0][i],n[e][1]=A[1][i],n[e][2]=A[2][i],n[e][3]=A[3][i]})),n}void 0===A.normalize&&(A.normalize=!1);var e={input:null,Ea:null,Ab:null,S:null,Va:null,Nb:null,Ob:null},t=null,C=[],n=[],h=!1,r=null,E=!0,l=-1,o=!!A.isReorganize&&A.isReorganize,k=!!A.kernelsCount,g=!!A.dynPelu&&M(A.dynPelu),D=!!g,a={isEnabled:!1};A.xe?(A.sparsity=void 0!==A.sparsity?A.sparsity:A.Xa.ub(),E=!1):"full"===A.connectivityUp&&(A.sparsity=A.Xa.ub());var s={elu:"s15",elu01:"s16",relu:"s14",arctan:"s18",sigmoid:"s13",copy:"s0",softplus:"s19",dynPelu:"s17"}[A.activation],B=A.sparsity*A.sparsity,j=!1,m=A.size,c="";if(A.maxPooling){switch(A.maxPooling.size){case 2:c="s33";break;case 4:c="s34"}j=!0,m/=A.maxPooling.size,e.Nb=p.instance({isFloat:!0,isPot:!1,width:m})}var u=!(void 0===A.Ee||!A.Ee),G=null,d=null,f=null;if(u){G="s45"+A.index.toString(),F.Ec("s45",G,[((A.normalization.n-1)/2).toFixed(1)]),F.I(G,[{type:"1i",name:"u1",value:0},{type:"2f",name:"u7",value:[1/A.size,1/A.size]},{type:"1f",name:"u6",value:A.normalization.alpha},{type:"1f",name:"u9",value:A.normalization.beta},{type:"1f",name:"u30",value:A.normalization.k}]);var v={isFloat:!0,isPot:!0,width:A.size};d=p.instance(v),f=p.instance(v)}var I=-1,y=null;E&&(e.S=p.instance({isFloat:!0,isPot:!1,width:A.size})),e.Ea=p.instance(A.bias);var b={A:function(){return A.size},ub:function(){return m},yc:function(){return A.classesCount},Dd:function(A){t.g(A)},Ie:function(){A.remap&&A.remap.isEnabled&&(a={isEnabled:!0,Ae:p.instance({isFloat:!1,isFlipY:!1,array:new Uint8Array(A.remap.maskTexture.data),width:A.remap.maskTexture.width,isPot:!1}),Ta:A.remap.layers.map((function(i){return A.parent.ie(i)})),depth:A.remap.depth})},$e:function(){switch(A.connectivityUp){case"direct":y=T.instance(A.connectivity);break;case"square":y=R.instance(A.connectivity);break;case"squareFast":y=O.instance(A.connectivity,A.activation);break;case"full":y=L.instance(A.connectivity);break;case"conv":l=A.kernelsCount,y=P.instance(A.connectivity),o&&(e.Va=p.instance({width:m,isFloat:!0,isFlipY:!1,isPot:!1}))}if(y.oa){var i=A.size*A.sparsity;I=Math.log(i/A.size)/Math.log(2),e.input=p.instance({isMipmap:!0,isFloat:!0,isPot:!0,width:i,Hb:I}),e.Ab=p.instance({isFloat:!0,isPot:!0,width:A.size})}},K:function(i,C){if(t=i,y.oa?(e.input.P(),k&&e.Ea.g(2),y.K(a),e.input.g(0),e.input.Zd(I),e.Ab.P(),k?F.set("s0"):(F.set("s27"),F.L("u25",B),e.Ea.g(1)),e.input.Ed(I,0),H.l(!1,!1),F.set(s),u?d.u():e.S.u(),e.Ab.g(0),D&&g.Vd(),H.l(!1,!1)):(e.S.P(),e.Ea.g(1),y.K()),u&&(F.set(G),f.u(),d.g(0),H.l(!1,!1),F.set("s46"),F.L("u6",1),e.S.u(),f.g(1),H.l(!1,!1)),E)return j?(e.Nb.P(),e.S.g(0),F.set(c),F.ea("u7",1/A.size,1/A.size),H.l(!1,!1),C=e.Nb):C=e.S,C.g(0),o&&(e.Va.u(),F.set("s21"),F.ea("u12",l,m/l),H.l(!1,!1),C=e.Va,e.Va.g(0)),C;var n=e.S;switch(A.normalize&&(F.set("gpuRawAvg"===h?"s8":"s7"),F.L("u4",1/A.size),e.Ob.P(),e.S.g(0),H.l(!1,!1),n=e.Ob),i=null,h){case"cpuRGBA2Float":n.qb(!1),C?i=b.Ke(n).then(r):(n=b.Le(n),r(n));break;case"cpuMeanFloat":n.qb(!0),C?i=n.Ne().then(r):(n=n.Oe(),r(n));break;case"gpuRawAvg":case"gpuRaw":n.g(0);case"none":null!==r&&r(n)}return C&&null===i&&(i=Promise.resolve()),i},Md:function(i){i&&(h=i.Pb||"none",r=i.Mb||null),e.S=p.instance({isFloat:!0,isPot:!0,isMipmap:!1,width:A.size}),i=void 0!==A.classesCount&&A.classesCount?A.classesCount:A.size*A.size;for(var t=0,E=0,l=0;t<i;++t)C.push(E+(A.size-1-l)*A.size),n.push([-1,-1,-1,-1]),++E===A.size&&(E=0,++l);A.normalize&&(e.Ob=p.instance({isFloat:!0,isPot:!0,width:A.size}))},Ke:function(A){return A.Me().then(i)},Le:function(A){return i(A=A.Qb()),n},m:function(){for(var A in e){var i=e[A];i&&i.remove()}y&&(y.m(),y=null)}};return A.Xa&&b.$e(A.Xa),b};function S(A){var i=null,e=null,t=null,C=0;this.s=function(A){this.Ye(A.Ta),t.Md({Pb:A.Pb,Mb:A.Mb})},this.ie=function(A){return i[A]},this.Ye=function(A){var n=null;C=A.length,i=A.map((function(A,i){return A=Object.assign({},A,{index:i,parent:this,Xa:n,xe:i===C-1}),n=0===i?x(A):w(A)})),e=i[0],t=i[C-1],i.forEach((function(A,i){0!==i&&A.Ie()}))},this.K=function(A){var e=A;return i.forEach((function(A){e=A.K(e,!1)})),e},this.ge=function(){return e.A()},this.me=function(){return t.A()},this.vb=function(){return t.le()},this.yc=function(){return t.yc()},this.m=function(){i&&(i.forEach((function(A){A.m()})),t=e=i=null,C=0)},void 0!==A&&this.s(A)}var T={instance:function(A){var i=p.instance(A.weights);return{oa:!0,Ma:function(){return 1},m:function(){i.remove()},oe:function(){return i},K:function(){F.set("s26"),i.g(1),H.l(!1,!1)}}}},L={instance:function(A){var i=A.fromLayerSize,e=p.instance(A.weights);return{oa:!0,Ma:function(){return i},m:function(){e.remove()},K:function(i){if(i.isEnabled){F.set("s24"),i.Ae.g(3);var t,C=Math.min(i.Ta.length,i.depth);for(t=0;t<C;++t)i.Ta[t].Dd(4+t)}else F.set("s23");F.L("u16",A.toLayerSize),e.g(1),H.l(!1,!1)}}}},R={instance:function(A){for(var i=A.fromLayerSize,e=A.toLayerSize,t=A.toSparsity,C=t*e,n=C/i,h=i/e,r=0,E=0,l=Array(t*e*t*e*4),o=Array(t*e*t*e*4),k=Array(i*i),g=0;g<k.length;++g)k[g]=0;g=Math.floor(t/2);for(var D=.5/e,a=.5/i,s=.5/C,B=0;B<e;++B)for(var j=Math.round(B*h),m=0;m<e;++m){var c=Math.round(m*h),u=B/e,G=m/e;u+=D,G+=D;for(var d=0;d<t;++d){var f=j+d-g;0>f&&(f+=i),f>=i&&(f-=i);for(var v=0;v<t;++v){var I=r/C,y=E/C,b=c+v-g;0>b&&(b+=i),b>=i&&(b-=i);var M=f/i,x=b/i;y=1-y-1/C,M+=a,x+=a,I+=s,y+=s;var w=B*t+d,S=m*t+v;l[4*(w=(S=e*t-S-1)*e*t+w)]=I,l[4*w+1]=y,l[4*w+2]=M,l[4*w+3]=x,x=k[b*i+f]++,o[4*(b=(b=i*n-1-(b=b*n+(x-(w=x%n))/n))*i*n+(M=f*n+w))]=I,o[4*b+1]=y,o[4*b+2]=u,o[4*b+3]=G,++r>=C&&(r=0,++E)}}}k=null;var T=p.instance(A.weights);delete A.weights.data;var L=p.instance({width:C,isFloat:!0,array:new Float32Array(o),isPot:!0});o=null;var R=p.instance({width:C,isFloat:!0,array:new Float32Array(l),isPot:!0});return l=null,{oa:!0,Ma:function(){return n},m:function(){L.remove(),R.remove(),T.remove()},K:function(){F.set("s22"),T.g(1),R.g(2),H.l(!1,!1)}}}},P={instance:function(A){var i=A.kernelsCount,e=A.toSparsity,t=e*A.toLayerSize/A.fromLayerSize,C=p.instance(A.weights);return{oa:!0,Ma:function(){return t},Sf:function(){return e},oe:function(){return C},m:function(){C.remove()},K:function(){F.set("s25"),F.L("u22",i),F.L("u23",e),F.L("u16",A.toLayerSize),F.L("u24",A.fromLayerSize),C.g(1),H.l(!1,!1)}}}},O={instance:function(A,i){var e=A.fromLayerSize,t=A.toLayerSize,C=A.toSparsity,n=A.stride?A.stride:1,h=C*t/e,r=t<e,E=e/t,l=p.instance(A.weights),o="s47"+[e.toString(),t.toString(),C.toString(),n.toString(),i].join("_");return F.Yd(o)||(A=function(A){switch(A){case"relu":return"gl_FragColor=max(vec4(0.,0.,0.,0.),gl_FragColor);";case"elu":return"gl_FragColor=mix(exp(-abs(gl_FragColor))-vec4(1.,1.,1.,1.),gl_FragColor,step(0.,gl_FragColor));";case"elu01":return"gl_FragColor=mix(0.1*exp(-abs(gl_FragColor))-vec4(0.1,0.1,0.1,0.1),gl_FragColor,step(0.,gl_FragColor));";case"arctan":return"gl_FragColor=atan(3.14159265359*texture2D(u0,vUV))/3.14159265359;";case"copy":return"";default:return!1}}(i),t=[{type:"1f",name:"u16",value:t},{type:"1f",name:"u29",value:n}],r&&t.push({type:"1f",name:"u24",value:e}),e=[(r?h:C).toFixed(1),A],r&&e.push(E.toFixed(1)),F.Ec(r?"s39":"s38",o,e),F.I(o,t.concat([{type:"1i",name:"u14",value:0},{type:"1i",name:"u21",value:1},{type:"1i",name:"u13",value:3}]))),{oa:!1,Ma:function(){return h},m:function(){l.remove()},K:function(){F.set(o),l.g(3),H.l(!1,!1)}}}},N={instance:function(A){var i=A.Tc?A.Tc:3,e=A.Gc?A.Gc:64,t=A.Xc?A.Xc:64,C=!!A.Ra;A={isFloat:!1,width:e,isPot:!1,isFlipY:!1};var n=p.instance(A),h=p.instance(A),r=p.instance(A),E=p.instance(A),l=p.instance({isFloat:!0,width:t,isPot:!1,isFlipY:!1}),o=1/e;return{process:function(A){F.set("s35"),E.u(),H.l(C,!1),F.set("s36");for(var e=0;e<i;++e)n.u(),F.ea("u7",o,0),H.l(C,!1),r.u(),E.g(0),H.l(C,!1),h.u(),n.g(0),F.ea("u7",0,o),H.l(C,!1),E.u(),r.g(0),H.l(C,!1),e!==i-1&&h.g(0);F.set("s37"),l.u(),A.g(0),h.g(1),E.g(2),H.l(C,!1),l.g(0)},vb:function(){return l}}}},J={instance:function(A){function i(A){return p.instance({isFloat:A,width:e.ga,isPot:!1,isFlipY:!1})}var e=Object.assign({vd:.1,jc:9,ga:128,Ra:!1},A),t=i(!1),C=[i(!1),i(!1),i(!1)],n=[i(!1),i(!1),i(!1)],h=i(!0),r=[t,n[0],n[1]];A="uniform sampler2D u1;const float e=1.1111,g=2.2222;uniform vec2 u31;varying vec2 vv0;void main(){float b=0.,c=0.;for(float a=-e;a<=e;a+=1.){vec2 i=u31*a,j=vv0+i*g;float d=1.2*a/e,f=exp(-d*d);b+=f*texture2D(u1,j).r,c+=f;}b/=c,gl_FragColor=vec4(b,0.,0.,1.);}".replace("1.1111",Math.round((e.jc-1)/2).toFixed(2)).replace("2.2222",(1/e.ga).toFixed(6));var E={u1:0};return F.ec([{id:"s49",name:"_",h:"uniform sampler2D u1;varying vec2 vv0;const vec3 f=vec3(.2126,.7152,.0722),g=vec3(1.,1.,1.);void main(){vec3 b=texture2D(u1,vv0).rgb;float a=dot(b,f);gl_FragColor=vec4(a,a,a,a);}",j:E,i:["u1"],precision:"lowp"},{id:"s50",name:"_",h:A,j:E,i:["u1","u31"],precision:"lowp"},{id:"s51",name:"_",h:"uniform sampler2D u32,u33,u34,u35;const float f=1.1111;const vec3 g=vec3(1.,1.,1.);varying vec2 vv0;void main(){vec3 a=texture2D(u32,vv0).rgb;float c=texture2D(u33,vv0).r,d=texture2D(u34,vv0).r,h=texture2D(u35,vv0).r,i=a.r*a.r;vec3 b=vec3(c,d,h),j=max(g*f,abs(i-b*b)),k=sqrt(j);gl_FragColor=vec4(a.r,(a-b)/k);}".replace("1.1111",e.vd.toFixed(4)),j:{u32:0,u33:1,u34:2,u35:3},i:["u32","u33","u34","u35"],precision:"highp"}]),{process:function(){F.set("s49"),t.P(),H.l(e.Ra,!1),F.set("s50");for(var A=0;3>A;++A)F.ea("u31",1,0),C[A].u(),r[A].g(0),H.l(!1,!1),F.ea("u31",0,1),n[A].u(),C[A].g(0),H.l(!1,!1);F.set("s51"),h.u(),t.g(0),n[0].g(1),n[1].g(2),n[2].g(3),H.l(!1,!1),h.g(0)},vb:function(){return h}}}};function K(A,i){A[i]=!0,A.setAttribute(i,"true")}function U(){return/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream}function V(){var A=navigator.userAgent.toLowerCase();return-1!==A.indexOf("safari")&&-1===A.indexOf("chrome")}function W(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}function z(A){if(!A)return A;var i=null;if(A.video){var t=function(A){return A&&"object"===e(A)?Object.assign({},A):A};i={},void 0!==A.video.width&&(i.width=t(A.video.width)),void 0!==A.video.height&&(i.height=t(A.video.height)),void 0!==A.video.facingMode&&(i.facingMode=t(A.video.facingMode))}return i={audio:A.audio,video:i},void 0!==A.deviceId&&q(i,A.deviceId),i}function q(A,i){i&&(A.video=A.video||{},A.video.deviceId={exact:i},A.video.facingMode&&delete A.video.facingMode)}function Q(A){var i=A.video.width;return A.video.width=A.video.height,A.video.height=i,A}function Y(A){if(A.volume=0,K(A,"muted"),V()){if(1===A.volume){var i=function i(){A.volume=0,window.removeEventListener("mousemove",i,!1),window.removeEventListener("touchstart",i,!1)};window.addEventListener("mousemove",i,!1),window.addEventListener("touchstart",i,!1)}setTimeout((function(){A.volume=0,K(A,"muted")}),5)}}function X(A,i,e,t){function C(A){n||(n=!0,e(A))}var n=!1;navigator.mediaDevices.getUserMedia(t).then((function(e){function t(){setTimeout((function(){if(A.currentTime){var t=A.videoWidth,h=A.videoHeight;if(0===t||0===h)C("VIDEO_NULLSIZE");else{t&&(A.style.width=t.toString()+"px"),h&&(A.style.height=h.toString()+"px"),t={Id:null,cf:null,Be:null};try{var r=e.getVideoTracks()[0];r&&(t.Be=r,t.Id=r.getCapabilities(),t.cf=r.getSettings())}catch(A){}V()||U()?A.parentNode&&null!==A.parentNode?(n||i(A,e,t),setTimeout((function(){A.play()}),100)):(document.body.appendChild(A),Y(A),n||i(A,e,t),setTimeout((function(){A.style.transform="scale(0.0001,0.0001)",A.style.position="fixed",A.style.bottom="0px",A.style.right="0px",Y(A),setTimeout((function(){A.play()}),100)}),80)):n||i(A,e,t)}}else C("VIDEO_NOTSTARTED")}),700)}void 0!==A.srcObject?A.srcObject=e:(A.src=window.URL.createObjectURL(e),A.videoStream=e),Y(A),A.addEventListener("loadeddata",(function i(){A.removeEventListener("loadeddata",i,!1);var e=A.play();Y(A),void 0===e?t():e.then((function(){t()})).catch((function(){C("VIDEO_PLAYPROMISEREJECTED")}))}),!1)})).catch((function(A){C(A)}))}function Z(A,i,e){var t=!!W()&&document.createElement("video");if(t)if(W()){if(e&&e.video){if(U()){var C=function(){var A=navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);return A&&A.length&&2<A.length?[parseInt(A[1],10),parseInt(A[2],10),parseInt(A[3]||0,10)]:[0,0,0]}();0!==C[0]&&(12>C[0]||12===C[0]&&2>C[1])&&function(A){try{var i=!!window.matchMedia("(orientation: portrait)").matches}catch(A){i=window.innerHeight>window.innerWidth}if(i&&A&&A.video){i=A.video.width;var e=A.video.height;i&&e&&i.ideal&&e.ideal&&i.ideal>e.ideal&&(A.video.height=i,A.video.width=e)}}(e)}e.video.width&&e.video.width.ideal&&(t.style.width=e.video.width.ideal+"px"),e.video.height&&e.video.height.ideal&&(t.style.height=e.video.height.ideal+"px")}K(t,"autoplay"),K(t,"playsinline"),e&&e.audio?t.volume=0:K(t,"muted"),X(t,A,(function(){!function e(C){if(0===C.length)i("INVALID_FALLBACKCONSTRAINTS");else{var n=C.shift();X(t,A,(function(){e(C)}),n)}}(function(A){function i(A){return[480,576,640,648,720,768,800,960,1080,1152,1280,1366,1920].sort((function(i,e){return Math.abs(i-A)-Math.abs(e-A)}))}function e(i){i=i(z(A)),C.push(i),t(i)}function t(A){if(A.video&&A.video.facingMode&&A.video.facingMode.exact){var i=A.video.facingMode.exact;delete(A=z(A)).video.facingMode.exact,A.video.facingMode.ideal=i,C.push(A)}}var C=[];if(!A||!A.video)return C;if(t(A),A.video.width&&A.video.height){if(A.video.width.ideal&&A.video.height.ideal){var n=i(A.video.width.ideal).slice(0,3),h=i(A.video.height.ideal).slice(0,3),r={},E=0;for(r.aa=void 0;E<n.length;r={aa:r.aa},++E){r.aa=n[E];var l={},o=0;for(l.$=void 0;o<h.length;l={$:l.$},++o)if(l.$=h[o],r.aa!==A.video.width.ideal||l.$!==A.video.height.ideal){var k=Math.max(r.aa,l.$)/Math.min(r.aa,l.$);k<4/3-.1||k>16/9+.1||e(function(A,i){return function(e){return e.video.width.ideal=A.aa,e.video.height.ideal=i.$,e}}(r,l))}}}e((function(A){return Q(A)}))}return A.video.width&&A.video.height&&(A.video.width.ideal&&A.video.height.ideal&&e((function(A){return delete A.video.width.ideal,delete A.video.height.ideal,A})),e((function(A){return delete A.video.width,delete A.video.height,A}))),A.video.facingMode&&(e((function(A){return delete A.video.facingMode,A})),A.video.width&&A.video.height&&e((function(A){return Q(A),delete A.video.facingMode,A}))),C.push({audio:A.audio,video:!0}),C}(e))}),e)}else i&&i("MEDIASTREAMAPI_NOTFOUND");else i&&i("VIDEO_NOTPROVIDED")}var _=function(){var A={n:5,Jb:1,Rc:0,Ka:[30,45],Ha:[2,200],k:.7,lf:200,He:.05},i=-1,e=null,t=-1,C=-1,n=0,h=-1,r=-1,E=0,l=0,o=A.Ha[1],k={je:function(){switch(i){case-1:return-1;case 0:return r+e.Rc;case 1:return E}},ae:function(A){return Math.pow(Math.min(Math.max(h,0),e.n-1)/(e.n-1),A||1)},s:function(t){e=Object.assign({},A,t),h=r=e.Jb,i=0,k.reset()},ff:function(A){A=(void 0===A?Date.now():A)||0;var i=Math.min(Math.max(A-l,e.Ha[0]),e.Ha[1]);o=i,l=A;var E=-1===t?0:e.k;t=Math.min(Math.max(1e3/i,5),120)*(1-E)+t*E,A-C>e.lf&&5<++n&&(i=e.k,h=h*(1-i)+(t<e.Ka[0]?r-1:t>e.Ka[1]?r+1:r)*i,Math.abs(h-r)>1-e.He&&((i=Math.min(Math.max(Math.round(h),0),e.n-1))!==r&&(h=r=i,t=(e.Ka[1]-e.Ka[0])/2)),C=A)},Xe:function(A){E=A,i=1},kf:function(){i=0,k.reset()},reset:function(){o=A.Ha[1],C=t=-1,n=0},Jf:function(){return o}};return k}(),$=function(){var A={Vc:4,Wa:[1.5,1.5,2],fa:[.1,.1,.1],hd:1,ga:-1,xb:-1,ef:2,Ge:1,kd:!0,Wd:.8},i=null,e=[],t=0,C=[.5,.5,1];return{s:function(t){i=Object.assign({},A,t),e.splice(0),t=i.Wa[0]*i.fa[0];var C=i.Wa[1]*i.fa[1],n=1/(1+i.Wa[2]*i.fa[2]),h=i.hd*Math.min(i.ga,i.xb),r=h/i.ga;h/=i.xb;var E=.5*i.Wd;E*=E;for(var l=0;l<i.Vc;++l)for(var o=Math.pow(n,l),k=r*o,g=h*o,D=g*C,a=k/2,s=1+(1-a-a)/(o=k*t),B=1+(1-(g/=2)-g)/D,j=0;j<B;++j)for(var m=g+j*D,c=m-.5,u=0;u<s;++u){var F=a+u*o,G=F-.5;G*G+c*c>E||e.push([F,m,k*i.Ge])}i.kd&&e.sort((function(A,i){var e=A[0]-.5;A=A[1]-.5;var t=i[0]-.5;return e*e+A*A-(t*t+(i=i[1]-.5)*i)}))},get:function(){var A=e.length;if(0===A)return C;t>=A&&(t=0);var n=e[Math.floor(t)];return t=(t+1/i.ef)%A,n}}}(),AA=function(){function A(){e(o+E.Ib)}function i(){a.Ca=0===E.ia?window.requestAnimationFrame(e):window.requestAnimationFrame(t)}function e(A){D.la&&null!==l&&(A-=o,A=Math.min(Math.max(A,E.mc[0]),E.mc[1]),o+=A,n(),l(o))}function t(A){D.la&&(a.timeout=window.setTimeout(e.bind(null,A),E.ia))}function C(){l=null,D.la=!1,n()}function n(){a.Ca&&(window.cancelAnimationFrame(a.Ca),a.Ca=null),a.timeout&&(window.clearTimeout(a.timeout),a.timeout=null)}function h(A){A?(D.ma=!0,g&&_.kf(),k.port.postMessage("STOP"),y.sd(!0),i()):(D.ma=!1,g&&_.Xe(1),y.sd(!1),k.port.postMessage("START"))}var r={Lc:!0,mc:[1,200],Ib:50,ia:0},E=null,l=null,o=0,k=null,g=!1,D={ca:!1,ma:!0,Fb:!1,Eb:!1,Cb:!1,la:!1},a={Ca:null,timeout:null},s=h.bind(null,!0),B=h.bind(null,!1),j={s:function(i){if(E=Object.assign(r,i),Object.assign(D,{ma:!0,ca:!0,la:!1}),E.Lc){i=!1;try{if("undefined"==typeof SharedWorker){var e=URL.createObjectURL(new Blob(["let handler = null;\n      self.addEventListener('message', function(e){\n        switch (e.data) {\n          case 'START':\n            if (handler === null){\n              handler = setInterval(function(){\n                self.postMessage('tick');\n              }, "+E.Ib.toString()+");\n            }\n            break;\n          case 'STOP':\n            if (handler !== null){\n              clearInterval(handler);\n              handler = null;\n            }\n            break;\n        };\n      }, false);"],{type:"text/javascript"})),t=new Worker(e);t.addEventListener("message",A),k={Zc:t,port:t},D.Fb=!0}else{var C=URL.createObjectURL(new Blob(["let handler = null;\n      onconnect = function(e) {\n        const port = e.ports[0];\n        port.addEventListener('message', function(e) {\n          \n          switch (e.data) {\n            case 'START':\n              if (handler === null){\n                handler = setInterval(function(){\n                  port.postMessage('tick');\n                }, "+E.Ib.toString()+");\n              }\n              break;\n            case 'STOP':\n              if (handler !== null){\n                clearInterval(handler);\n                handler = null;\n              }\n              break;\n          };\n          \n        });\n        \n        port.start();\n      } // end onconnect()"],{type:"text/javascript"})),n=new SharedWorker(C);n.port.start(),n.port.addEventListener("message",A),k={Zc:n,port:n.port},D.Eb=!0}i=!0}catch(A){}i&&(window.addEventListener("blur",B),window.addEventListener("focus",s),D.Cb=!0)}g=void 0!==_},m:function(){C(),D.Cb&&(window.removeEventListener("blur",B),window.removeEventListener("focus",s),D.Cb=!1),D.Eb?(k.port.close(),D.Eb=!1):D.Fb&&(k.Zc.terminate(),D.Fb=!1),Object.assign(D,{ma:!0,ca:!1,la:!1}),l=null},bg:function(){return D.ma},update:function(A){Object.assign(E,A)},Te:function(A){D.ca||j.s({}),n(),D.la=!0,l=A,D.ma&&i()},stop:C};return j}(),iA=function(){var A=0,i=null,e=null,t=null,C=null;return{s:function(n,h){A=n.length,i=h,e=n,t=new Float32Array(A),C=new Float32Array(A)},ke:function(){return C},df:function(A,n,h){A.forEach((function(A,r){var E=Math.min(1,e[r]*h*(n+.33*(1-n)));A=E*A+(1-E)*t[r],t[r]=A,C[r]=i[r](A)}))}}}(),eA={VERSION:"1.2.4",ha:[],hb:!1,ib:!1,gb:!1,Ba:!0,Aa:!1,ready:!1,initialized:!1},tA={facingMode:"user",idealWidth:800,idealHeight:600,minWidth:240,maxWidth:1280,minHeight:240,maxHeight:1280,isAudio:!1},CA={neuralNetworkPath:"jeelizFaceTransferNNC.json",bc:"../../",ia:0,width:512,height:512,gf:30,jd:[.6,5.8],fa:[.06,.08,.15],We:.7,Ue:2,Ve:[2,2,2],threshold:.9,zd:[.03,1],rf:20,re:!1,fb:[2,7],H:{Cc:[3,7],quality:[0,6],position:[0,7],rotation:[5,7]},Uc:11,Sc:1,Ce:1,fc:[.1,.01],Re:[.4,-.7,-.4],Se:[.3,0,0],Ud:!1,Ad:.001,hc:[Math.PI/10,Math.PI/6],ad:[.1,.4],bd:[.009,.02],cd:[.02,.04],Kb:5,Dc:.05,yd:[.2,.2,.15,.15,.15,.15,.2,.2,.15,.15,.2],De:[o.bind(null,.05,.7),o.bind(null,.05,.7),o.bind(null,0,.4),o.bind(null,0,.4),o.bind(null,0,.6),o.bind(null,0,.6),k.bind(null,.05,.5),o.bind(null,.2,.6),g.bind(null,.7,.8,2),g.bind(null,.7,.8,2),o.bind(null,.15,.5)]};eA.get_nMorphs=function(){return CA.Uc};var nA=null,hA=null,rA=null,EA=[];function lA(){function A(){1==++R&&(iA.s(CA.yd,CA.De),m=function(){for(var A=CA.Uc,i=Array(A),e=0;e<A;++e)i[e]=0;return i}(),c=new Uint8Array(a*a*4),eA.get_morphTargetInfluences=function(){return m},eA.get_morphTargetInfluencesStabilized=function(){return iA.ke()},eA.set_morphUpdateCallback=function(A){u=A},eA.get_rotation=function(){return b},eA.get_positionScale=function(){var A=B.qd.he();return A.qb(!1),A=A.Qb(),w[0]=1-A[1][0],w[1]=A[2][0],w[2]=A[3][0]*s[0],w},eA.get_rotationStabilized=function(){return x},eA.switch_sleep=function(A){O!==P.Vb||A?O=A?P.Vb:P.play:i()},eA.on_detect=function(A){A(N.R),N.Lb.push(A)},eA.is_detected=function(){return N.R},eA.set_animateDelay=function(A){g=A,AA.update({ia:g})},eA.ready=!0,eA.ha.forEach((function(A){A()})),eA.ha.splice(0,eA.ha.length),i(),R=0)}function i(){O!==P.play&&(O=P.play,AA.stop(),e())}function e(){var A,i;return function(A){function i(i){return A.next(i)}function e(i){return A.throw(i)}return new Promise((function(t,C){!function A(n){n.done?t(n.value):Promise.resolve(n.value).then(i,e).then(A,C)}(A.next())}))}(new E(new n((function(C){switch(C.Y){case 1:A:{if("VIDEO"===L.element.nodeName){var n=L.element.currentTime-K;if(0>n&&(K=L.element.currentTime),1e3*n<CA.rf)break A;K+=n}L.pa.refresh(),(n=U.Ac())[0]===L.Fa[0]&&n[1]===L.Fa[1]||U.ud()}A=_.je(),i=0;case 2:if(!(i<A)){C.Y=4;break}n=B;var h=D;return F.set("s53"),I.U(),n.Pa.P(),L.pa.g(0),n.ab.g(1),H.l(!1,!1),n.Pa.g(0),h.K(n.Pa),CA.re?n=p.Qe(f,c).then(t):(p.Pe(f,c),t(),n=Promise.resolve()),C.Y=3,{value:n};case 3:++i,C.Y=2;break;case 4:n=B,I.U(),j.P(),F.set("s56"),n.ab.g(0),H.l(!1,!1),n=_.ae(),T=3*(1-n)+1*n,_.ff(),eA.Ba&&(I.jf(),F.set("s52"),L.pa.g(0),H.l(!1,!1),G.enable(G.BLEND),G.blendFunc(G.SRC_ALPHA,G.ONE),j.g(0),H.l(!1,!1),G.disable(G.BLEND)),G.flush(),O!==P.Vb&&AA.Te(e),C.Y=0}}))))}function t(){if(m.forEach((function(A,i){if(N.R){A=(CA.Sc+i)%a;var e=CA.Ce+Math.floor((CA.Sc+i)/a);A=C(A,e=a-1-e),m[i]=A}else m[i]=0})),!CA.Ud&&N.R)for(var A=0;3>A;++A){var i=C(A+CA.H.rotation[0],CA.H.rotation[1]);i=(2*i-1)*CA.Re[A],i+=CA.Se[A],y[A]=i}!function(){var A=C(CA.H.Cc[0],CA.H.Cc[1]);N.Qa=CA.Dc*A+(1-CA.Dc)*N.Qa,.6<N.Qa&&!N.R?(N.Lb.forEach((function(A){A(!0)})),N.R=!0):.4>N.Qa&&N.R&&(N.Lb.forEach((function(A){A(!1)})),N.R=!1)}(),i=(A=Date.now())-J.Pc;var e=C(CA.H.quality[0],CA.H.quality[1]);J.$c=k(CA.ad[0],CA.ad[1],e),e=C(CA.H.position[0],CA.H.position[1]);var t=C(CA.H.position[0]+1,CA.H.position[1]),n=C(CA.H.position[0]+2,CA.H.position[1]);for(J.gd=1-k(CA.cd[0],CA.cd[1],Math.sqrt(e*e+t*t+n*n)/i),e=J.na[0]-y[0],t=J.na[1]-y[1],n=J.na[2]-y[2],i=Math.sqrt(e*e+t*t+n*n)/i,J.na[0]=y[0],J.na[1]=y[1],J.na[2]=y[2],J.dd=1-k(CA.bd[0],CA.bd[1],i),J.O=J.$c*J.gd*J.dd,J.Pc=A,J.Oc[J.Gb]=J.O,J.Gb=(J.Gb+1)%CA.Kb,A=0;A<CA.Kb;++A)J.O=Math.min(J.Oc[A],J.O);if(iA.df(m,J.O,T),u&&u(J.O,T),N.R)for(A=CA.fc[1]*J.O+CA.fc[0]*(1-J.O),A*=T,i=0;3>i;++i)b[i]=A*y[i]+(1-A)*b[i],x[i]=b[i];else A=Date.now()*CA.Ad,M[0]=CA.hc[0]*Math.sin(A),M[1]=CA.hc[1]*Math.cos(A),x[0]=M[0],x[1]=M[1],x[2]=M[2]}function C(A,i){return(c[4*(A+=a*i)]+c[4*A+1]+c[4*A+2]+c[4*A+3])/1020}function h(i){(i=(D=new S({Ta:i.layers,Pb:"gpuRaw",Mb:function(A){var i=B;i.ab.nd(1),G.viewport(0,0,1,1),F.set("s54"),F.L("u36",J.O),F.od("u37",$.get()),F.od("u38",CA.fa),H.l(!1,!1),i.qd.nd(1),F.set("s55"),F.L("u36",J.O),i.ab.g(0),H.l(!1,!1),f=A}})).ge())!==o&&(o=i,U.Fc(),B.Pa.resize(o,o),U.pd()),a=D.me(),A()}var r=-1,l=-1,o=64,g=CA.ia,D=null,a=0,s=null,B={},j=null,m=null,c=null,u=null,f=null,y=[0,0,0],b=[0,0,0],M=[0,0,0],x=[0,0,0],w=[0,0,0],T=1,L={qf:[.5,.5],pf:[.5,.5],element:null,pa:null,Fa:[-1,-1]},R=0,P={Qd:-4,Fe:-3,cg:-2,Vb:-1,play:0},O=P.Fe,N={Qa:0,R:!1,Lb:[]},J={O:1,gd:1,$c:1,dd:1,na:[0,0,0],Pc:Date.now(),Oc:new Float32Array(CA.Kb),Gb:0},K=0,U={Fc:function(){r=CA.width,l=CA.height,$.s({Wa:CA.Ve,Vc:CA.Ue,ga:r,xb:l,hd:CA.We,fa:CA.fa,kd:!0}),s=[1,r/l]},pd:function(){F.I("s52",[{type:"1i",name:"u1",value:0}]),F.I("s53",[{type:"1i",name:"u1",value:0},{type:"1i",name:"u39",value:1},{type:"2f",name:"u40",value:s}]),F.I("s56",[{type:"1i",name:"u39",value:0},{type:"2f",name:"u40",value:s},{type:"3f",name:"u41",value:[0,.5,1]}]),F.I("s54",[{type:"1i",name:"u42",value:0},{type:"1i",name:"u39",value:1},{type:"1f",name:"u43",value:CA.jd[0]},{type:"1f",name:"u44",value:CA.jd[1]},{type:"1f",name:"u45",value:CA.gf},{type:"1f",name:"u46",value:CA.threshold},{type:"1f",name:"u47",value:s[0]}]),F.I("s55",[{type:"1i",name:"u1",value:0},{type:"1i",name:"u5",value:1},{type:"2f",name:"u48",value:CA.zd}])},Nd:function(){F.ec([{id:"s52",name:"_",za:"attribute vec2 a0;uniform vec2 u49,u50;varying vec2 vv0;void main(){gl_Position=vec4(a0,0.,1.),vv0=u50+u49*a0;}",Da:["a0"],sa:[2],h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vv0);}",i:["u1","u49","u50"],precision:"lowp"},{id:"s53",name:"_",h:"uniform sampler2D u1;varying vec2 vv0;void main(){gl_FragColor=texture2D(u1,vv0);}",za:"attribute vec2 a0;uniform sampler2D u39;uniform vec2 u40,u49,u50;const vec2 f=vec2(.25,.5),i=vec2(.75,.5),e=vec2(.5,.5);varying vec2 vv0;void main(){vec4 a=texture2D(u39,f);vec2 b=a.gb,c=a.a*u40,d=a0*.5+e,h=b+(d-e)*c;vv0=u50+u49*2.*(h-.5),gl_Position=vec4(a0,0.,1.);}",Da:["a0"],sa:[2],i:["u1","u39","u40","u49","u50"],precision:"lowp"},{id:"s54",name:"_",za:"attribute vec2 a0;void main(){gl_Position=vec4(a0,0.,1.);}",h:"uniform sampler2D u42,u39;uniform vec3 u37,u38;uniform float u43,u44,u45,u46,u47,u36;varying vec2 vv0;const vec4 e=vec4(.25,.25,.25,.25);void main(){vec4 c=texture2D(u42,vec2(.4375,.9375)),d=texture2D(u42,vec2(.5625,.9375));float f=dot(c-d,e);bool g=f>u46;vec4 a=texture2D(u39,vec2(.5,.5));g?a.r=2.:a.r>u45?a.r=0.:a.r>1.9&&(a.a>u44||a.a<u43)?a.r=0.:a.r>1.9?a.r+=1.:0.;if(a.r<.9)a.gba=u37,a.r=1.;else{float h=dot(e,texture2D(u42,vec2(.0625,.9375))),i=dot(e,texture2D(u42,vec2(.1875,.9375))),j=dot(e,texture2D(u42,vec2(.3125,.9375))),b;if(a.r>1.9)b=1.-u36;else b=1.,a.r=0.;float k=a.a*u47;a.gba+=vec3(h,i,j)*u38*b*k;}gl_FragColor=a;}",i:"u42 u39 u37 u43 u44 u45 u46 u38 u47 u36".split(" ")},{id:"s56",name:"_",h:"uniform sampler2D u39;uniform vec3 u41;uniform vec2 u40;varying vec2 vv0;const vec2 i=vec2(1.,1.);void main(){vec4 f=texture2D(u39,vec2(.25,.5));vec2 g=f.gb;float j=f.a;vec2 a=j*u40,c=g+a,d=g;d-=a/2.,c-=a/2.;vec2 k=.5*(d+c),h=step(d,vv0)*step(vv0,c);float l=h.x*h.y;vec2 b=2.*abs(k-vv0)/a;b=pow(b,3.*i),gl_FragColor=vec4(l*u41*max(b.x,b.y),1.);}",i:["u39","u40","u41"],precision:"lowp"},{id:"s55",name:"_",h:"uniform sampler2D u1,u5;uniform vec2 u48;uniform float u36;const vec4 f=vec4(1.,1.,1.,1.);varying vec2 vv0;void main(){vec4 a=texture2D(u1,vv0),b=texture2D(u5,vv0);float c=(1.-u36)*(u48.y-u48.x)+u48.x;gl_FragColor=mix(b,a,c*f);}",i:["u1","u5","u48","u36"]}])},qe:function(A){var i=new Float32Array([0,.5,.5,0]);A.Pa=p.instance({isPot:!0,isFloat:!1,width:o}),i={width:1,height:1,isFloat:!0,isPot:!1,array:i},A.ab=v(i),A.qd=v(i)},Od:function(){L.pa=p.instance({C:L.element,isPot:!1,isFloat:!1,isFlipY:!0}),j=p.instance({isPot:!1,isFloat:!1,width:r,height:l})},s:function(){U.Od(),U.qe(B),AA.s({Lc:!1,ia:g}),_.s({Jb:0,n:CA.fb[1]-CA.fb[0]+1,Rc:CA.fb[0]}),rA?h(rA):function(A){var i=new XMLHttpRequest;i.open("GET",CA.bc+CA.neuralNetworkPath,!0),i.withCredentials=!1,i.onreadystatechange=function(){4!==i.readyState||200!==i.status&&0!==i.status||A(i.responseText)},i.send()}((function(A){h(A=JSON.parse(A))}))},m:function(){AA.stop(),D&&(D.m(),D=null),O=P.Qd},Jd:function(A){eA.hb&&eA.hb();var i={video:{facingMode:{ideal:tA.facingMode},width:{min:tA.minWidth,max:tA.maxWidth,ideal:tA.idealWidth},height:{min:tA.minHeight,max:tA.maxHeight,ideal:tA.idealHeight}},audio:tA.isAudio};q(i,tA.deviceId),Z((function(i,e){nA=e,eA.ib&&eA.ib(),A(i)}),(function(){window.eb&&window.eb("WEBCAM_UNAVAILABLE")}),i)},Qc:function(A,i){U.Nd(),L.element=A,hA=L.element,U.ud(),U.Fc(),U.pd(),U.s(),i&&i()},Ac:function(){var A=[-1,-1],i=L.element;return"VIDEO"===i.nodeName?(A[0]=i.videoWidth,A[1]=i.videoHeight):(A[0]=i.width,A[1]=i.height),A},ud:function(){var A=U.Ac();L.Fa[0]=A[0],L.Fa[1]=A[1],d.La().width=A[0],d.La().height=A[1],CA.width=A[0],CA.height=A[1];var i=L.qf,e=L.pf,t=A[1]/A[0];t>(A=d.J()/d.A())?1>=t?i[0]*=t:i[1]/=t:(i[0]*=t,t=1/A,i[0]*=t,i[1]*=t),i[1]*=A,i=[{type:"2f",name:"u49",value:i},{type:"2f",name:"u50",value:e}],F.I("s53",[{type:"1i",name:"u1",value:0}].concat(i)),F.I("s52",i)}};return EA.push(U),U}eA.onLoad=function(A){eA.ready?A():eA.ha.push(A)},eA.switch_displayVideo=function(A){eA.Ba=A,eA.Aa&&(eA.Aa.style.display=eA.Ba?"block":"none")},eA.onWebcamAsk=function(A){eA.hb=A},eA.onContextLost=function(A){eA.gb=A},eA.onWebcamGet=function(A){eA.ib=A},eA.destroy=function(){AA.m(),hA&&hA.srcObject&&hA.srcObject.getTracks().forEach((function(A){A.stop()})),EA.forEach((function(A){A.m()})),EA.splice(0),d.m(),eA.switch_displayVideo(!1),eA.initialized=!1,eA.ha.splice(0)},eA.set_size=function(A,i){CA.width=A,CA.height=i},eA.get_size=function(){return{width:CA.width,height:CA.height}},eA.get_videoStream=function(){return nA},eA.get_video=function(){return hA},eA.get_cv=function(){return d.La()},eA.set_color=function(A){F.I("s56",[{type:"3f",name:"u41",value:A}])},eA.init=function(A){var i=lA(),e=A.callbackReady?A.callbackReady:function(A){console.log("ERR:",A)},t=!!A.callbackReady&&A.callbackReady.bind(null,!1);if(A.canvasId||A.canvas){var C=A.canvas?A.canvas:document.getElementById(A.canvasId);if(C){if(!eA.initialized)return eA.initialized=!0,window.eb=!!e&&function(A){e(A),window.eb=!1},A.NNCPath&&(CA.bc=A.NNCPath),void 0!==A.NNC&&(rA="string"==typeof A.NNC?JSON.parse(A.NNC):A.NNC),t&&eA.ha.push(t),d.s({ob:C,width:CA.width,height:CA.height,debug:!1,Bb:!1,Wc:function(){eA.gb&&eA.gb()},premultipliedAlpha:!1})?(eA.Aa=d.La(),eA.Ba||(eA.Aa.style.display="none"),H.s(),I.s(),F.s(),p.s(),G.depthFunc(G.LEQUAL),G.clearDepth(1),A.videoSettings&&A.videoSettings.videoElement?i.Qc(A.videoSettings.videoElement,!1):(A.videoSettings&&Object.assign(tA,A.videoSettings),i.Jd((function(A){i.Qc(A,!1)}))),!0):(e("GL_INCOMPATIBLE"),!1);e("ALREADY_INITIALIZED")}else e("INVALID_CANVAS")}else e("NO_CANVASID")};var oA=eA;A.exports=oA}).call(this,e(8).Buffer)},function(A,i,e){function t(A){if(A)return function(A){for(var i in t.prototype)A[i]=t.prototype[i];return A}(A)}A.exports=t,t.prototype.on=t.prototype.addEventListener=function(A,i){return this._callbacks=this._callbacks||{},(this._callbacks["$"+A]=this._callbacks["$"+A]||[]).push(i),this},t.prototype.once=function(A,i){function e(){this.off(A,e),i.apply(this,arguments)}return e.fn=i,this.on(A,e),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(A,i){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var e,t=this._callbacks["$"+A];if(!t)return this;if(1==arguments.length)return delete this._callbacks["$"+A],this;for(var C=0;C<t.length;C++)if((e=t[C])===i||e.fn===i){t.splice(C,1);break}return 0===t.length&&delete this._callbacks["$"+A],this},t.prototype.emit=function(A){this._callbacks=this._callbacks||{};for(var i=new Array(arguments.length-1),e=this._callbacks["$"+A],t=1;t<arguments.length;t++)i[t-1]=arguments[t];if(e){t=0;for(var C=(e=e.slice(0)).length;t<C;++t)e[t].apply(this,i)}return this},t.prototype.listeners=function(A){return this._callbacks=this._callbacks||{},this._callbacks["$"+A]||[]},t.prototype.hasListeners=function(A){return!!this.listeners(A).length}},function(A,i,e){var t,C=e(59),n=e(29),h=e(61),r=e(62),E=e(63);"undefined"!=typeof ArrayBuffer&&(t=e(64));var l="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),o="undefined"!=typeof navigator&&/PhantomJS/i.test(navigator.userAgent),k=l||o;i.protocol=3;var g=i.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},D=C(g),a={type:"error",data:"parser error"},s=e(65);function B(A,i,e){for(var t=new Array(A.length),C=r(A.length,e),n=function(A,e,C){i(e,(function(i,e){t[A]=e,C(i,t)}))},h=0;h<A.length;h++)n(h,A[h],C)}i.encodePacket=function(A,e,t,C){"function"==typeof e&&(C=e,e=!1),"function"==typeof t&&(C=t,t=null);var n=void 0===A.data?void 0:A.data.buffer||A.data;if("undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer)return function(A,e,t){if(!e)return i.encodeBase64Packet(A,t);var C=A.data,n=new Uint8Array(C),h=new Uint8Array(1+C.byteLength);h[0]=g[A.type];for(var r=0;r<n.length;r++)h[r+1]=n[r];return t(h.buffer)}(A,e,C);if(void 0!==s&&n instanceof s)return function(A,e,t){if(!e)return i.encodeBase64Packet(A,t);if(k)return function(A,e,t){if(!e)return i.encodeBase64Packet(A,t);var C=new FileReader;return C.onload=function(){i.encodePacket({type:A.type,data:C.result},e,!0,t)},C.readAsArrayBuffer(A.data)}(A,e,t);var C=new Uint8Array(1);C[0]=g[A.type];var n=new s([C.buffer,A.data]);return t(n)}(A,e,C);if(n&&n.base64)return function(A,e){var t="b"+i.packets[A.type]+A.data.data;return e(t)}(A,C);var h=g[A.type];return void 0!==A.data&&(h+=t?E.encode(String(A.data),{strict:!1}):String(A.data)),C(""+h)},i.encodeBase64Packet=function(A,e){var t,C="b"+i.packets[A.type];if(void 0!==s&&A.data instanceof s){var n=new FileReader;return n.onload=function(){var A=n.result.split(",")[1];e(C+A)},n.readAsDataURL(A.data)}try{t=String.fromCharCode.apply(null,new Uint8Array(A.data))}catch(i){for(var h=new Uint8Array(A.data),r=new Array(h.length),E=0;E<h.length;E++)r[E]=h[E];t=String.fromCharCode.apply(null,r)}return C+=btoa(t),e(C)},i.decodePacket=function(A,e,t){if(void 0===A)return a;if("string"==typeof A){if("b"===A.charAt(0))return i.decodeBase64Packet(A.substr(1),e);if(t&&!1===(A=function(A){try{A=E.decode(A,{strict:!1})}catch(A){return!1}return A}(A)))return a;var C=A.charAt(0);return Number(C)==C&&D[C]?A.length>1?{type:D[C],data:A.substring(1)}:{type:D[C]}:a}C=new Uint8Array(A)[0];var n=h(A,1);return s&&"blob"===e&&(n=new s([n])),{type:D[C],data:n}},i.decodeBase64Packet=function(A,i){var e=D[A.charAt(0)];if(!t)return{type:e,data:{base64:!0,data:A.substr(1)}};var C=t.decode(A.substr(1));return"blob"===i&&s&&(C=new s([C])),{type:e,data:C}},i.encodePayload=function(A,e,t){"function"==typeof e&&(t=e,e=null);var C=n(A);if(e&&C)return s&&!k?i.encodePayloadAsBlob(A,t):i.encodePayloadAsArrayBuffer(A,t);if(!A.length)return t("0:");B(A,(function(A,t){i.encodePacket(A,!!C&&e,!1,(function(A){t(null,function(A){return A.length+":"+A}(A))}))}),(function(A,i){return t(i.join(""))}))},i.decodePayload=function(A,e,t){if("string"!=typeof A)return i.decodePayloadAsBinary(A,e,t);var C;if("function"==typeof e&&(t=e,e=null),""===A)return t(a,0,1);for(var n,h,r="",E=0,l=A.length;E<l;E++){var o=A.charAt(E);if(":"===o){if(""===r||r!=(n=Number(r)))return t(a,0,1);if(r!=(h=A.substr(E+1,n)).length)return t(a,0,1);if(h.length){if(C=i.decodePacket(h,e,!1),a.type===C.type&&a.data===C.data)return t(a,0,1);if(!1===t(C,E+n,l))return}E+=n,r=""}else r+=o}return""!==r?t(a,0,1):void 0},i.encodePayloadAsArrayBuffer=function(A,e){if(!A.length)return e(new ArrayBuffer(0));B(A,(function(A,e){i.encodePacket(A,!0,!0,(function(A){return e(null,A)}))}),(function(A,i){var t=i.reduce((function(A,i){var e;return A+(e="string"==typeof i?i.length:i.byteLength).toString().length+e+2}),0),C=new Uint8Array(t),n=0;return i.forEach((function(A){var i="string"==typeof A,e=A;if(i){for(var t=new Uint8Array(A.length),h=0;h<A.length;h++)t[h]=A.charCodeAt(h);e=t.buffer}C[n++]=i?0:1;var r=e.byteLength.toString();for(h=0;h<r.length;h++)C[n++]=parseInt(r[h]);C[n++]=255;for(t=new Uint8Array(e),h=0;h<t.length;h++)C[n++]=t[h]})),e(C.buffer)}))},i.encodePayloadAsBlob=function(A,e){B(A,(function(A,e){i.encodePacket(A,!0,!0,(function(A){var i=new Uint8Array(1);if(i[0]=1,"string"==typeof A){for(var t=new Uint8Array(A.length),C=0;C<A.length;C++)t[C]=A.charCodeAt(C);A=t.buffer,i[0]=0}var n=(A instanceof ArrayBuffer?A.byteLength:A.size).toString(),h=new Uint8Array(n.length+1);for(C=0;C<n.length;C++)h[C]=parseInt(n[C]);if(h[n.length]=255,s){var r=new s([i.buffer,h.buffer,A]);e(null,r)}}))}),(function(A,i){return e(new s(i))}))},i.decodePayloadAsBinary=function(A,e,t){"function"==typeof e&&(t=e,e=null);for(var C=A,n=[];C.byteLength>0;){for(var r=new Uint8Array(C),E=0===r[0],l="",o=1;255!==r[o];o++){if(l.length>310)return t(a,0,1);l+=r[o]}C=h(C,2+l.length),l=parseInt(l);var k=h(C,0,l);if(E)try{k=String.fromCharCode.apply(null,new Uint8Array(k))}catch(A){var g=new Uint8Array(k);k="";for(o=0;o<g.length;o++)k+=String.fromCharCode(g[o])}n.push(k),C=h(C,l)}var D=n.length;n.forEach((function(A,C){t(i.decodePacket(A,e,!0),C,D)}))}},function(A,i,e){(function(t){function C(){var A;try{A=i.storage.debug}catch(A){}return!A&&void 0!==t&&"env"in t&&(A=t.env.DEBUG),A}(i=A.exports=e(50)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},i.formatArgs=function(A){var e=this.useColors;if(A[0]=(e?"%c":"")+this.namespace+(e?" %c":" ")+A[0]+(e?"%c ":" ")+"+"+i.humanize(this.diff),!e)return;var t="color: "+this.color;A.splice(1,0,t,"color: inherit");var C=0,n=0;A[0].replace(/%[a-zA-Z%]/g,(function(A){"%%"!==A&&(C++,"%c"===A&&(n=C))})),A.splice(n,0,t)},i.save=function(A){try{null==A?i.storage.removeItem("debug"):i.storage.debug=A}catch(A){}},i.load=C,i.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},i.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(A){}}(),i.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],i.formatters.j=function(A){try{return JSON.stringify(A)}catch(A){return"[UnexpectedJSONParseError]: "+A.message}},i.enable(C())}).call(this,e(22))},function(A,i,e){"use strict";(function(A){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var t=e(52),C=e(53),n=e(54);function h(){return E.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function r(A,i){if(h()<i)throw new RangeError("Invalid typed array length");return E.TYPED_ARRAY_SUPPORT?(A=new Uint8Array(i)).__proto__=E.prototype:(null===A&&(A=new E(i)),A.length=i),A}function E(A,i,e){if(!(E.TYPED_ARRAY_SUPPORT||this instanceof E))return new E(A,i,e);if("number"==typeof A){if("string"==typeof i)throw new Error("If encoding is specified then the first argument must be a string");return k(this,A)}return l(this,A,i,e)}function l(A,i,e,t){if("number"==typeof i)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&i instanceof ArrayBuffer?function(A,i,e,t){if(i.byteLength,e<0||i.byteLength<e)throw new RangeError("'offset' is out of bounds");if(i.byteLength<e+(t||0))throw new RangeError("'length' is out of bounds");i=void 0===e&&void 0===t?new Uint8Array(i):void 0===t?new Uint8Array(i,e):new Uint8Array(i,e,t);E.TYPED_ARRAY_SUPPORT?(A=i).__proto__=E.prototype:A=g(A,i);return A}(A,i,e,t):"string"==typeof i?function(A,i,e){"string"==typeof e&&""!==e||(e="utf8");if(!E.isEncoding(e))throw new TypeError('"encoding" must be a valid string encoding');var t=0|a(i,e),C=(A=r(A,t)).write(i,e);C!==t&&(A=A.slice(0,C));return A}(A,i,e):function(A,i){if(E.isBuffer(i)){var e=0|D(i.length);return 0===(A=r(A,e)).length||i.copy(A,0,0,e),A}if(i){if("undefined"!=typeof ArrayBuffer&&i.buffer instanceof ArrayBuffer||"length"in i)return"number"!=typeof i.length||(t=i.length)!=t?r(A,0):g(A,i);if("Buffer"===i.type&&n(i.data))return g(A,i.data)}var t;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(A,i)}function o(A){if("number"!=typeof A)throw new TypeError('"size" argument must be a number');if(A<0)throw new RangeError('"size" argument must not be negative')}function k(A,i){if(o(i),A=r(A,i<0?0:0|D(i)),!E.TYPED_ARRAY_SUPPORT)for(var e=0;e<i;++e)A[e]=0;return A}function g(A,i){var e=i.length<0?0:0|D(i.length);A=r(A,e);for(var t=0;t<e;t+=1)A[t]=255&i[t];return A}function D(A){if(A>=h())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+h().toString(16)+" bytes");return 0|A}function a(A,i){if(E.isBuffer(A))return A.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(A)||A instanceof ArrayBuffer))return A.byteLength;"string"!=typeof A&&(A=""+A);var e=A.length;if(0===e)return 0;for(var t=!1;;)switch(i){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":case void 0:return N(A).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return J(A).length;default:if(t)return N(A).length;i=(""+i).toLowerCase(),t=!0}}function s(A,i,e){var t=!1;if((void 0===i||i<0)&&(i=0),i>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(i>>>=0))return"";for(A||(A="utf8");;)switch(A){case"hex":return y(this,i,e);case"utf8":case"utf-8":return v(this,i,e);case"ascii":return H(this,i,e);case"latin1":case"binary":return I(this,i,e);case"base64":return p(this,i,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return b(this,i,e);default:if(t)throw new TypeError("Unknown encoding: "+A);A=(A+"").toLowerCase(),t=!0}}function B(A,i,e){var t=A[i];A[i]=A[e],A[e]=t}function j(A,i,e,t,C){if(0===A.length)return-1;if("string"==typeof e?(t=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=C?0:A.length-1),e<0&&(e=A.length+e),e>=A.length){if(C)return-1;e=A.length-1}else if(e<0){if(!C)return-1;e=0}if("string"==typeof i&&(i=E.from(i,t)),E.isBuffer(i))return 0===i.length?-1:m(A,i,e,t,C);if("number"==typeof i)return i&=255,E.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?C?Uint8Array.prototype.indexOf.call(A,i,e):Uint8Array.prototype.lastIndexOf.call(A,i,e):m(A,[i],e,t,C);throw new TypeError("val must be string, number or Buffer")}function m(A,i,e,t,C){var n,h=1,r=A.length,E=i.length;if(void 0!==t&&("ucs2"===(t=String(t).toLowerCase())||"ucs-2"===t||"utf16le"===t||"utf-16le"===t)){if(A.length<2||i.length<2)return-1;h=2,r/=2,E/=2,e/=2}function l(A,i){return 1===h?A[i]:A.readUInt16BE(i*h)}if(C){var o=-1;for(n=e;n<r;n++)if(l(A,n)===l(i,-1===o?0:n-o)){if(-1===o&&(o=n),n-o+1===E)return o*h}else-1!==o&&(n-=n-o),o=-1}else for(e+E>r&&(e=r-E),n=e;n>=0;n--){for(var k=!0,g=0;g<E;g++)if(l(A,n+g)!==l(i,g)){k=!1;break}if(k)return n}return-1}function c(A,i,e,t){e=Number(e)||0;var C=A.length-e;t?(t=Number(t))>C&&(t=C):t=C;var n=i.length;if(n%2!=0)throw new TypeError("Invalid hex string");t>n/2&&(t=n/2);for(var h=0;h<t;++h){var r=parseInt(i.substr(2*h,2),16);if(isNaN(r))return h;A[e+h]=r}return h}function u(A,i,e,t){return K(N(i,A.length-e),A,e,t)}function F(A,i,e,t){return K(function(A){for(var i=[],e=0;e<A.length;++e)i.push(255&A.charCodeAt(e));return i}(i),A,e,t)}function G(A,i,e,t){return F(A,i,e,t)}function d(A,i,e,t){return K(J(i),A,e,t)}function f(A,i,e,t){return K(function(A,i){for(var e,t,C,n=[],h=0;h<A.length&&!((i-=2)<0);++h)e=A.charCodeAt(h),t=e>>8,C=e%256,n.push(C),n.push(t);return n}(i,A.length-e),A,e,t)}function p(A,i,e){return 0===i&&e===A.length?t.fromByteArray(A):t.fromByteArray(A.slice(i,e))}function v(A,i,e){e=Math.min(A.length,e);for(var t=[],C=i;C<e;){var n,h,r,E,l=A[C],o=null,k=l>239?4:l>223?3:l>191?2:1;if(C+k<=e)switch(k){case 1:l<128&&(o=l);break;case 2:128==(192&(n=A[C+1]))&&(E=(31&l)<<6|63&n)>127&&(o=E);break;case 3:n=A[C+1],h=A[C+2],128==(192&n)&&128==(192&h)&&(E=(15&l)<<12|(63&n)<<6|63&h)>2047&&(E<55296||E>57343)&&(o=E);break;case 4:n=A[C+1],h=A[C+2],r=A[C+3],128==(192&n)&&128==(192&h)&&128==(192&r)&&(E=(15&l)<<18|(63&n)<<12|(63&h)<<6|63&r)>65535&&E<1114112&&(o=E)}null===o?(o=65533,k=1):o>65535&&(o-=65536,t.push(o>>>10&1023|55296),o=56320|1023&o),t.push(o),C+=k}return function(A){var i=A.length;if(i<=4096)return String.fromCharCode.apply(String,A);var e="",t=0;for(;t<i;)e+=String.fromCharCode.apply(String,A.slice(t,t+=4096));return e}(t)}i.Buffer=E,i.SlowBuffer=function(A){+A!=A&&(A=0);return E.alloc(+A)},i.INSPECT_MAX_BYTES=50,E.TYPED_ARRAY_SUPPORT=void 0!==A.TYPED_ARRAY_SUPPORT?A.TYPED_ARRAY_SUPPORT:function(){try{var A=new Uint8Array(1);return A.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===A.foo()&&"function"==typeof A.subarray&&0===A.subarray(1,1).byteLength}catch(A){return!1}}(),i.kMaxLength=h(),E.poolSize=8192,E._augment=function(A){return A.__proto__=E.prototype,A},E.from=function(A,i,e){return l(null,A,i,e)},E.TYPED_ARRAY_SUPPORT&&(E.prototype.__proto__=Uint8Array.prototype,E.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&E[Symbol.species]===E&&Object.defineProperty(E,Symbol.species,{value:null,configurable:!0})),E.alloc=function(A,i,e){return function(A,i,e,t){return o(i),i<=0?r(A,i):void 0!==e?"string"==typeof t?r(A,i).fill(e,t):r(A,i).fill(e):r(A,i)}(null,A,i,e)},E.allocUnsafe=function(A){return k(null,A)},E.allocUnsafeSlow=function(A){return k(null,A)},E.isBuffer=function(A){return!(null==A||!A._isBuffer)},E.compare=function(A,i){if(!E.isBuffer(A)||!E.isBuffer(i))throw new TypeError("Arguments must be Buffers");if(A===i)return 0;for(var e=A.length,t=i.length,C=0,n=Math.min(e,t);C<n;++C)if(A[C]!==i[C]){e=A[C],t=i[C];break}return e<t?-1:t<e?1:0},E.isEncoding=function(A){switch(String(A).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},E.concat=function(A,i){if(!n(A))throw new TypeError('"list" argument must be an Array of Buffers');if(0===A.length)return E.alloc(0);var e;if(void 0===i)for(i=0,e=0;e<A.length;++e)i+=A[e].length;var t=E.allocUnsafe(i),C=0;for(e=0;e<A.length;++e){var h=A[e];if(!E.isBuffer(h))throw new TypeError('"list" argument must be an Array of Buffers');h.copy(t,C),C+=h.length}return t},E.byteLength=a,E.prototype._isBuffer=!0,E.prototype.swap16=function(){var A=this.length;if(A%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<A;i+=2)B(this,i,i+1);return this},E.prototype.swap32=function(){var A=this.length;if(A%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<A;i+=4)B(this,i,i+3),B(this,i+1,i+2);return this},E.prototype.swap64=function(){var A=this.length;if(A%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<A;i+=8)B(this,i,i+7),B(this,i+1,i+6),B(this,i+2,i+5),B(this,i+3,i+4);return this},E.prototype.toString=function(){var A=0|this.length;return 0===A?"":0===arguments.length?v(this,0,A):s.apply(this,arguments)},E.prototype.equals=function(A){if(!E.isBuffer(A))throw new TypeError("Argument must be a Buffer");return this===A||0===E.compare(this,A)},E.prototype.inspect=function(){var A="",e=i.INSPECT_MAX_BYTES;return this.length>0&&(A=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(A+=" ... ")),"<Buffer "+A+">"},E.prototype.compare=function(A,i,e,t,C){if(!E.isBuffer(A))throw new TypeError("Argument must be a Buffer");if(void 0===i&&(i=0),void 0===e&&(e=A?A.length:0),void 0===t&&(t=0),void 0===C&&(C=this.length),i<0||e>A.length||t<0||C>this.length)throw new RangeError("out of range index");if(t>=C&&i>=e)return 0;if(t>=C)return-1;if(i>=e)return 1;if(this===A)return 0;for(var n=(C>>>=0)-(t>>>=0),h=(e>>>=0)-(i>>>=0),r=Math.min(n,h),l=this.slice(t,C),o=A.slice(i,e),k=0;k<r;++k)if(l[k]!==o[k]){n=l[k],h=o[k];break}return n<h?-1:h<n?1:0},E.prototype.includes=function(A,i,e){return-1!==this.indexOf(A,i,e)},E.prototype.indexOf=function(A,i,e){return j(this,A,i,e,!0)},E.prototype.lastIndexOf=function(A,i,e){return j(this,A,i,e,!1)},E.prototype.write=function(A,i,e,t){if(void 0===i)t="utf8",e=this.length,i=0;else if(void 0===e&&"string"==typeof i)t=i,e=this.length,i=0;else{if(!isFinite(i))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");i|=0,isFinite(e)?(e|=0,void 0===t&&(t="utf8")):(t=e,e=void 0)}var C=this.length-i;if((void 0===e||e>C)&&(e=C),A.length>0&&(e<0||i<0)||i>this.length)throw new RangeError("Attempt to write outside buffer bounds");t||(t="utf8");for(var n=!1;;)switch(t){case"hex":return c(this,A,i,e);case"utf8":case"utf-8":return u(this,A,i,e);case"ascii":return F(this,A,i,e);case"latin1":case"binary":return G(this,A,i,e);case"base64":return d(this,A,i,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f(this,A,i,e);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(""+t).toLowerCase(),n=!0}},E.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function H(A,i,e){var t="";e=Math.min(A.length,e);for(var C=i;C<e;++C)t+=String.fromCharCode(127&A[C]);return t}function I(A,i,e){var t="";e=Math.min(A.length,e);for(var C=i;C<e;++C)t+=String.fromCharCode(A[C]);return t}function y(A,i,e){var t=A.length;(!i||i<0)&&(i=0),(!e||e<0||e>t)&&(e=t);for(var C="",n=i;n<e;++n)C+=O(A[n]);return C}function b(A,i,e){for(var t=A.slice(i,e),C="",n=0;n<t.length;n+=2)C+=String.fromCharCode(t[n]+256*t[n+1]);return C}function M(A,i,e){if(A%1!=0||A<0)throw new RangeError("offset is not uint");if(A+i>e)throw new RangeError("Trying to access beyond buffer length")}function x(A,i,e,t,C,n){if(!E.isBuffer(A))throw new TypeError('"buffer" argument must be a Buffer instance');if(i>C||i<n)throw new RangeError('"value" argument is out of bounds');if(e+t>A.length)throw new RangeError("Index out of range")}function w(A,i,e,t){i<0&&(i=65535+i+1);for(var C=0,n=Math.min(A.length-e,2);C<n;++C)A[e+C]=(i&255<<8*(t?C:1-C))>>>8*(t?C:1-C)}function S(A,i,e,t){i<0&&(i=4294967295+i+1);for(var C=0,n=Math.min(A.length-e,4);C<n;++C)A[e+C]=i>>>8*(t?C:3-C)&255}function T(A,i,e,t,C,n){if(e+t>A.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function L(A,i,e,t,n){return n||T(A,0,e,4),C.write(A,i,e,t,23,4),e+4}function R(A,i,e,t,n){return n||T(A,0,e,8),C.write(A,i,e,t,52,8),e+8}E.prototype.slice=function(A,i){var e,t=this.length;if((A=~~A)<0?(A+=t)<0&&(A=0):A>t&&(A=t),(i=void 0===i?t:~~i)<0?(i+=t)<0&&(i=0):i>t&&(i=t),i<A&&(i=A),E.TYPED_ARRAY_SUPPORT)(e=this.subarray(A,i)).__proto__=E.prototype;else{var C=i-A;e=new E(C,void 0);for(var n=0;n<C;++n)e[n]=this[n+A]}return e},E.prototype.readUIntLE=function(A,i,e){A|=0,i|=0,e||M(A,i,this.length);for(var t=this[A],C=1,n=0;++n<i&&(C*=256);)t+=this[A+n]*C;return t},E.prototype.readUIntBE=function(A,i,e){A|=0,i|=0,e||M(A,i,this.length);for(var t=this[A+--i],C=1;i>0&&(C*=256);)t+=this[A+--i]*C;return t},E.prototype.readUInt8=function(A,i){return i||M(A,1,this.length),this[A]},E.prototype.readUInt16LE=function(A,i){return i||M(A,2,this.length),this[A]|this[A+1]<<8},E.prototype.readUInt16BE=function(A,i){return i||M(A,2,this.length),this[A]<<8|this[A+1]},E.prototype.readUInt32LE=function(A,i){return i||M(A,4,this.length),(this[A]|this[A+1]<<8|this[A+2]<<16)+16777216*this[A+3]},E.prototype.readUInt32BE=function(A,i){return i||M(A,4,this.length),16777216*this[A]+(this[A+1]<<16|this[A+2]<<8|this[A+3])},E.prototype.readIntLE=function(A,i,e){A|=0,i|=0,e||M(A,i,this.length);for(var t=this[A],C=1,n=0;++n<i&&(C*=256);)t+=this[A+n]*C;return t>=(C*=128)&&(t-=Math.pow(2,8*i)),t},E.prototype.readIntBE=function(A,i,e){A|=0,i|=0,e||M(A,i,this.length);for(var t=i,C=1,n=this[A+--t];t>0&&(C*=256);)n+=this[A+--t]*C;return n>=(C*=128)&&(n-=Math.pow(2,8*i)),n},E.prototype.readInt8=function(A,i){return i||M(A,1,this.length),128&this[A]?-1*(255-this[A]+1):this[A]},E.prototype.readInt16LE=function(A,i){i||M(A,2,this.length);var e=this[A]|this[A+1]<<8;return 32768&e?4294901760|e:e},E.prototype.readInt16BE=function(A,i){i||M(A,2,this.length);var e=this[A+1]|this[A]<<8;return 32768&e?4294901760|e:e},E.prototype.readInt32LE=function(A,i){return i||M(A,4,this.length),this[A]|this[A+1]<<8|this[A+2]<<16|this[A+3]<<24},E.prototype.readInt32BE=function(A,i){return i||M(A,4,this.length),this[A]<<24|this[A+1]<<16|this[A+2]<<8|this[A+3]},E.prototype.readFloatLE=function(A,i){return i||M(A,4,this.length),C.read(this,A,!0,23,4)},E.prototype.readFloatBE=function(A,i){return i||M(A,4,this.length),C.read(this,A,!1,23,4)},E.prototype.readDoubleLE=function(A,i){return i||M(A,8,this.length),C.read(this,A,!0,52,8)},E.prototype.readDoubleBE=function(A,i){return i||M(A,8,this.length),C.read(this,A,!1,52,8)},E.prototype.writeUIntLE=function(A,i,e,t){(A=+A,i|=0,e|=0,t)||x(this,A,i,e,Math.pow(2,8*e)-1,0);var C=1,n=0;for(this[i]=255&A;++n<e&&(C*=256);)this[i+n]=A/C&255;return i+e},E.prototype.writeUIntBE=function(A,i,e,t){(A=+A,i|=0,e|=0,t)||x(this,A,i,e,Math.pow(2,8*e)-1,0);var C=e-1,n=1;for(this[i+C]=255&A;--C>=0&&(n*=256);)this[i+C]=A/n&255;return i+e},E.prototype.writeUInt8=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,1,255,0),E.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),this[i]=255&A,i+1},E.prototype.writeUInt16LE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,2,65535,0),E.TYPED_ARRAY_SUPPORT?(this[i]=255&A,this[i+1]=A>>>8):w(this,A,i,!0),i+2},E.prototype.writeUInt16BE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,2,65535,0),E.TYPED_ARRAY_SUPPORT?(this[i]=A>>>8,this[i+1]=255&A):w(this,A,i,!1),i+2},E.prototype.writeUInt32LE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,4,4294967295,0),E.TYPED_ARRAY_SUPPORT?(this[i+3]=A>>>24,this[i+2]=A>>>16,this[i+1]=A>>>8,this[i]=255&A):S(this,A,i,!0),i+4},E.prototype.writeUInt32BE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,4,4294967295,0),E.TYPED_ARRAY_SUPPORT?(this[i]=A>>>24,this[i+1]=A>>>16,this[i+2]=A>>>8,this[i+3]=255&A):S(this,A,i,!1),i+4},E.prototype.writeIntLE=function(A,i,e,t){if(A=+A,i|=0,!t){var C=Math.pow(2,8*e-1);x(this,A,i,e,C-1,-C)}var n=0,h=1,r=0;for(this[i]=255&A;++n<e&&(h*=256);)A<0&&0===r&&0!==this[i+n-1]&&(r=1),this[i+n]=(A/h>>0)-r&255;return i+e},E.prototype.writeIntBE=function(A,i,e,t){if(A=+A,i|=0,!t){var C=Math.pow(2,8*e-1);x(this,A,i,e,C-1,-C)}var n=e-1,h=1,r=0;for(this[i+n]=255&A;--n>=0&&(h*=256);)A<0&&0===r&&0!==this[i+n+1]&&(r=1),this[i+n]=(A/h>>0)-r&255;return i+e},E.prototype.writeInt8=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,1,127,-128),E.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),A<0&&(A=255+A+1),this[i]=255&A,i+1},E.prototype.writeInt16LE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,2,32767,-32768),E.TYPED_ARRAY_SUPPORT?(this[i]=255&A,this[i+1]=A>>>8):w(this,A,i,!0),i+2},E.prototype.writeInt16BE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,2,32767,-32768),E.TYPED_ARRAY_SUPPORT?(this[i]=A>>>8,this[i+1]=255&A):w(this,A,i,!1),i+2},E.prototype.writeInt32LE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,4,2147483647,-2147483648),E.TYPED_ARRAY_SUPPORT?(this[i]=255&A,this[i+1]=A>>>8,this[i+2]=A>>>16,this[i+3]=A>>>24):S(this,A,i,!0),i+4},E.prototype.writeInt32BE=function(A,i,e){return A=+A,i|=0,e||x(this,A,i,4,2147483647,-2147483648),A<0&&(A=4294967295+A+1),E.TYPED_ARRAY_SUPPORT?(this[i]=A>>>24,this[i+1]=A>>>16,this[i+2]=A>>>8,this[i+3]=255&A):S(this,A,i,!1),i+4},E.prototype.writeFloatLE=function(A,i,e){return L(this,A,i,!0,e)},E.prototype.writeFloatBE=function(A,i,e){return L(this,A,i,!1,e)},E.prototype.writeDoubleLE=function(A,i,e){return R(this,A,i,!0,e)},E.prototype.writeDoubleBE=function(A,i,e){return R(this,A,i,!1,e)},E.prototype.copy=function(A,i,e,t){if(e||(e=0),t||0===t||(t=this.length),i>=A.length&&(i=A.length),i||(i=0),t>0&&t<e&&(t=e),t===e)return 0;if(0===A.length||0===this.length)return 0;if(i<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("sourceStart out of bounds");if(t<0)throw new RangeError("sourceEnd out of bounds");t>this.length&&(t=this.length),A.length-i<t-e&&(t=A.length-i+e);var C,n=t-e;if(this===A&&e<i&&i<t)for(C=n-1;C>=0;--C)A[C+i]=this[C+e];else if(n<1e3||!E.TYPED_ARRAY_SUPPORT)for(C=0;C<n;++C)A[C+i]=this[C+e];else Uint8Array.prototype.set.call(A,this.subarray(e,e+n),i);return n},E.prototype.fill=function(A,i,e,t){if("string"==typeof A){if("string"==typeof i?(t=i,i=0,e=this.length):"string"==typeof e&&(t=e,e=this.length),1===A.length){var C=A.charCodeAt(0);C<256&&(A=C)}if(void 0!==t&&"string"!=typeof t)throw new TypeError("encoding must be a string");if("string"==typeof t&&!E.isEncoding(t))throw new TypeError("Unknown encoding: "+t)}else"number"==typeof A&&(A&=255);if(i<0||this.length<i||this.length<e)throw new RangeError("Out of range index");if(e<=i)return this;var n;if(i>>>=0,e=void 0===e?this.length:e>>>0,A||(A=0),"number"==typeof A)for(n=i;n<e;++n)this[n]=A;else{var h=E.isBuffer(A)?A:N(new E(A,t).toString()),r=h.length;for(n=0;n<e-i;++n)this[n+i]=h[n%r]}return this};var P=/[^+\/0-9A-Za-z-_]/g;function O(A){return A<16?"0"+A.toString(16):A.toString(16)}function N(A,i){var e;i=i||1/0;for(var t=A.length,C=null,n=[],h=0;h<t;++h){if((e=A.charCodeAt(h))>55295&&e<57344){if(!C){if(e>56319){(i-=3)>-1&&n.push(239,191,189);continue}if(h+1===t){(i-=3)>-1&&n.push(239,191,189);continue}C=e;continue}if(e<56320){(i-=3)>-1&&n.push(239,191,189),C=e;continue}e=65536+(C-55296<<10|e-56320)}else C&&(i-=3)>-1&&n.push(239,191,189);if(C=null,e<128){if((i-=1)<0)break;n.push(e)}else if(e<2048){if((i-=2)<0)break;n.push(e>>6|192,63&e|128)}else if(e<65536){if((i-=3)<0)break;n.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((i-=4)<0)break;n.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return n}function J(A){return t.toByteArray(function(A){if((A=function(A){return A.trim?A.trim():A.replace(/^\s+|\s+$/g,"")}(A).replace(P,"")).length<2)return"";for(;A.length%4!=0;)A+="=";return A}(A))}function K(A,i,e,t){for(var C=0;C<t&&!(C+e>=i.length||C>=A.length);++C)i[C+e]=A[C];return C}}).call(this,e(20))},function(A,i){i.encode=function(A){var i="";for(var e in A)A.hasOwnProperty(e)&&(i.length&&(i+="&"),i+=encodeURIComponent(e)+"="+encodeURIComponent(A[e]));return i},i.decode=function(A){for(var i={},e=A.split("&"),t=0,C=e.length;t<C;t++){var n=e[t].split("=");i[decodeURIComponent(n[0])]=decodeURIComponent(n[1])}return i}},function(A,i){A.exports=function(A,i){var e=function(){};e.prototype=i.prototype,A.prototype=new e,A.prototype.constructor=A}},function(A,i,e){(function(t){function C(){var A;try{A=i.storage.debug}catch(A){}return!A&&void 0!==t&&"env"in t&&(A=t.env.DEBUG),A}(i=A.exports=e(66)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},i.formatArgs=function(A){var e=this.useColors;if(A[0]=(e?"%c":"")+this.namespace+(e?" %c":" ")+A[0]+(e?"%c ":" ")+"+"+i.humanize(this.diff),!e)return;var t="color: "+this.color;A.splice(1,0,t,"color: inherit");var C=0,n=0;A[0].replace(/%[a-zA-Z%]/g,(function(A){"%%"!==A&&(C++,"%c"===A&&(n=C))})),A.splice(n,0,t)},i.save=function(A){try{null==A?i.storage.removeItem("debug"):i.storage.debug=A}catch(A){}},i.load=C,i.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},i.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(A){}}(),i.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],i.formatters.j=function(A){try{return JSON.stringify(A)}catch(A){return"[UnexpectedJSONParseError]: "+A.message}},i.enable(C())}).call(this,e(22))},function(A,i,e){var t=e(7)("socket.io-parser"),C=e(5),n=e(51),h=e(24),r=e(25);function E(){}i.protocol=4,i.types=["CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK"],i.CONNECT=0,i.DISCONNECT=1,i.EVENT=2,i.ACK=3,i.ERROR=4,i.BINARY_EVENT=5,i.BINARY_ACK=6,i.Encoder=E,i.Decoder=k;var l=i.ERROR+'"encode error"';function o(A){var e=""+A.type;if(i.BINARY_EVENT!==A.type&&i.BINARY_ACK!==A.type||(e+=A.attachments+"-"),A.nsp&&"/"!==A.nsp&&(e+=A.nsp+","),null!=A.id&&(e+=A.id),null!=A.data){var C=function(A){try{return JSON.stringify(A)}catch(A){return!1}}(A.data);if(!1===C)return l;e+=C}return t("encoded %j as %s",A,e),e}function k(){this.reconstructor=null}function g(A){this.reconPack=A,this.buffers=[]}function D(A){return{type:i.ERROR,data:"parser error: "+A}}E.prototype.encode=function(A,e){(t("encoding packet %j",A),i.BINARY_EVENT===A.type||i.BINARY_ACK===A.type)?function(A,i){n.removeBlobs(A,(function(A){var e=n.deconstructPacket(A),t=o(e.packet),C=e.buffers;C.unshift(t),i(C)}))}(A,e):e([o(A)])},C(k.prototype),k.prototype.add=function(A){var e;if("string"==typeof A)e=function(A){var e=0,C={type:Number(A.charAt(0))};if(null==i.types[C.type])return D("unknown packet type "+C.type);if(i.BINARY_EVENT===C.type||i.BINARY_ACK===C.type){for(var n=e+1;"-"!==A.charAt(++e)&&e!=A.length;);var r=A.substring(n,e);if(r!=Number(r)||"-"!==A.charAt(e))throw new Error("Illegal attachments");C.attachments=Number(r)}if("/"===A.charAt(e+1)){for(n=e+1;++e;){if(","===(l=A.charAt(e)))break;if(e===A.length)break}C.nsp=A.substring(n,e)}else C.nsp="/";var E=A.charAt(e+1);if(""!==E&&Number(E)==E){for(n=e+1;++e;){var l;if(null==(l=A.charAt(e))||Number(l)!=l){--e;break}if(e===A.length)break}C.id=Number(A.substring(n,e+1))}if(A.charAt(++e)){var o=function(A){try{return JSON.parse(A)}catch(A){return!1}}(A.substr(e));if(!(!1!==o&&(C.type===i.ERROR||h(o))))return D("invalid payload");C.data=o}return t("decoded %s as %j",A,C),C}(A),i.BINARY_EVENT===e.type||i.BINARY_ACK===e.type?(this.reconstructor=new g(e),0===this.reconstructor.reconPack.attachments&&this.emit("decoded",e)):this.emit("decoded",e);else{if(!r(A)&&!A.base64)throw new Error("Unknown type: "+A);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");(e=this.reconstructor.takeBinaryData(A))&&(this.reconstructor=null,this.emit("decoded",e))}},k.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},g.prototype.takeBinaryData=function(A){if(this.buffers.push(A),this.buffers.length===this.reconPack.attachments){var i=n.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),i}return null},g.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},function(A,i,e){var t=e(57),C=e(14);A.exports=function(A){var i=A.xdomain,e=A.xscheme,n=A.enablesXDR;try{if("undefined"!=typeof XMLHttpRequest&&(!i||t))return new XMLHttpRequest}catch(A){}try{if("undefined"!=typeof XDomainRequest&&!e&&n)return new XDomainRequest}catch(A){}if(!i)try{return new(C[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(A){}}},function(A,i){A.exports="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")()},function(A,i,e){var t=e(6),C=e(5);function n(A){this.path=A.path,this.hostname=A.hostname,this.port=A.port,this.secure=A.secure,this.query=A.query,this.timestampParam=A.timestampParam,this.timestampRequests=A.timestampRequests,this.readyState="",this.agent=A.agent||!1,this.socket=A.socket,this.enablesXDR=A.enablesXDR,this.withCredentials=A.withCredentials,this.pfx=A.pfx,this.key=A.key,this.passphrase=A.passphrase,this.cert=A.cert,this.ca=A.ca,this.ciphers=A.ciphers,this.rejectUnauthorized=A.rejectUnauthorized,this.forceNode=A.forceNode,this.isReactNative=A.isReactNative,this.extraHeaders=A.extraHeaders,this.localAddress=A.localAddress}A.exports=n,C(n.prototype),n.prototype.onError=function(A,i){var e=new Error(A);return e.type="TransportError",e.description=i,this.emit("error",e),this},n.prototype.open=function(){return"closed"!==this.readyState&&""!==this.readyState||(this.readyState="opening",this.doOpen()),this},n.prototype.close=function(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this},n.prototype.send=function(A){if("open"!==this.readyState)throw new Error("Transport not open");this.write(A)},n.prototype.onOpen=function(){this.readyState="open",this.writable=!0,this.emit("open")},n.prototype.onData=function(A){var i=t.decodePacket(A,this.socket.binaryType);this.onPacket(i)},n.prototype.onPacket=function(A){this.emit("packet",A)},n.prototype.onClose=function(){this.readyState="closed",this.emit("close")}},function(A,i,e){"use strict";A.exports=e(47)},function(A,i,e){"use strict";(function(A,t){var C,n=e(37);C="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==A?A:t;var h=Object(n.a)(C);i.a=h}).call(this,e(20),e(48)(A))},,function(A,i,e){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var t=Object.getOwnPropertySymbols,C=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function h(A){if(null==A)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(A)}A.exports=function(){try{if(!Object.assign)return!1;var A=new String("abc");if(A[5]="de","5"===Object.getOwnPropertyNames(A)[0])return!1;for(var i={},e=0;e<10;e++)i["_"+String.fromCharCode(e)]=e;if("0123456789"!==Object.getOwnPropertyNames(i).map((function(A){return i[A]})).join(""))return!1;var t={};return"abcdefghijklmnopqrst".split("").forEach((function(A){t[A]=A})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},t)).join("")}catch(A){return!1}}()?Object.assign:function(A,i){for(var e,r,E=h(A),l=1;l<arguments.length;l++){for(var o in e=Object(arguments[l]))C.call(e,o)&&(E[o]=e[o]);if(t){r=t(e);for(var k=0;k<r.length;k++)n.call(e,r[k])&&(E[r[k]]=e[r[k]])}}return E}},function(A,i){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(A){"object"==typeof window&&(e=window)}A.exports=e},function(A,i){var e=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,t=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];A.exports=function(A){var i=A,C=A.indexOf("["),n=A.indexOf("]");-1!=C&&-1!=n&&(A=A.substring(0,C)+A.substring(C,n).replace(/:/g,";")+A.substring(n,A.length));for(var h,r,E=e.exec(A||""),l={},o=14;o--;)l[t[o]]=E[o]||"";return-1!=C&&-1!=n&&(l.source=i,l.host=l.host.substring(1,l.host.length-1).replace(/;/g,":"),l.authority=l.authority.replace("[","").replace("]","").replace(/;/g,":"),l.ipv6uri=!0),l.pathNames=function(A,i){var e=i.replace(/\/{2,9}/g,"/").split("/");"/"!=i.substr(0,1)&&0!==i.length||e.splice(0,1);"/"==i.substr(i.length-1,1)&&e.splice(e.length-1,1);return e}(0,l.path),l.queryKey=(h=l.query,r={},h.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(A,i,e){i&&(r[i]=e)})),r),l}},function(A,i){var e,t,C=A.exports={};function n(){throw new Error("setTimeout has not been defined")}function h(){throw new Error("clearTimeout has not been defined")}function r(A){if(e===setTimeout)return setTimeout(A,0);if((e===n||!e)&&setTimeout)return e=setTimeout,setTimeout(A,0);try{return e(A,0)}catch(i){try{return e.call(null,A,0)}catch(i){return e.call(this,A,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:n}catch(A){e=n}try{t="function"==typeof clearTimeout?clearTimeout:h}catch(A){t=h}}();var E,l=[],o=!1,k=-1;function g(){o&&E&&(o=!1,E.length?l=E.concat(l):k=-1,l.length&&D())}function D(){if(!o){var A=r(g);o=!0;for(var i=l.length;i;){for(E=l,l=[];++k<i;)E&&E[k].run();k=-1,i=l.length}E=null,o=!1,function(A){if(t===clearTimeout)return clearTimeout(A);if((t===h||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(A);try{t(A)}catch(i){try{return t.call(null,A)}catch(i){return t.call(this,A)}}}(A)}}function a(A,i){this.fun=A,this.array=i}function s(){}C.nextTick=function(A){var i=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)i[e-1]=arguments[e];l.push(new a(A,i)),1!==l.length||o||r(D)},a.prototype.run=function(){this.fun.apply(null,this.array)},C.title="browser",C.browser=!0,C.env={},C.argv=[],C.version="",C.versions={},C.on=s,C.addListener=s,C.once=s,C.off=s,C.removeListener=s,C.removeAllListeners=s,C.emit=s,C.prependListener=s,C.prependOnceListener=s,C.listeners=function(A){return[]},C.binding=function(A){throw new Error("process.binding is not supported")},C.cwd=function(){return"/"},C.chdir=function(A){throw new Error("process.chdir is not supported")},C.umask=function(){return 0}},function(A,i){var e=1e3,t=6e4,C=60*t,n=24*C;function h(A,i,e){if(!(A<i))return A<1.5*i?Math.floor(A/i)+" "+e:Math.ceil(A/i)+" "+e+"s"}A.exports=function(A,i){i=i||{};var r,E=typeof A;if("string"===E&&A.length>0)return function(A){if((A=String(A)).length>100)return;var i=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(A);if(!i)return;var h=parseFloat(i[1]);switch((i[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*h;case"days":case"day":case"d":return h*n;case"hours":case"hour":case"hrs":case"hr":case"h":return h*C;case"minutes":case"minute":case"mins":case"min":case"m":return h*t;case"seconds":case"second":case"secs":case"sec":case"s":return h*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return h;default:return}}(A);if("number"===E&&!1===isNaN(A))return i.long?h(r=A,n,"day")||h(r,C,"hour")||h(r,t,"minute")||h(r,e,"second")||r+" ms":function(A){if(A>=n)return Math.round(A/n)+"d";if(A>=C)return Math.round(A/C)+"h";if(A>=t)return Math.round(A/t)+"m";if(A>=e)return Math.round(A/e)+"s";return A+"ms"}(A);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(A))}},function(A,i){var e={}.toString;A.exports=Array.isArray||function(A){return"[object Array]"==e.call(A)}},function(A,i,e){(function(i){A.exports=function(A){return e&&i.isBuffer(A)||t&&(A instanceof ArrayBuffer||function(A){return"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(A):A.buffer instanceof ArrayBuffer}(A))};var e="function"==typeof i&&"function"==typeof i.isBuffer,t="function"==typeof ArrayBuffer}).call(this,e(8).Buffer)},function(A,i,e){var t=e(55),C=e(32),n=e(5),h=e(12),r=e(33),E=e(34),l=e(7)("socket.io-client:manager"),o=e(31),k=e(71),g=Object.prototype.hasOwnProperty;function D(A,i){if(!(this instanceof D))return new D(A,i);A&&"object"==typeof A&&(i=A,A=void 0),(i=i||{}).path=i.path||"/socket.io",this.nsps={},this.subs=[],this.opts=i,this.reconnection(!1!==i.reconnection),this.reconnectionAttempts(i.reconnectionAttempts||1/0),this.reconnectionDelay(i.reconnectionDelay||1e3),this.reconnectionDelayMax(i.reconnectionDelayMax||5e3),this.randomizationFactor(i.randomizationFactor||.5),this.backoff=new k({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==i.timeout?2e4:i.timeout),this.readyState="closed",this.uri=A,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var e=i.parser||h;this.encoder=new e.Encoder,this.decoder=new e.Decoder,this.autoConnect=!1!==i.autoConnect,this.autoConnect&&this.open()}A.exports=D,D.prototype.emitAll=function(){for(var A in this.emit.apply(this,arguments),this.nsps)g.call(this.nsps,A)&&this.nsps[A].emit.apply(this.nsps[A],arguments)},D.prototype.updateSocketIds=function(){for(var A in this.nsps)g.call(this.nsps,A)&&(this.nsps[A].id=this.generateId(A))},D.prototype.generateId=function(A){return("/"===A?"":A+"#")+this.engine.id},n(D.prototype),D.prototype.reconnection=function(A){return arguments.length?(this._reconnection=!!A,this):this._reconnection},D.prototype.reconnectionAttempts=function(A){return arguments.length?(this._reconnectionAttempts=A,this):this._reconnectionAttempts},D.prototype.reconnectionDelay=function(A){return arguments.length?(this._reconnectionDelay=A,this.backoff&&this.backoff.setMin(A),this):this._reconnectionDelay},D.prototype.randomizationFactor=function(A){return arguments.length?(this._randomizationFactor=A,this.backoff&&this.backoff.setJitter(A),this):this._randomizationFactor},D.prototype.reconnectionDelayMax=function(A){return arguments.length?(this._reconnectionDelayMax=A,this.backoff&&this.backoff.setMax(A),this):this._reconnectionDelayMax},D.prototype.timeout=function(A){return arguments.length?(this._timeout=A,this):this._timeout},D.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},D.prototype.open=D.prototype.connect=function(A,i){if(l("readyState %s",this.readyState),~this.readyState.indexOf("open"))return this;l("opening %s",this.uri),this.engine=t(this.uri,this.opts);var e=this.engine,C=this;this.readyState="opening",this.skipReconnect=!1;var n=r(e,"open",(function(){C.onopen(),A&&A()})),h=r(e,"error",(function(i){if(l("connect_error"),C.cleanup(),C.readyState="closed",C.emitAll("connect_error",i),A){var e=new Error("Connection error");e.data=i,A(e)}else C.maybeReconnectOnOpen()}));if(!1!==this._timeout){var E=this._timeout;l("connect attempt will timeout after %d",E),0===E&&n.destroy();var o=setTimeout((function(){l("connect attempt timed out after %d",E),n.destroy(),e.close(),e.emit("error","timeout"),C.emitAll("connect_timeout",E)}),E);this.subs.push({destroy:function(){clearTimeout(o)}})}return this.subs.push(n),this.subs.push(h),this},D.prototype.onopen=function(){l("open"),this.cleanup(),this.readyState="open",this.emit("open");var A=this.engine;this.subs.push(r(A,"data",E(this,"ondata"))),this.subs.push(r(A,"ping",E(this,"onping"))),this.subs.push(r(A,"pong",E(this,"onpong"))),this.subs.push(r(A,"error",E(this,"onerror"))),this.subs.push(r(A,"close",E(this,"onclose"))),this.subs.push(r(this.decoder,"decoded",E(this,"ondecoded")))},D.prototype.onping=function(){this.lastPing=new Date,this.emitAll("ping")},D.prototype.onpong=function(){this.emitAll("pong",new Date-this.lastPing)},D.prototype.ondata=function(A){this.decoder.add(A)},D.prototype.ondecoded=function(A){this.emit("packet",A)},D.prototype.onerror=function(A){l("error",A),this.emitAll("error",A)},D.prototype.socket=function(A,i){var e=this.nsps[A];if(!e){e=new C(this,A,i),this.nsps[A]=e;var t=this;e.on("connecting",n),e.on("connect",(function(){e.id=t.generateId(A)})),this.autoConnect&&n()}function n(){~o(t.connecting,e)||t.connecting.push(e)}return e},D.prototype.destroy=function(A){var i=o(this.connecting,A);~i&&this.connecting.splice(i,1),this.connecting.length||this.close()},D.prototype.packet=function(A){l("writing packet %j",A);var i=this;A.query&&0===A.type&&(A.nsp+="?"+A.query),i.encoding?i.packetBuffer.push(A):(i.encoding=!0,this.encoder.encode(A,(function(e){for(var t=0;t<e.length;t++)i.engine.write(e[t],A.options);i.encoding=!1,i.processPacketQueue()})))},D.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var A=this.packetBuffer.shift();this.packet(A)}},D.prototype.cleanup=function(){l("cleanup");for(var A=this.subs.length,i=0;i<A;i++){this.subs.shift().destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},D.prototype.close=D.prototype.disconnect=function(){l("disconnect"),this.skipReconnect=!0,this.reconnecting=!1,"opening"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState="closed",this.engine&&this.engine.close()},D.prototype.onclose=function(A){l("onclose"),this.cleanup(),this.backoff.reset(),this.readyState="closed",this.emit("close",A),this._reconnection&&!this.skipReconnect&&this.reconnect()},D.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var A=this;if(this.backoff.attempts>=this._reconnectionAttempts)l("reconnect failed"),this.backoff.reset(),this.emitAll("reconnect_failed"),this.reconnecting=!1;else{var i=this.backoff.duration();l("will wait %dms before reconnect attempt",i),this.reconnecting=!0;var e=setTimeout((function(){A.skipReconnect||(l("attempting reconnect"),A.emitAll("reconnect_attempt",A.backoff.attempts),A.emitAll("reconnecting",A.backoff.attempts),A.skipReconnect||A.open((function(i){i?(l("reconnect attempt error"),A.reconnecting=!1,A.reconnect(),A.emitAll("reconnect_error",i.data)):(l("reconnect success"),A.onreconnect())})))}),i);this.subs.push({destroy:function(){clearTimeout(e)}})}},D.prototype.onreconnect=function(){var A=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll("reconnect",A)}},function(A,i,e){var t=e(13),C=e(58),n=e(67),h=e(68);i.polling=function(A){var i=!1,e=!1,h=!1!==A.jsonp;if("undefined"!=typeof location){var r="https:"===location.protocol,E=location.port;E||(E=r?443:80),i=A.hostname!==location.hostname||E!==A.port,e=A.secure!==r}if(A.xdomain=i,A.xscheme=e,"open"in new t(A)&&!A.forceJSONP)return new C(A);if(!h)throw new Error("JSONP disabled");return new n(A)},i.websocket=h},function(A,i,e){var t=e(15),C=e(9),n=e(6),h=e(10),r=e(30),E=e(11)("engine.io-client:polling");A.exports=o;var l=null!=new(e(13))({xdomain:!1}).responseType;function o(A){var i=A&&A.forceBase64;l&&!i||(this.supportsBinary=!1),t.call(this,A)}h(o,t),o.prototype.name="polling",o.prototype.doOpen=function(){this.poll()},o.prototype.pause=function(A){var i=this;function e(){E("paused"),i.readyState="paused",A()}if(this.readyState="pausing",this.polling||!this.writable){var t=0;this.polling&&(E("we are currently polling - waiting to pause"),t++,this.once("pollComplete",(function(){E("pre-pause polling complete"),--t||e()}))),this.writable||(E("we are currently writing - waiting to pause"),t++,this.once("drain",(function(){E("pre-pause writing complete"),--t||e()})))}else e()},o.prototype.poll=function(){E("polling"),this.polling=!0,this.doPoll(),this.emit("poll")},o.prototype.onData=function(A){var i=this;E("polling got data %s",A);n.decodePayload(A,this.socket.binaryType,(function(A,e,t){if("opening"===i.readyState&&"open"===A.type&&i.onOpen(),"close"===A.type)return i.onClose(),!1;i.onPacket(A)})),"closed"!==this.readyState&&(this.polling=!1,this.emit("pollComplete"),"open"===this.readyState?this.poll():E('ignoring poll - transport state "%s"',this.readyState))},o.prototype.doClose=function(){var A=this;function i(){E("writing close packet"),A.write([{type:"close"}])}"open"===this.readyState?(E("transport open - closing"),i()):(E("transport not open - deferring close"),this.once("open",i))},o.prototype.write=function(A){var i=this;this.writable=!1;var e=function(){i.writable=!0,i.emit("drain")};n.encodePayload(A,this.supportsBinary,(function(A){i.doWrite(A,e)}))},o.prototype.uri=function(){var A=this.query||{},i=this.secure?"https":"http",e="";return!1!==this.timestampRequests&&(A[this.timestampParam]=r()),this.supportsBinary||A.sid||(A.b64=1),A=C.encode(A),this.port&&("https"===i&&443!==Number(this.port)||"http"===i&&80!==Number(this.port))&&(e=":"+this.port),A.length&&(A="?"+A),i+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+e+this.path+A}},function(A,i,e){(function(i){var t=e(60),C=Object.prototype.toString,n="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===C.call(Blob),h="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===C.call(File);A.exports=function A(e){if(!e||"object"!=typeof e)return!1;if(t(e)){for(var C=0,r=e.length;C<r;C++)if(A(e[C]))return!0;return!1}if("function"==typeof i&&i.isBuffer&&i.isBuffer(e)||"function"==typeof ArrayBuffer&&e instanceof ArrayBuffer||n&&e instanceof Blob||h&&e instanceof File)return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return A(e.toJSON(),!0);for(var E in e)if(Object.prototype.hasOwnProperty.call(e,E)&&A(e[E]))return!0;return!1}}).call(this,e(8).Buffer)},function(A,i,e){"use strict";var t,C="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),n={},h=0,r=0;function E(A){var i="";do{i=C[A%64]+i,A=Math.floor(A/64)}while(A>0);return i}function l(){var A=E(+new Date);return A!==t?(h=0,t=A):A+"."+E(h++)}for(;r<64;r++)n[C[r]]=r;l.encode=E,l.decode=function(A){var i=0;for(r=0;r<A.length;r++)i=64*i+n[A.charAt(r)];return i},A.exports=l},function(A,i){var e=[].indexOf;A.exports=function(A,i){if(e)return A.indexOf(i);for(var t=0;t<A.length;++t)if(A[t]===i)return t;return-1}},function(A,i,e){var t=e(12),C=e(5),n=e(70),h=e(33),r=e(34),E=e(7)("socket.io-client:socket"),l=e(9),o=e(29);A.exports=D;var k={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},g=C.prototype.emit;function D(A,i,e){this.io=A,this.nsp=i,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.flags={},e&&e.query&&(this.query=e.query),this.io.autoConnect&&this.open()}C(D.prototype),D.prototype.subEvents=function(){if(!this.subs){var A=this.io;this.subs=[h(A,"open",r(this,"onopen")),h(A,"packet",r(this,"onpacket")),h(A,"close",r(this,"onclose"))]}},D.prototype.open=D.prototype.connect=function(){return this.connected||(this.subEvents(),this.io.reconnecting||this.io.open(),"open"===this.io.readyState&&this.onopen(),this.emit("connecting")),this},D.prototype.send=function(){var A=n(arguments);return A.unshift("message"),this.emit.apply(this,A),this},D.prototype.emit=function(A){if(k.hasOwnProperty(A))return g.apply(this,arguments),this;var i=n(arguments),e={type:(void 0!==this.flags.binary?this.flags.binary:o(i))?t.BINARY_EVENT:t.EVENT,data:i,options:{}};return e.options.compress=!this.flags||!1!==this.flags.compress,"function"==typeof i[i.length-1]&&(E("emitting packet with ack id %d",this.ids),this.acks[this.ids]=i.pop(),e.id=this.ids++),this.connected?this.packet(e):this.sendBuffer.push(e),this.flags={},this},D.prototype.packet=function(A){A.nsp=this.nsp,this.io.packet(A)},D.prototype.onopen=function(){if(E("transport is open - connecting"),"/"!==this.nsp)if(this.query){var A="object"==typeof this.query?l.encode(this.query):this.query;E("sending connect packet with query %s",A),this.packet({type:t.CONNECT,query:A})}else this.packet({type:t.CONNECT})},D.prototype.onclose=function(A){E("close (%s)",A),this.connected=!1,this.disconnected=!0,delete this.id,this.emit("disconnect",A)},D.prototype.onpacket=function(A){var i=A.nsp===this.nsp,e=A.type===t.ERROR&&"/"===A.nsp;if(i||e)switch(A.type){case t.CONNECT:this.onconnect();break;case t.EVENT:case t.BINARY_EVENT:this.onevent(A);break;case t.ACK:case t.BINARY_ACK:this.onack(A);break;case t.DISCONNECT:this.ondisconnect();break;case t.ERROR:this.emit("error",A.data)}},D.prototype.onevent=function(A){var i=A.data||[];E("emitting event %j",i),null!=A.id&&(E("attaching ack callback to event"),i.push(this.ack(A.id))),this.connected?g.apply(this,i):this.receiveBuffer.push(i)},D.prototype.ack=function(A){var i=this,e=!1;return function(){if(!e){e=!0;var C=n(arguments);E("sending ack %j",C),i.packet({type:o(C)?t.BINARY_ACK:t.ACK,id:A,data:C})}}},D.prototype.onack=function(A){var i=this.acks[A.id];"function"==typeof i?(E("calling ack %s with %j",A.id,A.data),i.apply(this,A.data),delete this.acks[A.id]):E("bad ack %s",A.id)},D.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit("connect"),this.emitBuffered()},D.prototype.emitBuffered=function(){var A;for(A=0;A<this.receiveBuffer.length;A++)g.apply(this,this.receiveBuffer[A]);for(this.receiveBuffer=[],A=0;A<this.sendBuffer.length;A++)this.packet(this.sendBuffer[A]);this.sendBuffer=[]},D.prototype.ondisconnect=function(){E("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")},D.prototype.destroy=function(){if(this.subs){for(var A=0;A<this.subs.length;A++)this.subs[A].destroy();this.subs=null}this.io.destroy(this)},D.prototype.close=D.prototype.disconnect=function(){return this.connected&&(E("performing disconnect (%s)",this.nsp),this.packet({type:t.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this},D.prototype.compress=function(A){return this.flags.compress=A,this},D.prototype.binary=function(A){return this.flags.binary=A,this}},function(A,i){A.exports=function(A,i,e){return A.on(i,e),{destroy:function(){A.removeListener(i,e)}}}},function(A,i){var e=[].slice;A.exports=function(A,i){if("string"==typeof i&&(i=A[i]),"function"!=typeof i)throw new Error("bind() requires a function");var t=e.call(arguments,2);return function(){return i.apply(A,t.concat(e.call(arguments)))}}},function(A,i,e){"use strict";!function A(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(A)}catch(A){console.error(A)}}}(),A.exports=e(42)},function(A,i,e){"use strict";var t=e(16),C={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},n={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},h={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},r={};function E(A){return t.isMemo(A)?h:r[A.$$typeof]||C}r[t.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},r[t.Memo]=h;var l=Object.defineProperty,o=Object.getOwnPropertyNames,k=Object.getOwnPropertySymbols,g=Object.getOwnPropertyDescriptor,D=Object.getPrototypeOf,a=Object.prototype;A.exports=function A(i,e,t){if("string"!=typeof e){if(a){var C=D(e);C&&C!==a&&A(i,C,t)}var h=o(e);k&&(h=h.concat(k(e)));for(var r=E(i),s=E(e),B=0;B<h.length;++B){var j=h[B];if(!(n[j]||t&&t[j]||s&&s[j]||r&&r[j])){var m=g(e,j);try{l(i,j,m)}catch(A){}}}}return i}},function(A,i,e){"use strict";function t(A){var i,e=A.Symbol;return"function"==typeof e?e.observable?i=e.observable:(i=e("observable"),e.observable=i):i="@@observable",i}e.d(i,"a",(function(){return t}))},function(A,i,e){var t=e(49),C=e(12),n=e(26),h=e(7)("socket.io-client");A.exports=i=E;var r=i.managers={};function E(A,i){"object"==typeof A&&(i=A,A=void 0),i=i||{};var e,C=t(A),E=C.source,l=C.id,o=C.path,k=r[l]&&o in r[l].nsps;return i.forceNew||i["force new connection"]||!1===i.multiplex||k?(h("ignoring socket cache for %s",E),e=n(E,i)):(r[l]||(h("new io instance for %s",E),r[l]=n(E,i)),e=r[l]),C.query&&!i.query&&(i.query=C.query),e.socket(C.path,i)}i.protocol=C.protocol,i.connect=E,i.Manager=e(26),i.Socket=e(32)},function(A){A.exports=JSON.parse('{"layers":[{"preprocessing":"inputLightRegulation","size":64,"nBlurPass":1,"type":"input","index":0,"mask":false,"tilt":0,"customInputShader":false},{"size":128,"sparsity":8,"activation":"arctan","connectivity":{"fromLayerSize":64,"toLayerSize":128,"toSparsity":8,"weights":{"isPot":true,"width":64,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":16384,\\"data\\":\\"\\"}"},"kernelsCount":8,"layerIndex":1},"bias":{"isPot":true,"width":8,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":256,\\"data\\":\\"nJIjqnsBtYsOFYsDuCpPsFseojKBsCMSpUreqlotsApOoAqvkqsnEFqyqHqpsxMhtFrsoSn1uCMGr/sDsnsuJ9rZMCoKqkpYsPLNL5qeLkrdKboZsiMfHYqtqBjPmgrKsvs/MCMDsRsMroLatvrSs9nUqEpwsCItKso9Ihrer+qbM2KsgdNJAAsEphrDqSpmpTriCJpdpkr2rOoJtrrqrKDuqiotqIoiq8oTMGnDGPrNJypwo1DvqGkBpXKnqFpYHeomp/rZp4LVpUrzuCruJYEynapmLXEypao4mwpQrAoCnum3pPoDpjkxnpAAKEotqjMAL6KmLOo8mjHSpRsAMCLinlq7rFnepDKPGbKHoYqBo7KHnjo1pym5pgl8ohloq3qbqKp0pCK2s7pgobpstKraqJGFGEq9mUG5jel0DgnElYqBpnmepRkMoOoJGWphmuscKWsAsFnDLEHekIplMeq/mcHIkPKDo5puFeoJpLo3o+oMkzprojo/pappqwIh\\"}"},"index":1,"classesCount":false,"connectivityUp":"conv","normalize":false,"kernelsCount":8,"maxPooling":{"size":2},"remap":{"isEnabled":false},"isReorganize":true,"dynPelu":false},{"size":128,"sparsity":16,"activation":"arctan","connectivity":{"fromLayerSize":64,"toLayerSize":128,"toSparsity":16,"weights":{"isPot":true,"width":256,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":262144,\\"data\\":\\"\\"}"},"kernelsCount":16,"layerIndex":2},"bias":{"isPot":true,"width":16,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":1024,\\"data\\":\\"izAAgSmbDyjHl6nVgMl3FOlemIi1mSmnmYlCj7mYFzj2E+kqmikFkMFvmHmNiRo1iDkLAAm9gaDYiPgcl4COAAj9kKlBlqlXEAFEiymzAAlal1D9k9g/lOlAmAkUlPGYAAhFn4EKhaiJmYAAA0ijjqjZAAlNiAE5kRl8mIiemBgflNCKk3kSCMkfGBmKjRg3kKjlEnnvAlkSmCmLlCCQmgkDjkAAi8khkmiRkXkDAAAAlUl1llAAmSnWALmGkVEAkBF9ikl/mIk+BdFOEblRAAjUjJAAlkm1lRDPh/jeh5GBltGRARmQAAkrkMjbAAn/gSjWHohqAAkoioAADgnWAAkbidDdA/kNlbBxk7gdjXl4BZjDAAklAAjtgilLkZAAjWAtnei8DhiKFmijAAE7F1kUhPmAkikTmIk0gPDWh5F5mnjljSEJlxlHAAiXkBnCh3gYj8k+mOhskkkKGMj/jBn+EHkDj7iQk4nfkZjWAAkFFymwAAmZB6ldmDkmlyAAiSAAgpngjfkfCvk4B2mrCtlNAAi2AAAAi2lNmEovC8l4AAgKjFiwiKlPhGixkFk0m7lugmnQktk0lPlYknAAE1FelVjSl5i7l7mpmLlymHEAkDgSAAkUj6iRkVn5gdlShpkQDdjJjnHbAAi6AAm+l5AAmhFCjukLmFg/nAijmMl6mBAAlziPm9l3jvkGnMATk1ihmLlRmKltlhoCk0l4Drm6i/EDlygaAAhJhZmJlYl5AAELk2kmlqi5nUhCEzlOk0AAoCkzmNkqnCkUi7lbkblrlYk5i5BikdmJAAlCmqkOizlIB1gekTn8mNEGjvAnhGlND0jSjLAhl+Dgj9kQCFlkkflFm9AakDAAhqAMlEAAkZjzldmSmSmHl2CHijiMmZkjhqkunjn8hklPBsmAAAlpkJjWEwD+l/CTmXCpAAm6iOCYlUkDksoEj7mZmvkJjWkWk9m+lblcmmmCCqkGjJmIkTmDmMm8k4l1jvoGlBF3gWmBlHjMlVoQiJnlAADXkGAAnMAAmHhnEljpjukalDj1l3g1jllSljlbhcl1AACIlYlHAAlJkkkEkxjplskLgDAADIh9kkAAmrEjl+l1gmlXkkAAltCQjMkzlzmBhrmNmDAAlFnPkJj/jdmBkTllimAAlTjnltAAkdkVAAFsh/helSmBi2lglbhsAAnYlekzAAhgl1iLjJnRktjfmXmimMkdn3mBlamon6gglhkoAAinlLlInsDxmNkfnLmgAylflJl/AACUjYmqmoAAnMnsmFgmlinfkhAAFFAAiMkMn/lwi1jVAAnEkEkdmtiRiZjfCJnDh9lBiZAAj2kRmJiTmRk1oCg7AAj6mKAAiVjakvgrDxAAnlFImfmCEemEmEibmCAAi+ilk7mOgTmNnRj3kbiUmOC2kbEIAAlRAAljibB0lTmnicjnlPlciHignkmBiwAbhClrgbnBi7lqAAAAlainAAAAmsgQjZiSlqk2l4n0gclymLkBkNkIAgnGkqgFjlC0mHAAnonDh8mJmOlQkhmGEOmCi7iMgYAAlrjul7lni6izAAoCi2mDlun8hKjmBBjumDl3hxmHl9lKm0ovAAj1AAjShrl8mElqlmkClXCSnfhHoCl2kRg/kkjKmEj7oBAAmmmNi/m/D3l/kInXlfCQE3mDEOjul5AAmFitEdj7kjjLALnRmkAAlfE7k8jZkSAAAAkxnEj5lKlvkHmEmjnWkTm8knnQCCD3lajfC/nwkNkAk8kmnnmxlRoFkKmvnkkZl1nXkcoDklmRmUGhilFdkDk0FCimlBnKFimJnckWAACFloCJjtl3khnak9kuDLlLlkmDm8mUlwjXk+AACslBmhnsm6mbnYoGjmljAXmBjlnNi/gEmNlAnnizoFkGonoyAxlzhiDLAAkUoDEZkeijkBoCAAmEg5AAkHDCAAkaAAkUiOmRmKielpjvmkl4AAkijukCi5AAiKmkg+kplFmIoBkwmMmGByDRCvmPhbC/lwmbAAk/mZkpjKnHlZkUmNCSnkmwlDmwmZjMlHhT\\"}"},"index":2,"classesCount":false,"connectivityUp":"conv","normalize":false,"kernelsCount":16,"maxPooling":{"size":2},"remap":{"isEnabled":false},"isReorganize":true,"dynPelu":false},{"size":32,"sparsity":32,"activation":"elu01","connectivity":{"fromLayerSize":64,"toLayerSize":32,"toSparsity":32,"weights":{"isPot":true,"width":128,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":65536,\\"data\\":\\"\\"}"},"kernelsCount":4,"layerIndex":3},"bias":{"isPot":true,"width":4,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":64,\\"data\\":\\"GJHLHWICFjDUIKFUiqIfHMIOHpE4H5HgEWG5G1IlGZG1AAG7HuG8HBDBAAGgHVISHuGxFPHAHcG1C3IBF3HcHyHeIcIOIJH7GEHJH2H+GaHSGkIJGVGKGbF7FYGjGoGL\\"}"},"index":3,"classesCount":false,"connectivityUp":"conv","normalize":false,"kernelsCount":4,"maxPooling":false,"remap":{"isEnabled":false},"isReorganize":true,"dynPelu":false},{"size":16,"sparsity":14,"activation":"elu01","connectivity":{"fromLayerSize":32,"toLayerSize":16,"toSparsity":14,"weightsFromTo":false,"fromBindings":false,"toBindings":false,"squareFast":true,"weights":{"isPot":false,"width":224,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":200704,\\"data\\":\\"\\"}"},"stride":1},"bias":{"isPot":true,"width":16,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":1024,\\"data\\":\\"I2CuIUAAGulmEjGVHbJlGuJnlVJoGdGLkJIlGqAbIcGSGUIVJXKCiwGCIsAAEsHRK1AAm8HNiPEEF/FKFtGGAADqESAyGeHMAAgZiSBFH2DjAACWFWEKFfHpBjHJBuELC2AAGiDMDcDgE+GiGJJDFPCmIzihHUJQEDGuIkIuF+JjJOGfifkKIEJ0jbHNFmE+IyiiCMGBDNG2DLhpERAAAADUjAGOhuEaAAhHGMEKANAADrHHHRj/JCFsH1CoIOFuGRItErEXBRD5IcIJESIDH1IBIyLKEhIXIaGKGBnAIMBgI3HOAAKlDjI0DuEsAAJdEeJ3GeHTFUHEEIEXiNE3FHE3igIQAAHNCGAAH3iKAAHeEyIIHGG7g9EVFimJGVC+kCjsIMEYGXH8maHykGAAF9HqmXHIi2lELGG3DjiwJlK4IZIWIwHKIeI7E8HLGFJRJfIkHoGCLqAAJsJGgfGaIhAACCmlG6B4HXAAKbERFckOEtImJ7ETIDHGGqFdEMGGCSIgGQHmGeHemdHdGIgmFiE2GJK1ihJJHPIGHDAXHYKSgqJZIUIojuJyAAjJHpInI6FRFNG7CNjtHZhmBdEFFtFQGZAAFAGcEZgIHEAACEEUAAE+IeGLGvjTE5giG5FMmpI1EfJmIBkekCAADnJYGPKJAALiJBoGIeHpAFIGkBAAHrI2LZEiJTIKAAEDB/AaGTIRKFIfG/keGXENMIG0E1lmI5I2AAGUAAHPGpESIbEoAGIjHEFDGVFyjzGRG+kDFrGBFvIXIEKXDBGZl1Jom/JbJaEPHritJUHiItGpEcH3MtIeIUG+JxDfGDGSAAJ4GwGhGjIoJRCshSJRHahIImJWjBG/JahNI4DpG9mWDdErF9IYAAEJCED5HyIDCTEIFmiEGYD9ErH1EWjyIHAAIsHZIEFdIahBAANmIdIcMVIZL1InIlqOIsFxmwIBInGLGzIaEaGwHBH5HvHwm8hiIWGakUIxAAHMg8iamEE2AAAADJHAD3IYD+lPAAAAGqG/HAkDIuDlJvKcAAg9IuIpIhIrmrIHI6HiC/B2FfMKGMIKiMImHDKBAAJ0EBIgI+jXGAG5IlJuIKFmHxljJ1E7F9EBlKI2AAFnIACdH5l7HoAAFLK8AAAAAAEOIgG+JnjvIFEblLIyDkAAI7kJGDI/IfKOA6I8AAHhFtKaITI7JbI6GtheHXisjPjpGpHAIhJSCGGTHOG6GWmmDNIKHUIGAACVF8IEAAFxiqGSiBi/JMFREjGwFhiWHAHsFZHVinFxGuHiGfAAGTIUHiGmHBFbHUJlgiiCMhKXk8HMFwG4FtHWERGZItJmJ7I/HdGyDGiMGQIpF6EljwGvG2ADAAEGhDGvCFG1BejaGrGlIhAKECGUGOGPICJ8AzHGGmI0IVGRGkFaETIOCWJIHcGqIHGTGZGQMaFCKhJFAAEiGhAAo7kAAoIcH6JcGkFZGyJDAPIGosFzGDGEmMlvHYFvJNCEGGAuCHCYHpBxgWIbCTAAGDkeC+iJiAiJFtGnIhHfInFHGBAAAAHFGkFfE1D1HoARIeIfCbIaJMF3D4ACHPAAFiHZFUAHgZGPEnGZB5kMHCGtG7jUE2EnAACkJpDlBEAAitEuEuBgCwCWFCAAEom1gIAACMEVHQFaFZGiGvEMIAGSEdGLC5E/AAHvDzDvEMgmkbDWk+GsItAEAAmMIJnOHtGaGtmKIQKBHfCQFLAAGoGSE8AAAAGmCYj7nOFBj5h/AAhUEkETDBFgEMDSh8AADIFaCxBHFNCeAAA2HmicGwCYEPG8kUj5FDFggRi1KyHBFKJxEiJsHMCRELC9CqIggeInIkEvFYCwI/AAB7E3HfIhDmkdEvIbGrCOH5h/HEAAAAG2EqH8FfjXCYDQGRC/EiDLAAiJITD4GREEAAAAl/EMluG1F1AAATEAAAIZoGFWGYAUmQGOLmGCEUAAITJNIciRDXHYGwEMHblok9EPIqEJhLGOFRGxmcEsleglCFGCEJAAEAgFD8IOnikSAAAZF2AAAAD1lTgQl2AAIKBGHrDy\\"}"},"index":4,"classesCount":false,"connectivityUp":"squareFast","normalize":false,"kernelsCount":false,"maxPooling":false,"remap":{"isEnabled":false},"isReorganize":false,"dynPelu":false},{"size":16,"sparsity":5,"activation":"elu01","connectivity":{"fromLayerSize":16,"toLayerSize":16,"toSparsity":5,"weightsFromTo":false,"fromBindings":false,"toBindings":false,"squareFast":true,"weights":{"isPot":false,"width":80,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":25600,\\"data\\":\\"\\"}"},"stride":3},"bias":{"isPot":true,"width":16,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":1024,\\"data\\":\\"oMAABgIEAAmHAADWGwGBFEFdAAAAKyEhi8gHjskci2l9LpHcGmE6FwHUJdmEAAkLAAFkAAFkGLG5GLAAmAAOB7ACHwAAAAHoAAAAGEGFAAA1iHICB0EoGHn/EIERAAhkB/AAAAkEAABJAAAAAAFuAVMHD7MDGAJOExAhAnAAAALBkgDDAAH4idFMGID8AjD2kwAAGqAXAAFnI3C8AAEUB8G0D2A/AAIsAAEHAAAAAAAAknEfBmAAAAlECWAAEKB4AAFBAGAAAAlNGElaEiEGAAAAijE5AAJoHkALJuAAlILcmOAAAAhLAAjgpSAAAAEGAAESDSAAGphgAIAAJCAAClAAGkIEABkUISAAAAqVGYAAAADhCUBEEKAAiAAADHJ8AAAAlCCfGOi/m8EiL5AAAAHZDIkOEKAADSIqAAJPAAHuFDKdGvHElcAHh/kMBlELAAHdJgkcHYDcGTlmIcCFllAAg6CbIeEfEbjVAAkvDIAAAAC8G+HPHSCHAAAAAAmSHLAAFKEbCRCYHNAtFRFeGSgbH/GGGPI3AAAAjxAAHEK3GLAAAAkfoEEoHHG7j3K5gDAAHxAAAAKUMZAAkDEhDSAAmvm4KgAAFHAfjhDvjeAADqmOAADSAAF2G6AAHsHlidFMCSioHXMAGtAAAAGDDBKdKJBnhliRAAFGAAISAADdAAgyKzIsAAIiAAAACEAAAAgwFRJ5EGizFFGEAAAAA3IjnGLOAABrJ3hRAAJCEmAAJOEpBygKDlA7IFEXBGGaFTGfEwAAi2AAG7JIEAAAB7G8BKJAAAEXDtESlRBWEZHPJbBeGiBhlvIMgACBAFhsCIAAMKAAEZKHEHAAiSIdHwEcKcIcEkAdIaCQmIJmHYAAEoGQAAAAlSHCAADVAAAAB+GaiOBrAAAAk7lEEqG1ATAAjyIBAAAAAAC9lTCWAAAAELknBDpAGtgvAVJjE+IOERJoJMLZLELJjhAsAUKjKckMF1AAMiClBcgXMDFlCLAAAAA2GFAAAABKAADcCXjMIeI9DJioAAFlAAEGKGCgJYkDH4ONI/DzhQAAEVAAGyAAAAAAJmJ1AAHwiQAGAAAAAAkYAAGEAAIiAAFWAAC2BUJ6kAGcAAFFAAKRAAEcAAkaAAF1kdAAkCEeCKCvAAAAAAGfGuAAiJGnBvIJKzAAJGIoARhzj9l5jzAAAAIoAuCAGkItKJIlDzgnAAEUMGE2CNjYMXiFhUAAAAAAADF4EIl5AAAAl4DaAAFNCKJuE5AAHtkrAAAAFSByEVAAD+DOFeDPg2C1C9BvDtE1IMEqFUDjEACkCwAAAADeISAWIZAAhKAAACFsAAAACwAAAAAAhpipFtAAFuh0IPAAItLsAAAALzBgAAmcAAAAHCAAAAFYHAAAhvF5GSDbDaB/INAAFZEyGJD1AAjKGukeEGG4AzCbGgqTERHQkBhfDboqI9AAlwAAAACOh4mPIiKnBWAAMsEGIGKwknK1KPnOKtCQB/AAKyAAAAAAGPAAAmC2kZk+HnluH2GcAAAAJqBIAABDHUAAHRFzGaFJIGA7DIjXAAEPG2F2KVEqi4l2EREbAAIlFkDaAAAAI2AAiglUEWD6EtL1KGAAjOAAEnAAm2AAC5LJM4AvAAAAi/l+FnjSIhGIBiFqG0DYA5AAKBAAH2AABBAABzEfAACcj1AAAAAhGKAAAAAAEzkmAQEyFRGSFzLHkmCuAyI0HGGymjJ1DvDRK3Akl9AAFMCkHuAAAAACiSBunIEkAAKWiRDyE2BZAAAAEhAAAAAiEfHOAhGHAAAABsELE9AAAADDCFAAEXl2IuAAGCghGiCyAZBtEuAAiBAHHrBUGLhpEOlsjQDjCNAAmSiJk3D2AAkzKRAAjVEtAAAAjZLGEFEQAAjFAAAACBAoD7AACdAAAAAAjnKFBAgtAAJ2IrE4BZi4H/GxlpA3JEAAKeEaDlGZkbCVIigEGECWAAAAAAAAMcEMGlhJFvAAiLAACnCCEIIKJrJHi9BiEmAAD6ICEaAAgXDCAAAACDlQjUjcAAD8AAgJAAF2EnDq\\"}"},"index":5,"classesCount":false,"connectivityUp":"squareFast","normalize":false,"kernelsCount":false,"maxPooling":false,"remap":{"isEnabled":false},"isReorganize":false,"dynPelu":false},{"size":16,"sparsity":5,"activation":"elu01","connectivity":{"fromLayerSize":16,"toLayerSize":16,"toSparsity":5,"weightsFromTo":false,"fromBindings":false,"toBindings":false,"squareFast":true,"weights":{"isPot":false,"width":80,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":25600,\\"data\\":\\"\\"}"},"stride":1},"bias":{"isPot":true,"width":16,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":1024,\\"data\\":\\"hpAAAAAAAAAAAaAAEYAAiMAAAAnpAAAAKSH9KUHDHiokqQAAAAAAkvAAIAJPkXgJJ5AAH6AAAAgLG5AAAAAAJ9DgAAJdKnAAAAH5hhLoAAAAAAMSAAAAAAIXAAAAAAiPAAAAifAAh/AAAAAAAAAAmwAAJ7oAETFqKYKWkZAAgBJoi7iAMDoBCMjVEWJOJdHWKlA4HsLzKNAAiFAADAAAgiBzAAAAGhmcAAAADICFAAAAAAg6AAAAHHjkAAAAAAAADuAAAAAAIjBjAJiXhtIFF9AAAAAAAAKsAALTMdKMDunSAAAAAdhvAnAAIiKKiWmHJkAAJHm5HDDxAAhtiIkXAUAAAAF4L3EYjqgfHbOQAAAAAAJYBslLAAmcHsAAJ7AAAAFEAAAAF4E7AAIvKLiBAAImAAKgAAD1orAAAAAAFlH3IFD9EFlzi7AAAAkLilkjizAAEDmnjqEEABAAjbG6lIAAAAF4JNFZAACJAAHYAACyAAAADfAAHIJEAAJDAAAAAAHDD+AAKnAAB7AAH8gfjAg/AXIZC/EKkIB7hQGimoKCIsG2jfAAgLKCKfLNHvDxAfiaCtIfAAHPFKEcAAqfkNFQoTJwAAAAC8J1FACgAAAAAALkkQAAkpAAAAD3D+AAAAE7AAAAAAGEAAAAAlFkAOEIiYIFDzICAAEZMEHdkZAPAAAAEVIxBzAAkSAAm4mKm9AAGTmFg/lfFkicC5AAJQKtI2iDhMIVgtAAGQCNAAhiFCEIAAAAFwGXDwAAAAAAETEPI5AAMQIfAAAAiwITKRiMkGEjIACgAAOHHqAbHKDFAAFShFJbD2q6AAKfqyK1InJiCuKuAAonLmoPAQoXOWEoG/I3L/KdCXARlFKMENghMMEMlXK3AKKPAAF3B/gbKLLDI3i8AAAAiXCmJ1KnHKjOAAGfAAJIDUmRAAJaKgHKAAFUoKLXAAJBA0kkgUjDGahgAAKkEWqsmwKghVJohvpyJTKhAAElKMGYifoTBoAAgiAAAAmNAAHSkTK2AAAAqyAAG6AAAApSIYAAkPI6lLKDAAJbgPGTmvHgHME8lZKMElI/AAAAAAFDKXqrImHCGBELHdGnBUIgrdKCJeFip3HqGRAAoEF2GXitEgAAF6LQh/AGAJAAAAHWAAAAAAAAFKg7AAAArxH2K/AAAAMlixg7H6kchkAMHqJuAAMKCdlSjBFuGpJIriiVAApZk+BBGlgdG/DAAAAAoaKqAAKZAAAAFPhnAAAAGDAAAAGHIUAkAAAACLFxIKAAAAhPAAAAKOAAKhAABvKoGmAALRAAlVI9n7AAkIIdk+AAG5E4LwAAGEHMqVnNmWmOA0AAFSH4mfEgmOFBK2GUAmAAjFlbF5K8j8EGAAAAHOAAAAjNFhAAAAAABFAAAAAAAAAAAAAAAAAAAAgtizjWAAESjQAAAAMQCHAAlqiWJ9AAAAlzH9LPAAMnGcHMKYKMFXnDMbAAIcmNFXi9M9FKL+CwEgqsp2GKo8FQkbHCAAAAAAAAmaAAAAAAAAAAAAAAEzAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoB+AAAAFUAAHQAAAAAAELhQAANnhGhDBWEjJ0KLAAE0KnLZI5ooAAiWAApFJ8jMFeoFAAAAAAMCF8AAAAqED7AAGzAAAAAAAAAAAAAAAAAAAAAAAAAAlZAAkAAAAAAAkNjdJDh0GEAAAAhDgFAAAAhuKEC6INiRFYjQLBjBAAHBERL6BfjwJ3GnguAAhtlPAAK+AAAAGvHSgFAACEMcidAAJLDVAAAAAAHZAAAAAAAAAAjUAAAAAAAAAAAAAAECAAiJi8AAAAAAAAieAAAAAAlSAAAALajjAAAAJfhsAkAAk3oYAAiYKfAAAAi1AAB8FAmvAzG8IZDmAAAAAAJ8JwAAG0BVAAAAAADTmggcAAAAAAAAAAAAAAk7AAJ6AAAAAAAAAAMJAAAAAAnhEDAAG2AAlwlYK6J4IJBbAANpAAADB6DtgbCWDCASAAEhAAgbAAAAAAKQAAAAAAAABSlSByAACuAAAAAAkCAAAAmWjV\\"}"},"index":6,"classesCount":false,"connectivityUp":"squareFast","normalize":false,"kernelsCount":false,"maxPooling":false,"remap":{"isEnabled":false},"isReorganize":false,"dynPelu":false},{"size":8,"sparsity":16,"activation":"copy","connectivity":{"fromLayerSize":16,"toLayerSize":8,"toSparsity":16,"weightsFromTo":false,"fromBindings":false,"toBindings":false,"square":false,"weights":{"isPot":true,"width":128,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":65536,\\"data\\"}"}},"bias":{"isPot":true,"width":8,"isFloat":true,"data":"{\\"ne\\":4,\\"nf\\":7,\\"n\\":256,\\"data\\":\\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkoq/CHMMKhLgOGNLMfMfEtL2kVKPIhEJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHL7MILWlEK+C3DbMRKzMYD0DdIPGFASBTFgAAH6HnDiILG6GQGXFvK+LfGwD1CeAAiGAwHFIvm+DaqtHEF8mGNptfNjNaNSNftjtatSLgMAKsMJIbKcKoKwIbIgMzL1\\"}"},"index":7,"classesCount":false,"connectivityUp":"full","normalize":false,"kernelsCount":false,"maxPooling":false,"remap":{"isEnabled":false},"isReorganize":false,"dynPelu":false}],"exportData":{}}')},function(A,i,e){var t=e(77);A.exports=D,A.exports.parse=n,A.exports.compile=function(A,i){return r(n(A,i),i)},A.exports.tokensToFunction=r,A.exports.tokensToRegExp=g;var C=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function n(A,i){for(var e,t=[],n=0,h=0,r="",o=i&&i.delimiter||"/";null!=(e=C.exec(A));){var k=e[0],g=e[1],D=e.index;if(r+=A.slice(h,D),h=D+k.length,g)r+=g[1];else{var a=A[h],s=e[2],B=e[3],j=e[4],m=e[5],c=e[6],u=e[7];r&&(t.push(r),r="");var F=null!=s&&null!=a&&a!==s,G="+"===c||"*"===c,d="?"===c||"*"===c,f=e[2]||o,p=j||m;t.push({name:B||n++,prefix:s||"",delimiter:f,optional:d,repeat:G,partial:F,asterisk:!!u,pattern:p?l(p):u?".*":"[^"+E(f)+"]+?"})}}return h<A.length&&(r+=A.substr(h)),r&&t.push(r),t}function h(A){return encodeURI(A).replace(/[\/?#]/g,(function(A){return"%"+A.charCodeAt(0).toString(16).toUpperCase()}))}function r(A,i){for(var e=new Array(A.length),C=0;C<A.length;C++)"object"==typeof A[C]&&(e[C]=new RegExp("^(?:"+A[C].pattern+")$",k(i)));return function(i,C){for(var n="",r=i||{},E=(C||{}).pretty?h:encodeURIComponent,l=0;l<A.length;l++){var o=A[l];if("string"!=typeof o){var k,g=r[o.name];if(null==g){if(o.optional){o.partial&&(n+=o.prefix);continue}throw new TypeError('Expected "'+o.name+'" to be defined')}if(t(g)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received `'+JSON.stringify(g)+"`");if(0===g.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var D=0;D<g.length;D++){if(k=E(g[D]),!e[l].test(k))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received `'+JSON.stringify(k)+"`");n+=(0===D?o.prefix:o.delimiter)+k}}else{if(k=o.asterisk?encodeURI(g).replace(/[?#]/g,(function(A){return"%"+A.charCodeAt(0).toString(16).toUpperCase()})):E(g),!e[l].test(k))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+k+'"');n+=o.prefix+k}}else n+=o}return n}}function E(A){return A.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function l(A){return A.replace(/([=!:$\/()])/g,"\\$1")}function o(A,i){return A.keys=i,A}function k(A){return A&&A.sensitive?"":"i"}function g(A,i,e){t(i)||(e=i||e,i=[]);for(var C=(e=e||{}).strict,n=!1!==e.end,h="",r=0;r<A.length;r++){var l=A[r];if("string"==typeof l)h+=E(l);else{var g=E(l.prefix),D="(?:"+l.pattern+")";i.push(l),l.repeat&&(D+="(?:"+g+D+")*"),h+=D=l.optional?l.partial?g+"("+D+")?":"(?:"+g+"("+D+"))?":g+"("+D+")"}}var a=E(e.delimiter||"/"),s=h.slice(-a.length)===a;return C||(h=(s?h.slice(0,-a.length):h)+"(?:"+a+"(?=$))?"),h+=n?"$":C&&s?"":"(?="+a+"|$)",o(new RegExp("^"+h,k(e)),i)}function D(A,i,e){return t(i)||(e=i||e,i=[]),e=e||{},A instanceof RegExp?function(A,i){var e=A.source.match(/\((?!\?)/g);if(e)for(var t=0;t<e.length;t++)i.push({name:t,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return o(A,i)}(A,i):t(A)?function(A,i,e){for(var t=[],C=0;C<A.length;C++)t.push(D(A[C],i,e).source);return o(new RegExp("(?:"+t.join("|")+")",k(e)),i)}(A,i,e):function(A,i,e){return g(n(A,e),i,e)}(A,i,e)}},function(A,i,e){"use strict";
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t=e(19),C="function"==typeof Symbol&&Symbol.for,n=C?Symbol.for("react.element"):60103,h=C?Symbol.for("react.portal"):60106,r=C?Symbol.for("react.fragment"):60107,E=C?Symbol.for("react.strict_mode"):60108,l=C?Symbol.for("react.profiler"):60114,o=C?Symbol.for("react.provider"):60109,k=C?Symbol.for("react.context"):60110,g=C?Symbol.for("react.forward_ref"):60112,D=C?Symbol.for("react.suspense"):60113,a=C?Symbol.for("react.memo"):60115,s=C?Symbol.for("react.lazy"):60116,B="function"==typeof Symbol&&Symbol.iterator;function j(A){for(var i="https://reactjs.org/docs/error-decoder.html?invariant="+A,e=1;e<arguments.length;e++)i+="&args[]="+encodeURIComponent(arguments[e]);return"Minified React error #"+A+"; visit "+i+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},c={};function u(A,i,e){this.props=A,this.context=i,this.refs=c,this.updater=e||m}function F(){}function G(A,i,e){this.props=A,this.context=i,this.refs=c,this.updater=e||m}u.prototype.isReactComponent={},u.prototype.setState=function(A,i){if("object"!=typeof A&&"function"!=typeof A&&null!=A)throw Error(j(85));this.updater.enqueueSetState(this,A,i,"setState")},u.prototype.forceUpdate=function(A){this.updater.enqueueForceUpdate(this,A,"forceUpdate")},F.prototype=u.prototype;var d=G.prototype=new F;d.constructor=G,t(d,u.prototype),d.isPureReactComponent=!0;var f={current:null},p=Object.prototype.hasOwnProperty,v={key:!0,ref:!0,__self:!0,__source:!0};function H(A,i,e){var t,C={},h=null,r=null;if(null!=i)for(t in void 0!==i.ref&&(r=i.ref),void 0!==i.key&&(h=""+i.key),i)p.call(i,t)&&!v.hasOwnProperty(t)&&(C[t]=i[t]);var E=arguments.length-2;if(1===E)C.children=e;else if(1<E){for(var l=Array(E),o=0;o<E;o++)l[o]=arguments[o+2];C.children=l}if(A&&A.defaultProps)for(t in E=A.defaultProps)void 0===C[t]&&(C[t]=E[t]);return{$$typeof:n,type:A,key:h,ref:r,props:C,_owner:f.current}}function I(A){return"object"==typeof A&&null!==A&&A.$$typeof===n}var y=/\/+/g,b=[];function M(A,i,e,t){if(b.length){var C=b.pop();return C.result=A,C.keyPrefix=i,C.func=e,C.context=t,C.count=0,C}return{result:A,keyPrefix:i,func:e,context:t,count:0}}function x(A){A.result=null,A.keyPrefix=null,A.func=null,A.context=null,A.count=0,10>b.length&&b.push(A)}function w(A,i,e){return null==A?0:function A(i,e,t,C){var r=typeof i;"undefined"!==r&&"boolean"!==r||(i=null);var E=!1;if(null===i)E=!0;else switch(r){case"string":case"number":E=!0;break;case"object":switch(i.$$typeof){case n:case h:E=!0}}if(E)return t(C,i,""===e?"."+S(i,0):e),1;if(E=0,e=""===e?".":e+":",Array.isArray(i))for(var l=0;l<i.length;l++){var o=e+S(r=i[l],l);E+=A(r,o,t,C)}else if(null===i||"object"!=typeof i?o=null:o="function"==typeof(o=B&&i[B]||i["@@iterator"])?o:null,"function"==typeof o)for(i=o.call(i),l=0;!(r=i.next()).done;)E+=A(r=r.value,o=e+S(r,l++),t,C);else if("object"===r)throw t=""+i,Error(j(31,"[object Object]"===t?"object with keys {"+Object.keys(i).join(", ")+"}":t,""));return E}(A,"",i,e)}function S(A,i){return"object"==typeof A&&null!==A&&null!=A.key?function(A){var i={"=":"=0",":":"=2"};return"$"+(""+A).replace(/[=:]/g,(function(A){return i[A]}))}(A.key):i.toString(36)}function T(A,i){A.func.call(A.context,i,A.count++)}function L(A,i,e){var t=A.result,C=A.keyPrefix;A=A.func.call(A.context,i,A.count++),Array.isArray(A)?R(A,t,e,(function(A){return A})):null!=A&&(I(A)&&(A=function(A,i){return{$$typeof:n,type:A.type,key:i,ref:A.ref,props:A.props,_owner:A._owner}}(A,C+(!A.key||i&&i.key===A.key?"":(""+A.key).replace(y,"$&/")+"/")+e)),t.push(A))}function R(A,i,e,t,C){var n="";null!=e&&(n=(""+e).replace(y,"$&/")+"/"),w(A,L,i=M(i,n,t,C)),x(i)}var P={current:null};function O(){var A=P.current;if(null===A)throw Error(j(321));return A}var N={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:f,IsSomeRendererActing:{current:!1},assign:t};i.Children={map:function(A,i,e){if(null==A)return A;var t=[];return R(A,t,null,i,e),t},forEach:function(A,i,e){if(null==A)return A;w(A,T,i=M(null,null,i,e)),x(i)},count:function(A){return w(A,(function(){return null}),null)},toArray:function(A){var i=[];return R(A,i,null,(function(A){return A})),i},only:function(A){if(!I(A))throw Error(j(143));return A}},i.Component=u,i.Fragment=r,i.Profiler=l,i.PureComponent=G,i.StrictMode=E,i.Suspense=D,i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,i.cloneElement=function(A,i,e){if(null==A)throw Error(j(267,A));var C=t({},A.props),h=A.key,r=A.ref,E=A._owner;if(null!=i){if(void 0!==i.ref&&(r=i.ref,E=f.current),void 0!==i.key&&(h=""+i.key),A.type&&A.type.defaultProps)var l=A.type.defaultProps;for(o in i)p.call(i,o)&&!v.hasOwnProperty(o)&&(C[o]=void 0===i[o]&&void 0!==l?l[o]:i[o])}var o=arguments.length-2;if(1===o)C.children=e;else if(1<o){l=Array(o);for(var k=0;k<o;k++)l[k]=arguments[k+2];C.children=l}return{$$typeof:n,type:A.type,key:h,ref:r,props:C,_owner:E}},i.createContext=function(A,i){return void 0===i&&(i=null),(A={$$typeof:k,_calculateChangedBits:i,_currentValue:A,_currentValue2:A,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:A},A.Consumer=A},i.createElement=H,i.createFactory=function(A){var i=H.bind(null,A);return i.type=A,i},i.createRef=function(){return{current:null}},i.forwardRef=function(A){return{$$typeof:g,render:A}},i.isValidElement=I,i.lazy=function(A){return{$$typeof:s,_ctor:A,_status:-1,_result:null}},i.memo=function(A,i){return{$$typeof:a,type:A,compare:void 0===i?null:i}},i.useCallback=function(A,i){return O().useCallback(A,i)},i.useContext=function(A,i){return O().useContext(A,i)},i.useDebugValue=function(){},i.useEffect=function(A,i){return O().useEffect(A,i)},i.useImperativeHandle=function(A,i,e){return O().useImperativeHandle(A,i,e)},i.useLayoutEffect=function(A,i){return O().useLayoutEffect(A,i)},i.useMemo=function(A,i){return O().useMemo(A,i)},i.useReducer=function(A,i,e){return O().useReducer(A,i,e)},i.useRef=function(A){return O().useRef(A)},i.useState=function(A){return O().useState(A)},i.version="16.14.0"},function(A,i,e){"use strict";
/** @license React v17.0.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t=e(0),C=e(19),n=e(43);function h(A){for(var i="https://reactjs.org/docs/error-decoder.html?invariant="+A,e=1;e<arguments.length;e++)i+="&args[]="+encodeURIComponent(arguments[e]);return"Minified React error #"+A+"; visit "+i+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!t)throw Error(h(227));var r=new Set,E={};function l(A,i){o(A,i),o(A+"Capture",i)}function o(A,i){for(E[A]=i,A=0;A<i.length;A++)r.add(i[A])}var k=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),g=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,D=Object.prototype.hasOwnProperty,a={},s={};function B(A,i,e,t,C,n,h){this.acceptsBooleans=2===i||3===i||4===i,this.attributeName=t,this.attributeNamespace=C,this.mustUseProperty=e,this.propertyName=A,this.type=i,this.sanitizeURL=n,this.removeEmptyString=h}var j={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(A){j[A]=new B(A,0,!1,A,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(A){var i=A[0];j[i]=new B(i,1,!1,A[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(A){j[A]=new B(A,2,!1,A.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(A){j[A]=new B(A,2,!1,A,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(A){j[A]=new B(A,3,!1,A.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(A){j[A]=new B(A,3,!0,A,null,!1,!1)})),["capture","download"].forEach((function(A){j[A]=new B(A,4,!1,A,null,!1,!1)})),["cols","rows","size","span"].forEach((function(A){j[A]=new B(A,6,!1,A,null,!1,!1)})),["rowSpan","start"].forEach((function(A){j[A]=new B(A,5,!1,A.toLowerCase(),null,!1,!1)}));var m=/[\-:]([a-z])/g;function c(A){return A[1].toUpperCase()}function u(A,i,e,t){var C=j.hasOwnProperty(i)?j[i]:null;(null!==C?0===C.type:!t&&(2<i.length&&("o"===i[0]||"O"===i[0])&&("n"===i[1]||"N"===i[1])))||(function(A,i,e,t){if(null==i||function(A,i,e,t){if(null!==e&&0===e.type)return!1;switch(typeof i){case"function":case"symbol":return!0;case"boolean":return!t&&(null!==e?!e.acceptsBooleans:"data-"!==(A=A.toLowerCase().slice(0,5))&&"aria-"!==A);default:return!1}}(A,i,e,t))return!0;if(t)return!1;if(null!==e)switch(e.type){case 3:return!i;case 4:return!1===i;case 5:return isNaN(i);case 6:return isNaN(i)||1>i}return!1}(i,e,C,t)&&(e=null),t||null===C?function(A){return!!D.call(s,A)||!D.call(a,A)&&(g.test(A)?s[A]=!0:(a[A]=!0,!1))}(i)&&(null===e?A.removeAttribute(i):A.setAttribute(i,""+e)):C.mustUseProperty?A[C.propertyName]=null===e?3!==C.type&&"":e:(i=C.attributeName,t=C.attributeNamespace,null===e?A.removeAttribute(i):(e=3===(C=C.type)||4===C&&!0===e?"":""+e,t?A.setAttributeNS(t,i,e):A.setAttribute(i,e))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(A){var i=A.replace(m,c);j[i]=new B(i,1,!1,A,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(A){var i=A.replace(m,c);j[i]=new B(i,1,!1,A,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(A){var i=A.replace(m,c);j[i]=new B(i,1,!1,A,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(A){j[A]=new B(A,1,!1,A.toLowerCase(),null,!1,!1)})),j.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(A){j[A]=new B(A,1,!1,A.toLowerCase(),null,!0,!0)}));var F=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,G=60103,d=60106,f=60107,p=60108,v=60114,H=60109,I=60110,y=60112,b=60113,M=60120,x=60115,w=60116,S=60121,T=60128,L=60129,R=60130,P=60131;if("function"==typeof Symbol&&Symbol.for){var O=Symbol.for;G=O("react.element"),d=O("react.portal"),f=O("react.fragment"),p=O("react.strict_mode"),v=O("react.profiler"),H=O("react.provider"),I=O("react.context"),y=O("react.forward_ref"),b=O("react.suspense"),M=O("react.suspense_list"),x=O("react.memo"),w=O("react.lazy"),S=O("react.block"),O("react.scope"),T=O("react.opaque.id"),L=O("react.debug_trace_mode"),R=O("react.offscreen"),P=O("react.legacy_hidden")}var N,J="function"==typeof Symbol&&Symbol.iterator;function K(A){return null===A||"object"!=typeof A?null:"function"==typeof(A=J&&A[J]||A["@@iterator"])?A:null}function U(A){if(void 0===N)try{throw Error()}catch(A){var i=A.stack.trim().match(/\n( *(at )?)/);N=i&&i[1]||""}return"\n"+N+A}var V=!1;function W(A,i){if(!A||V)return"";V=!0;var e=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(i)if(i=function(){throw Error()},Object.defineProperty(i.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(i,[])}catch(A){var t=A}Reflect.construct(A,[],i)}else{try{i.call()}catch(A){t=A}A.call(i.prototype)}else{try{throw Error()}catch(A){t=A}A()}}catch(A){if(A&&t&&"string"==typeof A.stack){for(var C=A.stack.split("\n"),n=t.stack.split("\n"),h=C.length-1,r=n.length-1;1<=h&&0<=r&&C[h]!==n[r];)r--;for(;1<=h&&0<=r;h--,r--)if(C[h]!==n[r]){if(1!==h||1!==r)do{if(h--,0>--r||C[h]!==n[r])return"\n"+C[h].replace(" at new "," at ")}while(1<=h&&0<=r);break}}}finally{V=!1,Error.prepareStackTrace=e}return(A=A?A.displayName||A.name:"")?U(A):""}function z(A){switch(A.tag){case 5:return U(A.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return A=W(A.type,!1);case 11:return A=W(A.type.render,!1);case 22:return A=W(A.type._render,!1);case 1:return A=W(A.type,!0);default:return""}}function q(A){if(null==A)return null;if("function"==typeof A)return A.displayName||A.name||null;if("string"==typeof A)return A;switch(A){case f:return"Fragment";case d:return"Portal";case v:return"Profiler";case p:return"StrictMode";case b:return"Suspense";case M:return"SuspenseList"}if("object"==typeof A)switch(A.$$typeof){case I:return(A.displayName||"Context")+".Consumer";case H:return(A._context.displayName||"Context")+".Provider";case y:var i=A.render;return i=i.displayName||i.name||"",A.displayName||(""!==i?"ForwardRef("+i+")":"ForwardRef");case x:return q(A.type);case S:return q(A._render);case w:i=A._payload,A=A._init;try{return q(A(i))}catch(A){}}return null}function Q(A){switch(typeof A){case"boolean":case"number":case"object":case"string":case"undefined":return A;default:return""}}function Y(A){var i=A.type;return(A=A.nodeName)&&"input"===A.toLowerCase()&&("checkbox"===i||"radio"===i)}function X(A){A._valueTracker||(A._valueTracker=function(A){var i=Y(A)?"checked":"value",e=Object.getOwnPropertyDescriptor(A.constructor.prototype,i),t=""+A[i];if(!A.hasOwnProperty(i)&&void 0!==e&&"function"==typeof e.get&&"function"==typeof e.set){var C=e.get,n=e.set;return Object.defineProperty(A,i,{configurable:!0,get:function(){return C.call(this)},set:function(A){t=""+A,n.call(this,A)}}),Object.defineProperty(A,i,{enumerable:e.enumerable}),{getValue:function(){return t},setValue:function(A){t=""+A},stopTracking:function(){A._valueTracker=null,delete A[i]}}}}(A))}function Z(A){if(!A)return!1;var i=A._valueTracker;if(!i)return!0;var e=i.getValue(),t="";return A&&(t=Y(A)?A.checked?"true":"false":A.value),(A=t)!==e&&(i.setValue(A),!0)}function _(A){if(void 0===(A=A||("undefined"!=typeof document?document:void 0)))return null;try{return A.activeElement||A.body}catch(i){return A.body}}function $(A,i){var e=i.checked;return C({},i,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=e?e:A._wrapperState.initialChecked})}function AA(A,i){var e=null==i.defaultValue?"":i.defaultValue,t=null!=i.checked?i.checked:i.defaultChecked;e=Q(null!=i.value?i.value:e),A._wrapperState={initialChecked:t,initialValue:e,controlled:"checkbox"===i.type||"radio"===i.type?null!=i.checked:null!=i.value}}function iA(A,i){null!=(i=i.checked)&&u(A,"checked",i,!1)}function eA(A,i){iA(A,i);var e=Q(i.value),t=i.type;if(null!=e)"number"===t?(0===e&&""===A.value||A.value!=e)&&(A.value=""+e):A.value!==""+e&&(A.value=""+e);else if("submit"===t||"reset"===t)return void A.removeAttribute("value");i.hasOwnProperty("value")?CA(A,i.type,e):i.hasOwnProperty("defaultValue")&&CA(A,i.type,Q(i.defaultValue)),null==i.checked&&null!=i.defaultChecked&&(A.defaultChecked=!!i.defaultChecked)}function tA(A,i,e){if(i.hasOwnProperty("value")||i.hasOwnProperty("defaultValue")){var t=i.type;if(!("submit"!==t&&"reset"!==t||void 0!==i.value&&null!==i.value))return;i=""+A._wrapperState.initialValue,e||i===A.value||(A.value=i),A.defaultValue=i}""!==(e=A.name)&&(A.name=""),A.defaultChecked=!!A._wrapperState.initialChecked,""!==e&&(A.name=e)}function CA(A,i,e){"number"===i&&_(A.ownerDocument)===A||(null==e?A.defaultValue=""+A._wrapperState.initialValue:A.defaultValue!==""+e&&(A.defaultValue=""+e))}function nA(A,i){return A=C({children:void 0},i),(i=function(A){var i="";return t.Children.forEach(A,(function(A){null!=A&&(i+=A)})),i}(i.children))&&(A.children=i),A}function hA(A,i,e,t){if(A=A.options,i){i={};for(var C=0;C<e.length;C++)i["$"+e[C]]=!0;for(e=0;e<A.length;e++)C=i.hasOwnProperty("$"+A[e].value),A[e].selected!==C&&(A[e].selected=C),C&&t&&(A[e].defaultSelected=!0)}else{for(e=""+Q(e),i=null,C=0;C<A.length;C++){if(A[C].value===e)return A[C].selected=!0,void(t&&(A[C].defaultSelected=!0));null!==i||A[C].disabled||(i=A[C])}null!==i&&(i.selected=!0)}}function rA(A,i){if(null!=i.dangerouslySetInnerHTML)throw Error(h(91));return C({},i,{value:void 0,defaultValue:void 0,children:""+A._wrapperState.initialValue})}function EA(A,i){var e=i.value;if(null==e){if(e=i.children,i=i.defaultValue,null!=e){if(null!=i)throw Error(h(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(h(93));e=e[0]}i=e}null==i&&(i=""),e=i}A._wrapperState={initialValue:Q(e)}}function lA(A,i){var e=Q(i.value),t=Q(i.defaultValue);null!=e&&((e=""+e)!==A.value&&(A.value=e),null==i.defaultValue&&A.defaultValue!==e&&(A.defaultValue=e)),null!=t&&(A.defaultValue=""+t)}function oA(A){var i=A.textContent;i===A._wrapperState.initialValue&&""!==i&&null!==i&&(A.value=i)}var kA="http://www.w3.org/1999/xhtml",gA="http://www.w3.org/2000/svg";function DA(A){switch(A){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function aA(A,i){return null==A||"http://www.w3.org/1999/xhtml"===A?DA(i):"http://www.w3.org/2000/svg"===A&&"foreignObject"===i?"http://www.w3.org/1999/xhtml":A}var sA,BA=function(A){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(i,e,t,C){MSApp.execUnsafeLocalFunction((function(){return A(i,e)}))}:A}((function(A,i){if(A.namespaceURI!==gA||"innerHTML"in A)A.innerHTML=i;else{for((sA=sA||document.createElement("div")).innerHTML="<svg>"+i.valueOf().toString()+"</svg>",i=sA.firstChild;A.firstChild;)A.removeChild(A.firstChild);for(;i.firstChild;)A.appendChild(i.firstChild)}}));function jA(A,i){if(i){var e=A.firstChild;if(e&&e===A.lastChild&&3===e.nodeType)return void(e.nodeValue=i)}A.textContent=i}var mA={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},cA=["Webkit","ms","Moz","O"];function uA(A,i,e){return null==i||"boolean"==typeof i||""===i?"":e||"number"!=typeof i||0===i||mA.hasOwnProperty(A)&&mA[A]?(""+i).trim():i+"px"}function FA(A,i){for(var e in A=A.style,i)if(i.hasOwnProperty(e)){var t=0===e.indexOf("--"),C=uA(e,i[e],t);"float"===e&&(e="cssFloat"),t?A.setProperty(e,C):A[e]=C}}Object.keys(mA).forEach((function(A){cA.forEach((function(i){i=i+A.charAt(0).toUpperCase()+A.substring(1),mA[i]=mA[A]}))}));var GA=C({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function dA(A,i){if(i){if(GA[A]&&(null!=i.children||null!=i.dangerouslySetInnerHTML))throw Error(h(137,A));if(null!=i.dangerouslySetInnerHTML){if(null!=i.children)throw Error(h(60));if("object"!=typeof i.dangerouslySetInnerHTML||!("__html"in i.dangerouslySetInnerHTML))throw Error(h(61))}if(null!=i.style&&"object"!=typeof i.style)throw Error(h(62))}}function fA(A,i){if(-1===A.indexOf("-"))return"string"==typeof i.is;switch(A){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pA(A){return(A=A.target||A.srcElement||window).correspondingUseElement&&(A=A.correspondingUseElement),3===A.nodeType?A.parentNode:A}var vA=null,HA=null,IA=null;function yA(A){if(A=Zt(A)){if("function"!=typeof vA)throw Error(h(280));var i=A.stateNode;i&&(i=$t(i),vA(A.stateNode,A.type,i))}}function bA(A){HA?IA?IA.push(A):IA=[A]:HA=A}function MA(){if(HA){var A=HA,i=IA;if(IA=HA=null,yA(A),i)for(A=0;A<i.length;A++)yA(i[A])}}function xA(A,i){return A(i)}function wA(A,i,e,t,C){return A(i,e,t,C)}function SA(){}var TA=xA,LA=!1,RA=!1;function PA(){null===HA&&null===IA||(SA(),MA())}function OA(A,i){var e=A.stateNode;if(null===e)return null;var t=$t(e);if(null===t)return null;e=t[i];A:switch(i){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(t=!t.disabled)||(t=!("button"===(A=A.type)||"input"===A||"select"===A||"textarea"===A)),A=!t;break A;default:A=!1}if(A)return null;if(e&&"function"!=typeof e)throw Error(h(231,i,typeof e));return e}var NA=!1;if(k)try{var JA={};Object.defineProperty(JA,"passive",{get:function(){NA=!0}}),window.addEventListener("test",JA,JA),window.removeEventListener("test",JA,JA)}catch(A){NA=!1}function KA(A,i,e,t,C,n,h,r,E){var l=Array.prototype.slice.call(arguments,3);try{i.apply(e,l)}catch(A){this.onError(A)}}var UA=!1,VA=null,WA=!1,zA=null,qA={onError:function(A){UA=!0,VA=A}};function QA(A,i,e,t,C,n,h,r,E){UA=!1,VA=null,KA.apply(qA,arguments)}function YA(A){var i=A,e=A;if(A.alternate)for(;i.return;)i=i.return;else{A=i;do{0!=(1026&(i=A).flags)&&(e=i.return),A=i.return}while(A)}return 3===i.tag?e:null}function XA(A){if(13===A.tag){var i=A.memoizedState;if(null===i&&(null!==(A=A.alternate)&&(i=A.memoizedState)),null!==i)return i.dehydrated}return null}function ZA(A){if(YA(A)!==A)throw Error(h(188))}function _A(A){if(!(A=function(A){var i=A.alternate;if(!i){if(null===(i=YA(A)))throw Error(h(188));return i!==A?null:A}for(var e=A,t=i;;){var C=e.return;if(null===C)break;var n=C.alternate;if(null===n){if(null!==(t=C.return)){e=t;continue}break}if(C.child===n.child){for(n=C.child;n;){if(n===e)return ZA(C),A;if(n===t)return ZA(C),i;n=n.sibling}throw Error(h(188))}if(e.return!==t.return)e=C,t=n;else{for(var r=!1,E=C.child;E;){if(E===e){r=!0,e=C,t=n;break}if(E===t){r=!0,t=C,e=n;break}E=E.sibling}if(!r){for(E=n.child;E;){if(E===e){r=!0,e=n,t=C;break}if(E===t){r=!0,t=n,e=C;break}E=E.sibling}if(!r)throw Error(h(189))}}if(e.alternate!==t)throw Error(h(190))}if(3!==e.tag)throw Error(h(188));return e.stateNode.current===e?A:i}(A)))return null;for(var i=A;;){if(5===i.tag||6===i.tag)return i;if(i.child)i.child.return=i,i=i.child;else{if(i===A)break;for(;!i.sibling;){if(!i.return||i.return===A)return null;i=i.return}i.sibling.return=i.return,i=i.sibling}}return null}function $A(A,i){for(var e=A.alternate;null!==i;){if(i===A||i===e)return!0;i=i.return}return!1}var Ai,ii,ei,ti,Ci=!1,ni=[],hi=null,ri=null,Ei=null,li=new Map,oi=new Map,ki=[],gi="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Di(A,i,e,t,C){return{blockedOn:A,domEventName:i,eventSystemFlags:16|e,nativeEvent:C,targetContainers:[t]}}function ai(A,i){switch(A){case"focusin":case"focusout":hi=null;break;case"dragenter":case"dragleave":ri=null;break;case"mouseover":case"mouseout":Ei=null;break;case"pointerover":case"pointerout":li.delete(i.pointerId);break;case"gotpointercapture":case"lostpointercapture":oi.delete(i.pointerId)}}function si(A,i,e,t,C,n){return null===A||A.nativeEvent!==n?(A=Di(i,e,t,C,n),null!==i&&(null!==(i=Zt(i))&&ii(i)),A):(A.eventSystemFlags|=t,i=A.targetContainers,null!==C&&-1===i.indexOf(C)&&i.push(C),A)}function Bi(A){var i=Xt(A.target);if(null!==i){var e=YA(i);if(null!==e)if(13===(i=e.tag)){if(null!==(i=XA(e)))return A.blockedOn=i,void ti(A.lanePriority,(function(){n.unstable_runWithPriority(A.priority,(function(){ei(e)}))}))}else if(3===i&&e.stateNode.hydrate)return void(A.blockedOn=3===e.tag?e.stateNode.containerInfo:null)}A.blockedOn=null}function ji(A){if(null!==A.blockedOn)return!1;for(var i=A.targetContainers;0<i.length;){var e=_i(A.domEventName,A.eventSystemFlags,i[0],A.nativeEvent);if(null!==e)return null!==(i=Zt(e))&&ii(i),A.blockedOn=e,!1;i.shift()}return!0}function mi(A,i,e){ji(A)&&e.delete(i)}function ci(){for(Ci=!1;0<ni.length;){var A=ni[0];if(null!==A.blockedOn){null!==(A=Zt(A.blockedOn))&&Ai(A);break}for(var i=A.targetContainers;0<i.length;){var e=_i(A.domEventName,A.eventSystemFlags,i[0],A.nativeEvent);if(null!==e){A.blockedOn=e;break}i.shift()}null===A.blockedOn&&ni.shift()}null!==hi&&ji(hi)&&(hi=null),null!==ri&&ji(ri)&&(ri=null),null!==Ei&&ji(Ei)&&(Ei=null),li.forEach(mi),oi.forEach(mi)}function ui(A,i){A.blockedOn===i&&(A.blockedOn=null,Ci||(Ci=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,ci)))}function Fi(A){function i(i){return ui(i,A)}if(0<ni.length){ui(ni[0],A);for(var e=1;e<ni.length;e++){var t=ni[e];t.blockedOn===A&&(t.blockedOn=null)}}for(null!==hi&&ui(hi,A),null!==ri&&ui(ri,A),null!==Ei&&ui(Ei,A),li.forEach(i),oi.forEach(i),e=0;e<ki.length;e++)(t=ki[e]).blockedOn===A&&(t.blockedOn=null);for(;0<ki.length&&null===(e=ki[0]).blockedOn;)Bi(e),null===e.blockedOn&&ki.shift()}function Gi(A,i){var e={};return e[A.toLowerCase()]=i.toLowerCase(),e["Webkit"+A]="webkit"+i,e["Moz"+A]="moz"+i,e}var di={animationend:Gi("Animation","AnimationEnd"),animationiteration:Gi("Animation","AnimationIteration"),animationstart:Gi("Animation","AnimationStart"),transitionend:Gi("Transition","TransitionEnd")},fi={},pi={};function vi(A){if(fi[A])return fi[A];if(!di[A])return A;var i,e=di[A];for(i in e)if(e.hasOwnProperty(i)&&i in pi)return fi[A]=e[i];return A}k&&(pi=document.createElement("div").style,"AnimationEvent"in window||(delete di.animationend.animation,delete di.animationiteration.animation,delete di.animationstart.animation),"TransitionEvent"in window||delete di.transitionend.transition);var Hi=vi("animationend"),Ii=vi("animationiteration"),yi=vi("animationstart"),bi=vi("transitionend"),Mi=new Map,xi=new Map,wi=["abort","abort",Hi,"animationEnd",Ii,"animationIteration",yi,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",bi,"transitionEnd","waiting","waiting"];function Si(A,i){for(var e=0;e<A.length;e+=2){var t=A[e],C=A[e+1];C="on"+(C[0].toUpperCase()+C.slice(1)),xi.set(t,i),Mi.set(t,C),l(C,[t])}}(0,n.unstable_now)();var Ti=8;function Li(A){if(0!=(1&A))return Ti=15,1;if(0!=(2&A))return Ti=14,2;if(0!=(4&A))return Ti=13,4;var i=24&A;return 0!==i?(Ti=12,i):0!=(32&A)?(Ti=11,32):0!==(i=192&A)?(Ti=10,i):0!=(256&A)?(Ti=9,256):0!==(i=3584&A)?(Ti=8,i):0!=(4096&A)?(Ti=7,4096):0!==(i=4186112&A)?(Ti=6,i):0!==(i=62914560&A)?(Ti=5,i):67108864&A?(Ti=4,67108864):0!=(134217728&A)?(Ti=3,134217728):0!==(i=805306368&A)?(Ti=2,i):0!=(1073741824&A)?(Ti=1,1073741824):(Ti=8,A)}function Ri(A,i){var e=A.pendingLanes;if(0===e)return Ti=0;var t=0,C=0,n=A.expiredLanes,h=A.suspendedLanes,r=A.pingedLanes;if(0!==n)t=n,C=Ti=15;else if(0!==(n=134217727&e)){var E=n&~h;0!==E?(t=Li(E),C=Ti):0!==(r&=n)&&(t=Li(r),C=Ti)}else 0!==(n=e&~h)?(t=Li(n),C=Ti):0!==r&&(t=Li(r),C=Ti);if(0===t)return 0;if(t=e&((0>(t=31-Ui(t))?0:1<<t)<<1)-1,0!==i&&i!==t&&0==(i&h)){if(Li(i),C<=Ti)return i;Ti=C}if(0!==(i=A.entangledLanes))for(A=A.entanglements,i&=t;0<i;)C=1<<(e=31-Ui(i)),t|=A[e],i&=~C;return t}function Pi(A){return 0!==(A=-1073741825&A.pendingLanes)?A:1073741824&A?1073741824:0}function Oi(A,i){switch(A){case 15:return 1;case 14:return 2;case 12:return 0===(A=Ni(24&~i))?Oi(10,i):A;case 10:return 0===(A=Ni(192&~i))?Oi(8,i):A;case 8:return 0===(A=Ni(3584&~i))&&(0===(A=Ni(4186112&~i))&&(A=512)),A;case 2:return 0===(i=Ni(805306368&~i))&&(i=268435456),i}throw Error(h(358,A))}function Ni(A){return A&-A}function Ji(A){for(var i=[],e=0;31>e;e++)i.push(A);return i}function Ki(A,i,e){A.pendingLanes|=i;var t=i-1;A.suspendedLanes&=t,A.pingedLanes&=t,(A=A.eventTimes)[i=31-Ui(i)]=e}var Ui=Math.clz32?Math.clz32:function(A){return 0===A?32:31-(Vi(A)/Wi|0)|0},Vi=Math.log,Wi=Math.LN2;var zi=n.unstable_UserBlockingPriority,qi=n.unstable_runWithPriority,Qi=!0;function Yi(A,i,e,t){LA||SA();var C=Zi,n=LA;LA=!0;try{wA(C,A,i,e,t)}finally{(LA=n)||PA()}}function Xi(A,i,e,t){qi(zi,Zi.bind(null,A,i,e,t))}function Zi(A,i,e,t){var C;if(Qi)if((C=0==(4&i))&&0<ni.length&&-1<gi.indexOf(A))A=Di(null,A,i,e,t),ni.push(A);else{var n=_i(A,i,e,t);if(null===n)C&&ai(A,t);else{if(C){if(-1<gi.indexOf(A))return A=Di(n,A,i,e,t),void ni.push(A);if(function(A,i,e,t,C){switch(i){case"focusin":return hi=si(hi,A,i,e,t,C),!0;case"dragenter":return ri=si(ri,A,i,e,t,C),!0;case"mouseover":return Ei=si(Ei,A,i,e,t,C),!0;case"pointerover":var n=C.pointerId;return li.set(n,si(li.get(n)||null,A,i,e,t,C)),!0;case"gotpointercapture":return n=C.pointerId,oi.set(n,si(oi.get(n)||null,A,i,e,t,C)),!0}return!1}(n,A,i,e,t))return;ai(A,t)}yt(A,i,t,null,e)}}}function _i(A,i,e,t){var C=pA(t);if(null!==(C=Xt(C))){var n=YA(C);if(null===n)C=null;else{var h=n.tag;if(13===h){if(null!==(C=XA(n)))return C;C=null}else if(3===h){if(n.stateNode.hydrate)return 3===n.tag?n.stateNode.containerInfo:null;C=null}else n!==C&&(C=null)}}return yt(A,i,t,C,e),null}var $i=null,Ae=null,ie=null;function ee(){if(ie)return ie;var A,i,e=Ae,t=e.length,C="value"in $i?$i.value:$i.textContent,n=C.length;for(A=0;A<t&&e[A]===C[A];A++);var h=t-A;for(i=1;i<=h&&e[t-i]===C[n-i];i++);return ie=C.slice(A,1<i?1-i:void 0)}function te(A){var i=A.keyCode;return"charCode"in A?0===(A=A.charCode)&&13===i&&(A=13):A=i,10===A&&(A=13),32<=A||13===A?A:0}function Ce(){return!0}function ne(){return!1}function he(A){function i(i,e,t,C,n){for(var h in this._reactName=i,this._targetInst=t,this.type=e,this.nativeEvent=C,this.target=n,this.currentTarget=null,A)A.hasOwnProperty(h)&&(i=A[h],this[h]=i?i(C):C[h]);return this.isDefaultPrevented=(null!=C.defaultPrevented?C.defaultPrevented:!1===C.returnValue)?Ce:ne,this.isPropagationStopped=ne,this}return C(i.prototype,{preventDefault:function(){this.defaultPrevented=!0;var A=this.nativeEvent;A&&(A.preventDefault?A.preventDefault():"unknown"!=typeof A.returnValue&&(A.returnValue=!1),this.isDefaultPrevented=Ce)},stopPropagation:function(){var A=this.nativeEvent;A&&(A.stopPropagation?A.stopPropagation():"unknown"!=typeof A.cancelBubble&&(A.cancelBubble=!0),this.isPropagationStopped=Ce)},persist:function(){},isPersistent:Ce}),i}var re,Ee,le,oe={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(A){return A.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ke=he(oe),ge=C({},oe,{view:0,detail:0}),De=he(ge),ae=C({},ge,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:pe,button:0,buttons:0,relatedTarget:function(A){return void 0===A.relatedTarget?A.fromElement===A.srcElement?A.toElement:A.fromElement:A.relatedTarget},movementX:function(A){return"movementX"in A?A.movementX:(A!==le&&(le&&"mousemove"===A.type?(re=A.screenX-le.screenX,Ee=A.screenY-le.screenY):Ee=re=0,le=A),re)},movementY:function(A){return"movementY"in A?A.movementY:Ee}}),se=he(ae),Be=he(C({},ae,{dataTransfer:0})),je=he(C({},ge,{relatedTarget:0})),me=he(C({},oe,{animationName:0,elapsedTime:0,pseudoElement:0})),ce=he(C({},oe,{clipboardData:function(A){return"clipboardData"in A?A.clipboardData:window.clipboardData}})),ue=he(C({},oe,{data:0})),Fe={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ge={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},de={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function fe(A){var i=this.nativeEvent;return i.getModifierState?i.getModifierState(A):!!(A=de[A])&&!!i[A]}function pe(){return fe}var ve=he(C({},ge,{key:function(A){if(A.key){var i=Fe[A.key]||A.key;if("Unidentified"!==i)return i}return"keypress"===A.type?13===(A=te(A))?"Enter":String.fromCharCode(A):"keydown"===A.type||"keyup"===A.type?Ge[A.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:pe,charCode:function(A){return"keypress"===A.type?te(A):0},keyCode:function(A){return"keydown"===A.type||"keyup"===A.type?A.keyCode:0},which:function(A){return"keypress"===A.type?te(A):"keydown"===A.type||"keyup"===A.type?A.keyCode:0}})),He=he(C({},ae,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ie=he(C({},ge,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:pe})),ye=he(C({},oe,{propertyName:0,elapsedTime:0,pseudoElement:0})),be=he(C({},ae,{deltaX:function(A){return"deltaX"in A?A.deltaX:"wheelDeltaX"in A?-A.wheelDeltaX:0},deltaY:function(A){return"deltaY"in A?A.deltaY:"wheelDeltaY"in A?-A.wheelDeltaY:"wheelDelta"in A?-A.wheelDelta:0},deltaZ:0,deltaMode:0})),Me=[9,13,27,32],xe=k&&"CompositionEvent"in window,we=null;k&&"documentMode"in document&&(we=document.documentMode);var Se=k&&"TextEvent"in window&&!we,Te=k&&(!xe||we&&8<we&&11>=we),Le=String.fromCharCode(32),Re=!1;function Pe(A,i){switch(A){case"keyup":return-1!==Me.indexOf(i.keyCode);case"keydown":return 229!==i.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Oe(A){return"object"==typeof(A=A.detail)&&"data"in A?A.data:null}var Ne=!1;var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ke(A){var i=A&&A.nodeName&&A.nodeName.toLowerCase();return"input"===i?!!Je[A.type]:"textarea"===i}function Ue(A,i,e,t){bA(t),0<(i=Mt(i,"onChange")).length&&(e=new ke("onChange","change",null,e,t),A.push({event:e,listeners:i}))}var Ve=null,We=null;function ze(A){dt(A,0)}function qe(A){if(Z(_t(A)))return A}function Qe(A,i){if("change"===A)return i}var Ye=!1;if(k){var Xe;if(k){var Ze="oninput"in document;if(!Ze){var _e=document.createElement("div");_e.setAttribute("oninput","return;"),Ze="function"==typeof _e.oninput}Xe=Ze}else Xe=!1;Ye=Xe&&(!document.documentMode||9<document.documentMode)}function $e(){Ve&&(Ve.detachEvent("onpropertychange",At),We=Ve=null)}function At(A){if("value"===A.propertyName&&qe(We)){var i=[];if(Ue(i,We,A,pA(A)),A=ze,LA)A(i);else{LA=!0;try{xA(A,i)}finally{LA=!1,PA()}}}}function it(A,i,e){"focusin"===A?($e(),We=e,(Ve=i).attachEvent("onpropertychange",At)):"focusout"===A&&$e()}function et(A){if("selectionchange"===A||"keyup"===A||"keydown"===A)return qe(We)}function tt(A,i){if("click"===A)return qe(i)}function Ct(A,i){if("input"===A||"change"===A)return qe(i)}var nt="function"==typeof Object.is?Object.is:function(A,i){return A===i&&(0!==A||1/A==1/i)||A!=A&&i!=i},ht=Object.prototype.hasOwnProperty;function rt(A,i){if(nt(A,i))return!0;if("object"!=typeof A||null===A||"object"!=typeof i||null===i)return!1;var e=Object.keys(A),t=Object.keys(i);if(e.length!==t.length)return!1;for(t=0;t<e.length;t++)if(!ht.call(i,e[t])||!nt(A[e[t]],i[e[t]]))return!1;return!0}function Et(A){for(;A&&A.firstChild;)A=A.firstChild;return A}function lt(A,i){var e,t=Et(A);for(A=0;t;){if(3===t.nodeType){if(e=A+t.textContent.length,A<=i&&e>=i)return{node:t,offset:i-A};A=e}A:{for(;t;){if(t.nextSibling){t=t.nextSibling;break A}t=t.parentNode}t=void 0}t=Et(t)}}function ot(){for(var A=window,i=_();i instanceof A.HTMLIFrameElement;){try{var e="string"==typeof i.contentWindow.location.href}catch(A){e=!1}if(!e)break;i=_((A=i.contentWindow).document)}return i}function kt(A){var i=A&&A.nodeName&&A.nodeName.toLowerCase();return i&&("input"===i&&("text"===A.type||"search"===A.type||"tel"===A.type||"url"===A.type||"password"===A.type)||"textarea"===i||"true"===A.contentEditable)}var gt=k&&"documentMode"in document&&11>=document.documentMode,Dt=null,at=null,st=null,Bt=!1;function jt(A,i,e){var t=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;Bt||null==Dt||Dt!==_(t)||("selectionStart"in(t=Dt)&&kt(t)?t={start:t.selectionStart,end:t.selectionEnd}:t={anchorNode:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset},st&&rt(st,t)||(st=t,0<(t=Mt(at,"onSelect")).length&&(i=new ke("onSelect","select",null,i,e),A.push({event:i,listeners:t}),i.target=Dt)))}Si("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Si("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Si(wi,2);for(var mt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),ct=0;ct<mt.length;ct++)xi.set(mt[ct],0);o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var ut="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ft=new Set("cancel close invalid load scroll toggle".split(" ").concat(ut));function Gt(A,i,e){var t=A.type||"unknown-event";A.currentTarget=e,function(A,i,e,t,C,n,r,E,l){if(QA.apply(this,arguments),UA){if(!UA)throw Error(h(198));var o=VA;UA=!1,VA=null,WA||(WA=!0,zA=o)}}(t,i,void 0,A),A.currentTarget=null}function dt(A,i){i=0!=(4&i);for(var e=0;e<A.length;e++){var t=A[e],C=t.event;t=t.listeners;A:{var n=void 0;if(i)for(var h=t.length-1;0<=h;h--){var r=t[h],E=r.instance,l=r.currentTarget;if(r=r.listener,E!==n&&C.isPropagationStopped())break A;Gt(C,r,l),n=E}else for(h=0;h<t.length;h++){if(E=(r=t[h]).instance,l=r.currentTarget,r=r.listener,E!==n&&C.isPropagationStopped())break A;Gt(C,r,l),n=E}}}if(WA)throw A=zA,WA=!1,zA=null,A}function ft(A,i){var e=AC(i),t=A+"__bubble";e.has(t)||(It(i,A,2,!1),e.add(t))}var pt="_reactListening"+Math.random().toString(36).slice(2);function vt(A){A[pt]||(A[pt]=!0,r.forEach((function(i){Ft.has(i)||Ht(i,!1,A,null),Ht(i,!0,A,null)})))}function Ht(A,i,e,t){var C=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,n=e;if("selectionchange"===A&&9!==e.nodeType&&(n=e.ownerDocument),null!==t&&!i&&Ft.has(A)){if("scroll"!==A)return;C|=2,n=t}var h=AC(n),r=A+"__"+(i?"capture":"bubble");h.has(r)||(i&&(C|=4),It(n,A,C,i),h.add(r))}function It(A,i,e,t){var C=xi.get(i);switch(void 0===C?2:C){case 0:C=Yi;break;case 1:C=Xi;break;default:C=Zi}e=C.bind(null,i,e,A),C=void 0,!NA||"touchstart"!==i&&"touchmove"!==i&&"wheel"!==i||(C=!0),t?void 0!==C?A.addEventListener(i,e,{capture:!0,passive:C}):A.addEventListener(i,e,!0):void 0!==C?A.addEventListener(i,e,{passive:C}):A.addEventListener(i,e,!1)}function yt(A,i,e,t,C){var n=t;if(0==(1&i)&&0==(2&i)&&null!==t)A:for(;;){if(null===t)return;var h=t.tag;if(3===h||4===h){var r=t.stateNode.containerInfo;if(r===C||8===r.nodeType&&r.parentNode===C)break;if(4===h)for(h=t.return;null!==h;){var E=h.tag;if((3===E||4===E)&&((E=h.stateNode.containerInfo)===C||8===E.nodeType&&E.parentNode===C))return;h=h.return}for(;null!==r;){if(null===(h=Xt(r)))return;if(5===(E=h.tag)||6===E){t=n=h;continue A}r=r.parentNode}}t=t.return}!function(A,i,e){if(RA)return A(i,e);RA=!0;try{TA(A,i,e)}finally{RA=!1,PA()}}((function(){var t=n,C=pA(e),h=[];A:{var r=Mi.get(A);if(void 0!==r){var E=ke,l=A;switch(A){case"keypress":if(0===te(e))break A;case"keydown":case"keyup":E=ve;break;case"focusin":l="focus",E=je;break;case"focusout":l="blur",E=je;break;case"beforeblur":case"afterblur":E=je;break;case"click":if(2===e.button)break A;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":E=se;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":E=Be;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":E=Ie;break;case Hi:case Ii:case yi:E=me;break;case bi:E=ye;break;case"scroll":E=De;break;case"wheel":E=be;break;case"copy":case"cut":case"paste":E=ce;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":E=He}var o=0!=(4&i),k=!o&&"scroll"===A,g=o?null!==r?r+"Capture":null:r;o=[];for(var D,a=t;null!==a;){var s=(D=a).stateNode;if(5===D.tag&&null!==s&&(D=s,null!==g&&(null!=(s=OA(a,g))&&o.push(bt(a,s,D)))),k)break;a=a.return}0<o.length&&(r=new E(r,l,null,e,C),h.push({event:r,listeners:o}))}}if(0==(7&i)){if(E="mouseout"===A||"pointerout"===A,(!(r="mouseover"===A||"pointerover"===A)||0!=(16&i)||!(l=e.relatedTarget||e.fromElement)||!Xt(l)&&!l[Qt])&&(E||r)&&(r=C.window===C?C:(r=C.ownerDocument)?r.defaultView||r.parentWindow:window,E?(E=t,null!==(l=(l=e.relatedTarget||e.toElement)?Xt(l):null)&&(l!==(k=YA(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(E=null,l=t),E!==l)){if(o=se,s="onMouseLeave",g="onMouseEnter",a="mouse","pointerout"!==A&&"pointerover"!==A||(o=He,s="onPointerLeave",g="onPointerEnter",a="pointer"),k=null==E?r:_t(E),D=null==l?r:_t(l),(r=new o(s,a+"leave",E,e,C)).target=k,r.relatedTarget=D,s=null,Xt(C)===t&&((o=new o(g,a+"enter",l,e,C)).target=D,o.relatedTarget=k,s=o),k=s,E&&l)A:{for(g=l,a=0,D=o=E;D;D=xt(D))a++;for(D=0,s=g;s;s=xt(s))D++;for(;0<a-D;)o=xt(o),a--;for(;0<D-a;)g=xt(g),D--;for(;a--;){if(o===g||null!==g&&o===g.alternate)break A;o=xt(o),g=xt(g)}o=null}else o=null;null!==E&&wt(h,r,E,o,!1),null!==l&&null!==k&&wt(h,k,l,o,!0)}if("select"===(E=(r=t?_t(t):window).nodeName&&r.nodeName.toLowerCase())||"input"===E&&"file"===r.type)var B=Qe;else if(Ke(r))if(Ye)B=Ct;else{B=et;var j=it}else(E=r.nodeName)&&"input"===E.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(B=tt);switch(B&&(B=B(A,t))?Ue(h,B,e,C):(j&&j(A,r,t),"focusout"===A&&(j=r._wrapperState)&&j.controlled&&"number"===r.type&&CA(r,"number",r.value)),j=t?_t(t):window,A){case"focusin":(Ke(j)||"true"===j.contentEditable)&&(Dt=j,at=t,st=null);break;case"focusout":st=at=Dt=null;break;case"mousedown":Bt=!0;break;case"contextmenu":case"mouseup":case"dragend":Bt=!1,jt(h,e,C);break;case"selectionchange":if(gt)break;case"keydown":case"keyup":jt(h,e,C)}var m;if(xe)A:{switch(A){case"compositionstart":var c="onCompositionStart";break A;case"compositionend":c="onCompositionEnd";break A;case"compositionupdate":c="onCompositionUpdate";break A}c=void 0}else Ne?Pe(A,e)&&(c="onCompositionEnd"):"keydown"===A&&229===e.keyCode&&(c="onCompositionStart");c&&(Te&&"ko"!==e.locale&&(Ne||"onCompositionStart"!==c?"onCompositionEnd"===c&&Ne&&(m=ee()):(Ae="value"in($i=C)?$i.value:$i.textContent,Ne=!0)),0<(j=Mt(t,c)).length&&(c=new ue(c,A,null,e,C),h.push({event:c,listeners:j}),m?c.data=m:null!==(m=Oe(e))&&(c.data=m))),(m=Se?function(A,i){switch(A){case"compositionend":return Oe(i);case"keypress":return 32!==i.which?null:(Re=!0,Le);case"textInput":return(A=i.data)===Le&&Re?null:A;default:return null}}(A,e):function(A,i){if(Ne)return"compositionend"===A||!xe&&Pe(A,i)?(A=ee(),ie=Ae=$i=null,Ne=!1,A):null;switch(A){case"paste":return null;case"keypress":if(!(i.ctrlKey||i.altKey||i.metaKey)||i.ctrlKey&&i.altKey){if(i.char&&1<i.char.length)return i.char;if(i.which)return String.fromCharCode(i.which)}return null;case"compositionend":return Te&&"ko"!==i.locale?null:i.data;default:return null}}(A,e))&&(0<(t=Mt(t,"onBeforeInput")).length&&(C=new ue("onBeforeInput","beforeinput",null,e,C),h.push({event:C,listeners:t}),C.data=m))}dt(h,i)}))}function bt(A,i,e){return{instance:A,listener:i,currentTarget:e}}function Mt(A,i){for(var e=i+"Capture",t=[];null!==A;){var C=A,n=C.stateNode;5===C.tag&&null!==n&&(C=n,null!=(n=OA(A,e))&&t.unshift(bt(A,n,C)),null!=(n=OA(A,i))&&t.push(bt(A,n,C))),A=A.return}return t}function xt(A){if(null===A)return null;do{A=A.return}while(A&&5!==A.tag);return A||null}function wt(A,i,e,t,C){for(var n=i._reactName,h=[];null!==e&&e!==t;){var r=e,E=r.alternate,l=r.stateNode;if(null!==E&&E===t)break;5===r.tag&&null!==l&&(r=l,C?null!=(E=OA(e,n))&&h.unshift(bt(e,E,r)):C||null!=(E=OA(e,n))&&h.push(bt(e,E,r))),e=e.return}0!==h.length&&A.push({event:i,listeners:h})}function St(){}var Tt=null,Lt=null;function Rt(A,i){switch(A){case"button":case"input":case"select":case"textarea":return!!i.autoFocus}return!1}function Pt(A,i){return"textarea"===A||"option"===A||"noscript"===A||"string"==typeof i.children||"number"==typeof i.children||"object"==typeof i.dangerouslySetInnerHTML&&null!==i.dangerouslySetInnerHTML&&null!=i.dangerouslySetInnerHTML.__html}var Ot="function"==typeof setTimeout?setTimeout:void 0,Nt="function"==typeof clearTimeout?clearTimeout:void 0;function Jt(A){1===A.nodeType?A.textContent="":9===A.nodeType&&(null!=(A=A.body)&&(A.textContent=""))}function Kt(A){for(;null!=A;A=A.nextSibling){var i=A.nodeType;if(1===i||3===i)break}return A}function Ut(A){A=A.previousSibling;for(var i=0;A;){if(8===A.nodeType){var e=A.data;if("$"===e||"$!"===e||"$?"===e){if(0===i)return A;i--}else"/$"===e&&i++}A=A.previousSibling}return null}var Vt=0;var Wt=Math.random().toString(36).slice(2),zt="__reactFiber$"+Wt,qt="__reactProps$"+Wt,Qt="__reactContainer$"+Wt,Yt="__reactEvents$"+Wt;function Xt(A){var i=A[zt];if(i)return i;for(var e=A.parentNode;e;){if(i=e[Qt]||e[zt]){if(e=i.alternate,null!==i.child||null!==e&&null!==e.child)for(A=Ut(A);null!==A;){if(e=A[zt])return e;A=Ut(A)}return i}e=(A=e).parentNode}return null}function Zt(A){return!(A=A[zt]||A[Qt])||5!==A.tag&&6!==A.tag&&13!==A.tag&&3!==A.tag?null:A}function _t(A){if(5===A.tag||6===A.tag)return A.stateNode;throw Error(h(33))}function $t(A){return A[qt]||null}function AC(A){var i=A[Yt];return void 0===i&&(i=A[Yt]=new Set),i}var iC=[],eC=-1;function tC(A){return{current:A}}function CC(A){0>eC||(A.current=iC[eC],iC[eC]=null,eC--)}function nC(A,i){eC++,iC[eC]=A.current,A.current=i}var hC={},rC=tC(hC),EC=tC(!1),lC=hC;function oC(A,i){var e=A.type.contextTypes;if(!e)return hC;var t=A.stateNode;if(t&&t.__reactInternalMemoizedUnmaskedChildContext===i)return t.__reactInternalMemoizedMaskedChildContext;var C,n={};for(C in e)n[C]=i[C];return t&&((A=A.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,A.__reactInternalMemoizedMaskedChildContext=n),n}function kC(A){return null!=(A=A.childContextTypes)}function gC(){CC(EC),CC(rC)}function DC(A,i,e){if(rC.current!==hC)throw Error(h(168));nC(rC,i),nC(EC,e)}function aC(A,i,e){var t=A.stateNode;if(A=i.childContextTypes,"function"!=typeof t.getChildContext)return e;for(var n in t=t.getChildContext())if(!(n in A))throw Error(h(108,q(i)||"Unknown",n));return C({},e,t)}function sC(A){return A=(A=A.stateNode)&&A.__reactInternalMemoizedMergedChildContext||hC,lC=rC.current,nC(rC,A),nC(EC,EC.current),!0}function BC(A,i,e){var t=A.stateNode;if(!t)throw Error(h(169));e?(A=aC(A,i,lC),t.__reactInternalMemoizedMergedChildContext=A,CC(EC),CC(rC),nC(rC,A)):CC(EC),nC(EC,e)}var jC=null,mC=null,cC=n.unstable_runWithPriority,uC=n.unstable_scheduleCallback,FC=n.unstable_cancelCallback,GC=n.unstable_shouldYield,dC=n.unstable_requestPaint,fC=n.unstable_now,pC=n.unstable_getCurrentPriorityLevel,vC=n.unstable_ImmediatePriority,HC=n.unstable_UserBlockingPriority,IC=n.unstable_NormalPriority,yC=n.unstable_LowPriority,bC=n.unstable_IdlePriority,MC={},xC=void 0!==dC?dC:function(){},wC=null,SC=null,TC=!1,LC=fC(),RC=1e4>LC?fC:function(){return fC()-LC};function PC(){switch(pC()){case vC:return 99;case HC:return 98;case IC:return 97;case yC:return 96;case bC:return 95;default:throw Error(h(332))}}function OC(A){switch(A){case 99:return vC;case 98:return HC;case 97:return IC;case 96:return yC;case 95:return bC;default:throw Error(h(332))}}function NC(A,i){return A=OC(A),cC(A,i)}function JC(A,i,e){return A=OC(A),uC(A,i,e)}function KC(){if(null!==SC){var A=SC;SC=null,FC(A)}UC()}function UC(){if(!TC&&null!==wC){TC=!0;var A=0;try{var i=wC;NC(99,(function(){for(;A<i.length;A++){var e=i[A];do{e=e(!0)}while(null!==e)}})),wC=null}catch(i){throw null!==wC&&(wC=wC.slice(A+1)),uC(vC,KC),i}finally{TC=!1}}}var VC=F.ReactCurrentBatchConfig;function WC(A,i){if(A&&A.defaultProps){for(var e in i=C({},i),A=A.defaultProps)void 0===i[e]&&(i[e]=A[e]);return i}return i}var zC=tC(null),qC=null,QC=null,YC=null;function XC(){YC=QC=qC=null}function ZC(A){var i=zC.current;CC(zC),A.type._context._currentValue=i}function _C(A,i){for(;null!==A;){var e=A.alternate;if((A.childLanes&i)===i){if(null===e||(e.childLanes&i)===i)break;e.childLanes|=i}else A.childLanes|=i,null!==e&&(e.childLanes|=i);A=A.return}}function $C(A,i){qC=A,YC=QC=null,null!==(A=A.dependencies)&&null!==A.firstContext&&(0!=(A.lanes&i)&&(Mh=!0),A.firstContext=null)}function An(A,i){if(YC!==A&&!1!==i&&0!==i)if("number"==typeof i&&1073741823!==i||(YC=A,i=1073741823),i={context:A,observedBits:i,next:null},null===QC){if(null===qC)throw Error(h(308));QC=i,qC.dependencies={lanes:0,firstContext:i,responders:null}}else QC=QC.next=i;return A._currentValue}var en=!1;function tn(A){A.updateQueue={baseState:A.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function Cn(A,i){A=A.updateQueue,i.updateQueue===A&&(i.updateQueue={baseState:A.baseState,firstBaseUpdate:A.firstBaseUpdate,lastBaseUpdate:A.lastBaseUpdate,shared:A.shared,effects:A.effects})}function nn(A,i){return{eventTime:A,lane:i,tag:0,payload:null,callback:null,next:null}}function hn(A,i){if(null!==(A=A.updateQueue)){var e=(A=A.shared).pending;null===e?i.next=i:(i.next=e.next,e.next=i),A.pending=i}}function rn(A,i){var e=A.updateQueue,t=A.alternate;if(null!==t&&e===(t=t.updateQueue)){var C=null,n=null;if(null!==(e=e.firstBaseUpdate)){do{var h={eventTime:e.eventTime,lane:e.lane,tag:e.tag,payload:e.payload,callback:e.callback,next:null};null===n?C=n=h:n=n.next=h,e=e.next}while(null!==e);null===n?C=n=i:n=n.next=i}else C=n=i;return e={baseState:t.baseState,firstBaseUpdate:C,lastBaseUpdate:n,shared:t.shared,effects:t.effects},void(A.updateQueue=e)}null===(A=e.lastBaseUpdate)?e.firstBaseUpdate=i:A.next=i,e.lastBaseUpdate=i}function En(A,i,e,t){var n=A.updateQueue;en=!1;var h=n.firstBaseUpdate,r=n.lastBaseUpdate,E=n.shared.pending;if(null!==E){n.shared.pending=null;var l=E,o=l.next;l.next=null,null===r?h=o:r.next=o,r=l;var k=A.alternate;if(null!==k){var g=(k=k.updateQueue).lastBaseUpdate;g!==r&&(null===g?k.firstBaseUpdate=o:g.next=o,k.lastBaseUpdate=l)}}if(null!==h){for(g=n.baseState,r=0,k=o=l=null;;){E=h.lane;var D=h.eventTime;if((t&E)===E){null!==k&&(k=k.next={eventTime:D,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,next:null});A:{var a=A,s=h;switch(E=i,D=e,s.tag){case 1:if("function"==typeof(a=s.payload)){g=a.call(D,g,E);break A}g=a;break A;case 3:a.flags=-4097&a.flags|64;case 0:if(null==(E="function"==typeof(a=s.payload)?a.call(D,g,E):a))break A;g=C({},g,E);break A;case 2:en=!0}}null!==h.callback&&(A.flags|=32,null===(E=n.effects)?n.effects=[h]:E.push(h))}else D={eventTime:D,lane:E,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===k?(o=k=D,l=g):k=k.next=D,r|=E;if(null===(h=h.next)){if(null===(E=n.shared.pending))break;h=E.next,E.next=null,n.lastBaseUpdate=E,n.shared.pending=null}}null===k&&(l=g),n.baseState=l,n.firstBaseUpdate=o,n.lastBaseUpdate=k,wr|=r,A.lanes=r,A.memoizedState=g}}function ln(A,i,e){if(A=i.effects,i.effects=null,null!==A)for(i=0;i<A.length;i++){var t=A[i],C=t.callback;if(null!==C){if(t.callback=null,t=e,"function"!=typeof C)throw Error(h(191,C));C.call(t)}}}var on=(new t.Component).refs;function kn(A,i,e,t){e=null==(e=e(t,i=A.memoizedState))?i:C({},i,e),A.memoizedState=e,0===A.lanes&&(A.updateQueue.baseState=e)}var gn={isMounted:function(A){return!!(A=A._reactInternals)&&YA(A)===A},enqueueSetState:function(A,i,e){A=A._reactInternals;var t=CE(),C=nE(A),n=nn(t,C);n.payload=i,null!=e&&(n.callback=e),hn(A,n),hE(A,C,t)},enqueueReplaceState:function(A,i,e){A=A._reactInternals;var t=CE(),C=nE(A),n=nn(t,C);n.tag=1,n.payload=i,null!=e&&(n.callback=e),hn(A,n),hE(A,C,t)},enqueueForceUpdate:function(A,i){A=A._reactInternals;var e=CE(),t=nE(A),C=nn(e,t);C.tag=2,null!=i&&(C.callback=i),hn(A,C),hE(A,t,e)}};function Dn(A,i,e,t,C,n,h){return"function"==typeof(A=A.stateNode).shouldComponentUpdate?A.shouldComponentUpdate(t,n,h):!i.prototype||!i.prototype.isPureReactComponent||(!rt(e,t)||!rt(C,n))}function an(A,i,e){var t=!1,C=hC,n=i.contextType;return"object"==typeof n&&null!==n?n=An(n):(C=kC(i)?lC:rC.current,n=(t=null!=(t=i.contextTypes))?oC(A,C):hC),i=new i(e,n),A.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,i.updater=gn,A.stateNode=i,i._reactInternals=A,t&&((A=A.stateNode).__reactInternalMemoizedUnmaskedChildContext=C,A.__reactInternalMemoizedMaskedChildContext=n),i}function sn(A,i,e,t){A=i.state,"function"==typeof i.componentWillReceiveProps&&i.componentWillReceiveProps(e,t),"function"==typeof i.UNSAFE_componentWillReceiveProps&&i.UNSAFE_componentWillReceiveProps(e,t),i.state!==A&&gn.enqueueReplaceState(i,i.state,null)}function Bn(A,i,e,t){var C=A.stateNode;C.props=e,C.state=A.memoizedState,C.refs=on,tn(A);var n=i.contextType;"object"==typeof n&&null!==n?C.context=An(n):(n=kC(i)?lC:rC.current,C.context=oC(A,n)),En(A,e,C,t),C.state=A.memoizedState,"function"==typeof(n=i.getDerivedStateFromProps)&&(kn(A,i,n,e),C.state=A.memoizedState),"function"==typeof i.getDerivedStateFromProps||"function"==typeof C.getSnapshotBeforeUpdate||"function"!=typeof C.UNSAFE_componentWillMount&&"function"!=typeof C.componentWillMount||(i=C.state,"function"==typeof C.componentWillMount&&C.componentWillMount(),"function"==typeof C.UNSAFE_componentWillMount&&C.UNSAFE_componentWillMount(),i!==C.state&&gn.enqueueReplaceState(C,C.state,null),En(A,e,C,t),C.state=A.memoizedState),"function"==typeof C.componentDidMount&&(A.flags|=4)}var jn=Array.isArray;function mn(A,i,e){if(null!==(A=e.ref)&&"function"!=typeof A&&"object"!=typeof A){if(e._owner){if(e=e._owner){if(1!==e.tag)throw Error(h(309));var t=e.stateNode}if(!t)throw Error(h(147,A));var C=""+A;return null!==i&&null!==i.ref&&"function"==typeof i.ref&&i.ref._stringRef===C?i.ref:((i=function(A){var i=t.refs;i===on&&(i=t.refs={}),null===A?delete i[C]:i[C]=A})._stringRef=C,i)}if("string"!=typeof A)throw Error(h(284));if(!e._owner)throw Error(h(290,A))}return A}function cn(A,i){if("textarea"!==A.type)throw Error(h(31,"[object Object]"===Object.prototype.toString.call(i)?"object with keys {"+Object.keys(i).join(", ")+"}":i))}function un(A){function i(i,e){if(A){var t=i.lastEffect;null!==t?(t.nextEffect=e,i.lastEffect=e):i.firstEffect=i.lastEffect=e,e.nextEffect=null,e.flags=8}}function e(e,t){if(!A)return null;for(;null!==t;)i(e,t),t=t.sibling;return null}function t(A,i){for(A=new Map;null!==i;)null!==i.key?A.set(i.key,i):A.set(i.index,i),i=i.sibling;return A}function C(A,i){return(A=PE(A,i)).index=0,A.sibling=null,A}function n(i,e,t){return i.index=t,A?null!==(t=i.alternate)?(t=t.index)<e?(i.flags=2,e):t:(i.flags=2,e):e}function r(i){return A&&null===i.alternate&&(i.flags=2),i}function E(A,i,e,t){return null===i||6!==i.tag?((i=KE(e,A.mode,t)).return=A,i):((i=C(i,e)).return=A,i)}function l(A,i,e,t){return null!==i&&i.elementType===e.type?((t=C(i,e.props)).ref=mn(A,i,e),t.return=A,t):((t=OE(e.type,e.key,e.props,null,A.mode,t)).ref=mn(A,i,e),t.return=A,t)}function o(A,i,e,t){return null===i||4!==i.tag||i.stateNode.containerInfo!==e.containerInfo||i.stateNode.implementation!==e.implementation?((i=UE(e,A.mode,t)).return=A,i):((i=C(i,e.children||[])).return=A,i)}function k(A,i,e,t,n){return null===i||7!==i.tag?((i=NE(e,A.mode,t,n)).return=A,i):((i=C(i,e)).return=A,i)}function g(A,i,e){if("string"==typeof i||"number"==typeof i)return(i=KE(""+i,A.mode,e)).return=A,i;if("object"==typeof i&&null!==i){switch(i.$$typeof){case G:return(e=OE(i.type,i.key,i.props,null,A.mode,e)).ref=mn(A,null,i),e.return=A,e;case d:return(i=UE(i,A.mode,e)).return=A,i}if(jn(i)||K(i))return(i=NE(i,A.mode,e,null)).return=A,i;cn(A,i)}return null}function D(A,i,e,t){var C=null!==i?i.key:null;if("string"==typeof e||"number"==typeof e)return null!==C?null:E(A,i,""+e,t);if("object"==typeof e&&null!==e){switch(e.$$typeof){case G:return e.key===C?e.type===f?k(A,i,e.props.children,t,C):l(A,i,e,t):null;case d:return e.key===C?o(A,i,e,t):null}if(jn(e)||K(e))return null!==C?null:k(A,i,e,t,null);cn(A,e)}return null}function a(A,i,e,t,C){if("string"==typeof t||"number"==typeof t)return E(i,A=A.get(e)||null,""+t,C);if("object"==typeof t&&null!==t){switch(t.$$typeof){case G:return A=A.get(null===t.key?e:t.key)||null,t.type===f?k(i,A,t.props.children,C,t.key):l(i,A,t,C);case d:return o(i,A=A.get(null===t.key?e:t.key)||null,t,C)}if(jn(t)||K(t))return k(i,A=A.get(e)||null,t,C,null);cn(i,t)}return null}function s(C,h,r,E){for(var l=null,o=null,k=h,s=h=0,B=null;null!==k&&s<r.length;s++){k.index>s?(B=k,k=null):B=k.sibling;var j=D(C,k,r[s],E);if(null===j){null===k&&(k=B);break}A&&k&&null===j.alternate&&i(C,k),h=n(j,h,s),null===o?l=j:o.sibling=j,o=j,k=B}if(s===r.length)return e(C,k),l;if(null===k){for(;s<r.length;s++)null!==(k=g(C,r[s],E))&&(h=n(k,h,s),null===o?l=k:o.sibling=k,o=k);return l}for(k=t(C,k);s<r.length;s++)null!==(B=a(k,C,s,r[s],E))&&(A&&null!==B.alternate&&k.delete(null===B.key?s:B.key),h=n(B,h,s),null===o?l=B:o.sibling=B,o=B);return A&&k.forEach((function(A){return i(C,A)})),l}function B(C,r,E,l){var o=K(E);if("function"!=typeof o)throw Error(h(150));if(null==(E=o.call(E)))throw Error(h(151));for(var k=o=null,s=r,B=r=0,j=null,m=E.next();null!==s&&!m.done;B++,m=E.next()){s.index>B?(j=s,s=null):j=s.sibling;var c=D(C,s,m.value,l);if(null===c){null===s&&(s=j);break}A&&s&&null===c.alternate&&i(C,s),r=n(c,r,B),null===k?o=c:k.sibling=c,k=c,s=j}if(m.done)return e(C,s),o;if(null===s){for(;!m.done;B++,m=E.next())null!==(m=g(C,m.value,l))&&(r=n(m,r,B),null===k?o=m:k.sibling=m,k=m);return o}for(s=t(C,s);!m.done;B++,m=E.next())null!==(m=a(s,C,B,m.value,l))&&(A&&null!==m.alternate&&s.delete(null===m.key?B:m.key),r=n(m,r,B),null===k?o=m:k.sibling=m,k=m);return A&&s.forEach((function(A){return i(C,A)})),o}return function(A,t,n,E){var l="object"==typeof n&&null!==n&&n.type===f&&null===n.key;l&&(n=n.props.children);var o="object"==typeof n&&null!==n;if(o)switch(n.$$typeof){case G:A:{for(o=n.key,l=t;null!==l;){if(l.key===o){switch(l.tag){case 7:if(n.type===f){e(A,l.sibling),(t=C(l,n.props.children)).return=A,A=t;break A}break;default:if(l.elementType===n.type){e(A,l.sibling),(t=C(l,n.props)).ref=mn(A,l,n),t.return=A,A=t;break A}}e(A,l);break}i(A,l),l=l.sibling}n.type===f?((t=NE(n.props.children,A.mode,E,n.key)).return=A,A=t):((E=OE(n.type,n.key,n.props,null,A.mode,E)).ref=mn(A,t,n),E.return=A,A=E)}return r(A);case d:A:{for(l=n.key;null!==t;){if(t.key===l){if(4===t.tag&&t.stateNode.containerInfo===n.containerInfo&&t.stateNode.implementation===n.implementation){e(A,t.sibling),(t=C(t,n.children||[])).return=A,A=t;break A}e(A,t);break}i(A,t),t=t.sibling}(t=UE(n,A.mode,E)).return=A,A=t}return r(A)}if("string"==typeof n||"number"==typeof n)return n=""+n,null!==t&&6===t.tag?(e(A,t.sibling),(t=C(t,n)).return=A,A=t):(e(A,t),(t=KE(n,A.mode,E)).return=A,A=t),r(A);if(jn(n))return s(A,t,n,E);if(K(n))return B(A,t,n,E);if(o&&cn(A,n),void 0===n&&!l)switch(A.tag){case 1:case 22:case 0:case 11:case 15:throw Error(h(152,q(A.type)||"Component"))}return e(A,t)}}var Fn=un(!0),Gn=un(!1),dn={},fn=tC(dn),pn=tC(dn),vn=tC(dn);function Hn(A){if(A===dn)throw Error(h(174));return A}function In(A,i){switch(nC(vn,i),nC(pn,A),nC(fn,dn),A=i.nodeType){case 9:case 11:i=(i=i.documentElement)?i.namespaceURI:aA(null,"");break;default:i=aA(i=(A=8===A?i.parentNode:i).namespaceURI||null,A=A.tagName)}CC(fn),nC(fn,i)}function yn(){CC(fn),CC(pn),CC(vn)}function bn(A){Hn(vn.current);var i=Hn(fn.current),e=aA(i,A.type);i!==e&&(nC(pn,A),nC(fn,e))}function Mn(A){pn.current===A&&(CC(fn),CC(pn))}var xn=tC(0);function wn(A){for(var i=A;null!==i;){if(13===i.tag){var e=i.memoizedState;if(null!==e&&(null===(e=e.dehydrated)||"$?"===e.data||"$!"===e.data))return i}else if(19===i.tag&&void 0!==i.memoizedProps.revealOrder){if(0!=(64&i.flags))return i}else if(null!==i.child){i.child.return=i,i=i.child;continue}if(i===A)break;for(;null===i.sibling;){if(null===i.return||i.return===A)return null;i=i.return}i.sibling.return=i.return,i=i.sibling}return null}var Sn=null,Tn=null,Ln=!1;function Rn(A,i){var e=LE(5,null,null,0);e.elementType="DELETED",e.type="DELETED",e.stateNode=i,e.return=A,e.flags=8,null!==A.lastEffect?(A.lastEffect.nextEffect=e,A.lastEffect=e):A.firstEffect=A.lastEffect=e}function Pn(A,i){switch(A.tag){case 5:var e=A.type;return null!==(i=1!==i.nodeType||e.toLowerCase()!==i.nodeName.toLowerCase()?null:i)&&(A.stateNode=i,!0);case 6:return null!==(i=""===A.pendingProps||3!==i.nodeType?null:i)&&(A.stateNode=i,!0);case 13:default:return!1}}function On(A){if(Ln){var i=Tn;if(i){var e=i;if(!Pn(A,i)){if(!(i=Kt(e.nextSibling))||!Pn(A,i))return A.flags=-1025&A.flags|2,Ln=!1,void(Sn=A);Rn(Sn,e)}Sn=A,Tn=Kt(i.firstChild)}else A.flags=-1025&A.flags|2,Ln=!1,Sn=A}}function Nn(A){for(A=A.return;null!==A&&5!==A.tag&&3!==A.tag&&13!==A.tag;)A=A.return;Sn=A}function Jn(A){if(A!==Sn)return!1;if(!Ln)return Nn(A),Ln=!0,!1;var i=A.type;if(5!==A.tag||"head"!==i&&"body"!==i&&!Pt(i,A.memoizedProps))for(i=Tn;i;)Rn(A,i),i=Kt(i.nextSibling);if(Nn(A),13===A.tag){if(!(A=null!==(A=A.memoizedState)?A.dehydrated:null))throw Error(h(317));A:{for(A=A.nextSibling,i=0;A;){if(8===A.nodeType){var e=A.data;if("/$"===e){if(0===i){Tn=Kt(A.nextSibling);break A}i--}else"$"!==e&&"$!"!==e&&"$?"!==e||i++}A=A.nextSibling}Tn=null}}else Tn=Sn?Kt(A.stateNode.nextSibling):null;return!0}function Kn(){Tn=Sn=null,Ln=!1}var Un=[];function Vn(){for(var A=0;A<Un.length;A++)Un[A]._workInProgressVersionPrimary=null;Un.length=0}var Wn=F.ReactCurrentDispatcher,zn=F.ReactCurrentBatchConfig,qn=0,Qn=null,Yn=null,Xn=null,Zn=!1,_n=!1;function $n(){throw Error(h(321))}function Ah(A,i){if(null===i)return!1;for(var e=0;e<i.length&&e<A.length;e++)if(!nt(A[e],i[e]))return!1;return!0}function ih(A,i,e,t,C,n){if(qn=n,Qn=i,i.memoizedState=null,i.updateQueue=null,i.lanes=0,Wn.current=null===A||null===A.memoizedState?Hh:Ih,A=e(t,C),_n){n=0;do{if(_n=!1,!(25>n))throw Error(h(301));n+=1,Xn=Yn=null,i.updateQueue=null,Wn.current=yh,A=e(t,C)}while(_n)}if(Wn.current=vh,i=null!==Yn&&null!==Yn.next,qn=0,Xn=Yn=Qn=null,Zn=!1,i)throw Error(h(300));return A}function eh(){var A={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Xn?Qn.memoizedState=Xn=A:Xn=Xn.next=A,Xn}function th(){if(null===Yn){var A=Qn.alternate;A=null!==A?A.memoizedState:null}else A=Yn.next;var i=null===Xn?Qn.memoizedState:Xn.next;if(null!==i)Xn=i,Yn=A;else{if(null===A)throw Error(h(310));A={memoizedState:(Yn=A).memoizedState,baseState:Yn.baseState,baseQueue:Yn.baseQueue,queue:Yn.queue,next:null},null===Xn?Qn.memoizedState=Xn=A:Xn=Xn.next=A}return Xn}function Ch(A,i){return"function"==typeof i?i(A):i}function nh(A){var i=th(),e=i.queue;if(null===e)throw Error(h(311));e.lastRenderedReducer=A;var t=Yn,C=t.baseQueue,n=e.pending;if(null!==n){if(null!==C){var r=C.next;C.next=n.next,n.next=r}t.baseQueue=C=n,e.pending=null}if(null!==C){C=C.next,t=t.baseState;var E=r=n=null,l=C;do{var o=l.lane;if((qn&o)===o)null!==E&&(E=E.next={lane:0,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null}),t=l.eagerReducer===A?l.eagerState:A(t,l.action);else{var k={lane:o,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null};null===E?(r=E=k,n=t):E=E.next=k,Qn.lanes|=o,wr|=o}l=l.next}while(null!==l&&l!==C);null===E?n=t:E.next=r,nt(t,i.memoizedState)||(Mh=!0),i.memoizedState=t,i.baseState=n,i.baseQueue=E,e.lastRenderedState=t}return[i.memoizedState,e.dispatch]}function hh(A){var i=th(),e=i.queue;if(null===e)throw Error(h(311));e.lastRenderedReducer=A;var t=e.dispatch,C=e.pending,n=i.memoizedState;if(null!==C){e.pending=null;var r=C=C.next;do{n=A(n,r.action),r=r.next}while(r!==C);nt(n,i.memoizedState)||(Mh=!0),i.memoizedState=n,null===i.baseQueue&&(i.baseState=n),e.lastRenderedState=n}return[n,t]}function rh(A,i,e){var t=i._getVersion;t=t(i._source);var C=i._workInProgressVersionPrimary;if(null!==C?A=C===t:(A=A.mutableReadLanes,(A=(qn&A)===A)&&(i._workInProgressVersionPrimary=t,Un.push(i))),A)return e(i._source);throw Un.push(i),Error(h(350))}function Eh(A,i,e,t){var C=pr;if(null===C)throw Error(h(349));var n=i._getVersion,r=n(i._source),E=Wn.current,l=E.useState((function(){return rh(C,i,e)})),o=l[1],k=l[0];l=Xn;var g=A.memoizedState,D=g.refs,a=D.getSnapshot,s=g.source;g=g.subscribe;var B=Qn;return A.memoizedState={refs:D,source:i,subscribe:t},E.useEffect((function(){D.getSnapshot=e,D.setSnapshot=o;var A=n(i._source);if(!nt(r,A)){A=e(i._source),nt(k,A)||(o(A),A=nE(B),C.mutableReadLanes|=A&C.pendingLanes),A=C.mutableReadLanes,C.entangledLanes|=A;for(var t=C.entanglements,h=A;0<h;){var E=31-Ui(h),l=1<<E;t[E]|=A,h&=~l}}}),[e,i,t]),E.useEffect((function(){return t(i._source,(function(){var A=D.getSnapshot,e=D.setSnapshot;try{e(A(i._source));var t=nE(B);C.mutableReadLanes|=t&C.pendingLanes}catch(A){e((function(){throw A}))}}))}),[i,t]),nt(a,e)&&nt(s,i)&&nt(g,t)||((A={pending:null,dispatch:null,lastRenderedReducer:Ch,lastRenderedState:k}).dispatch=o=ph.bind(null,Qn,A),l.queue=A,l.baseQueue=null,k=rh(C,i,e),l.memoizedState=l.baseState=k),k}function lh(A,i,e){return Eh(th(),A,i,e)}function oh(A){var i=eh();return"function"==typeof A&&(A=A()),i.memoizedState=i.baseState=A,A=(A=i.queue={pending:null,dispatch:null,lastRenderedReducer:Ch,lastRenderedState:A}).dispatch=ph.bind(null,Qn,A),[i.memoizedState,A]}function kh(A,i,e,t){return A={tag:A,create:i,destroy:e,deps:t,next:null},null===(i=Qn.updateQueue)?(i={lastEffect:null},Qn.updateQueue=i,i.lastEffect=A.next=A):null===(e=i.lastEffect)?i.lastEffect=A.next=A:(t=e.next,e.next=A,A.next=t,i.lastEffect=A),A}function gh(A){return A={current:A},eh().memoizedState=A}function Dh(){return th().memoizedState}function ah(A,i,e,t){var C=eh();Qn.flags|=A,C.memoizedState=kh(1|i,e,void 0,void 0===t?null:t)}function sh(A,i,e,t){var C=th();t=void 0===t?null:t;var n=void 0;if(null!==Yn){var h=Yn.memoizedState;if(n=h.destroy,null!==t&&Ah(t,h.deps))return void kh(i,e,n,t)}Qn.flags|=A,C.memoizedState=kh(1|i,e,n,t)}function Bh(A,i){return ah(516,4,A,i)}function jh(A,i){return sh(516,4,A,i)}function mh(A,i){return sh(4,2,A,i)}function ch(A,i){return"function"==typeof i?(A=A(),i(A),function(){i(null)}):null!=i?(A=A(),i.current=A,function(){i.current=null}):void 0}function uh(A,i,e){return e=null!=e?e.concat([A]):null,sh(4,2,ch.bind(null,i,A),e)}function Fh(){}function Gh(A,i){var e=th();i=void 0===i?null:i;var t=e.memoizedState;return null!==t&&null!==i&&Ah(i,t[1])?t[0]:(e.memoizedState=[A,i],A)}function dh(A,i){var e=th();i=void 0===i?null:i;var t=e.memoizedState;return null!==t&&null!==i&&Ah(i,t[1])?t[0]:(A=A(),e.memoizedState=[A,i],A)}function fh(A,i){var e=PC();NC(98>e?98:e,(function(){A(!0)})),NC(97<e?97:e,(function(){var e=zn.transition;zn.transition=1;try{A(!1),i()}finally{zn.transition=e}}))}function ph(A,i,e){var t=CE(),C=nE(A),n={lane:C,action:e,eagerReducer:null,eagerState:null,next:null},h=i.pending;if(null===h?n.next=n:(n.next=h.next,h.next=n),i.pending=n,h=A.alternate,A===Qn||null!==h&&h===Qn)_n=Zn=!0;else{if(0===A.lanes&&(null===h||0===h.lanes)&&null!==(h=i.lastRenderedReducer))try{var r=i.lastRenderedState,E=h(r,e);if(n.eagerReducer=h,n.eagerState=E,nt(E,r))return}catch(A){}hE(A,C,t)}}var vh={readContext:An,useCallback:$n,useContext:$n,useEffect:$n,useImperativeHandle:$n,useLayoutEffect:$n,useMemo:$n,useReducer:$n,useRef:$n,useState:$n,useDebugValue:$n,useDeferredValue:$n,useTransition:$n,useMutableSource:$n,useOpaqueIdentifier:$n,unstable_isNewReconciler:!1},Hh={readContext:An,useCallback:function(A,i){return eh().memoizedState=[A,void 0===i?null:i],A},useContext:An,useEffect:Bh,useImperativeHandle:function(A,i,e){return e=null!=e?e.concat([A]):null,ah(4,2,ch.bind(null,i,A),e)},useLayoutEffect:function(A,i){return ah(4,2,A,i)},useMemo:function(A,i){var e=eh();return i=void 0===i?null:i,A=A(),e.memoizedState=[A,i],A},useReducer:function(A,i,e){var t=eh();return i=void 0!==e?e(i):i,t.memoizedState=t.baseState=i,A=(A=t.queue={pending:null,dispatch:null,lastRenderedReducer:A,lastRenderedState:i}).dispatch=ph.bind(null,Qn,A),[t.memoizedState,A]},useRef:gh,useState:oh,useDebugValue:Fh,useDeferredValue:function(A){var i=oh(A),e=i[0],t=i[1];return Bh((function(){var i=zn.transition;zn.transition=1;try{t(A)}finally{zn.transition=i}}),[A]),e},useTransition:function(){var A=oh(!1),i=A[0];return gh(A=fh.bind(null,A[1])),[A,i]},useMutableSource:function(A,i,e){var t=eh();return t.memoizedState={refs:{getSnapshot:i,setSnapshot:null},source:A,subscribe:e},Eh(t,A,i,e)},useOpaqueIdentifier:function(){if(Ln){var A=!1,i=function(A){return{$$typeof:T,toString:A,valueOf:A}}((function(){throw A||(A=!0,e("r:"+(Vt++).toString(36))),Error(h(355))})),e=oh(i)[1];return 0==(2&Qn.mode)&&(Qn.flags|=516,kh(5,(function(){e("r:"+(Vt++).toString(36))}),void 0,null)),i}return oh(i="r:"+(Vt++).toString(36)),i},unstable_isNewReconciler:!1},Ih={readContext:An,useCallback:Gh,useContext:An,useEffect:jh,useImperativeHandle:uh,useLayoutEffect:mh,useMemo:dh,useReducer:nh,useRef:Dh,useState:function(){return nh(Ch)},useDebugValue:Fh,useDeferredValue:function(A){var i=nh(Ch),e=i[0],t=i[1];return jh((function(){var i=zn.transition;zn.transition=1;try{t(A)}finally{zn.transition=i}}),[A]),e},useTransition:function(){var A=nh(Ch)[0];return[Dh().current,A]},useMutableSource:lh,useOpaqueIdentifier:function(){return nh(Ch)[0]},unstable_isNewReconciler:!1},yh={readContext:An,useCallback:Gh,useContext:An,useEffect:jh,useImperativeHandle:uh,useLayoutEffect:mh,useMemo:dh,useReducer:hh,useRef:Dh,useState:function(){return hh(Ch)},useDebugValue:Fh,useDeferredValue:function(A){var i=hh(Ch),e=i[0],t=i[1];return jh((function(){var i=zn.transition;zn.transition=1;try{t(A)}finally{zn.transition=i}}),[A]),e},useTransition:function(){var A=hh(Ch)[0];return[Dh().current,A]},useMutableSource:lh,useOpaqueIdentifier:function(){return hh(Ch)[0]},unstable_isNewReconciler:!1},bh=F.ReactCurrentOwner,Mh=!1;function xh(A,i,e,t){i.child=null===A?Gn(i,null,e,t):Fn(i,A.child,e,t)}function wh(A,i,e,t,C){e=e.render;var n=i.ref;return $C(i,C),t=ih(A,i,e,t,n,C),null===A||Mh?(i.flags|=1,xh(A,i,t,C),i.child):(i.updateQueue=A.updateQueue,i.flags&=-517,A.lanes&=~C,$h(A,i,C))}function Sh(A,i,e,t,C,n){if(null===A){var h=e.type;return"function"!=typeof h||RE(h)||void 0!==h.defaultProps||null!==e.compare||void 0!==e.defaultProps?((A=OE(e.type,null,t,i,i.mode,n)).ref=i.ref,A.return=i,i.child=A):(i.tag=15,i.type=h,Th(A,i,h,t,C,n))}return h=A.child,0==(C&n)&&(C=h.memoizedProps,(e=null!==(e=e.compare)?e:rt)(C,t)&&A.ref===i.ref)?$h(A,i,n):(i.flags|=1,(A=PE(h,t)).ref=i.ref,A.return=i,i.child=A)}function Th(A,i,e,t,C,n){if(null!==A&&rt(A.memoizedProps,t)&&A.ref===i.ref){if(Mh=!1,0==(n&C))return i.lanes=A.lanes,$h(A,i,n);0!=(16384&A.flags)&&(Mh=!0)}return Ph(A,i,e,t,n)}function Lh(A,i,e){var t=i.pendingProps,C=t.children,n=null!==A?A.memoizedState:null;if("hidden"===t.mode||"unstable-defer-without-hiding"===t.mode)if(0==(4&i.mode))i.memoizedState={baseLanes:0},aE(i,e);else{if(0==(1073741824&e))return A=null!==n?n.baseLanes|e:e,i.lanes=i.childLanes=1073741824,i.memoizedState={baseLanes:A},aE(i,A),null;i.memoizedState={baseLanes:0},aE(i,null!==n?n.baseLanes:e)}else null!==n?(t=n.baseLanes|e,i.memoizedState=null):t=e,aE(i,t);return xh(A,i,C,e),i.child}function Rh(A,i){var e=i.ref;(null===A&&null!==e||null!==A&&A.ref!==e)&&(i.flags|=128)}function Ph(A,i,e,t,C){var n=kC(e)?lC:rC.current;return n=oC(i,n),$C(i,C),e=ih(A,i,e,t,n,C),null===A||Mh?(i.flags|=1,xh(A,i,e,C),i.child):(i.updateQueue=A.updateQueue,i.flags&=-517,A.lanes&=~C,$h(A,i,C))}function Oh(A,i,e,t,C){if(kC(e)){var n=!0;sC(i)}else n=!1;if($C(i,C),null===i.stateNode)null!==A&&(A.alternate=null,i.alternate=null,i.flags|=2),an(i,e,t),Bn(i,e,t,C),t=!0;else if(null===A){var h=i.stateNode,r=i.memoizedProps;h.props=r;var E=h.context,l=e.contextType;"object"==typeof l&&null!==l?l=An(l):l=oC(i,l=kC(e)?lC:rC.current);var o=e.getDerivedStateFromProps,k="function"==typeof o||"function"==typeof h.getSnapshotBeforeUpdate;k||"function"!=typeof h.UNSAFE_componentWillReceiveProps&&"function"!=typeof h.componentWillReceiveProps||(r!==t||E!==l)&&sn(i,h,t,l),en=!1;var g=i.memoizedState;h.state=g,En(i,t,h,C),E=i.memoizedState,r!==t||g!==E||EC.current||en?("function"==typeof o&&(kn(i,e,o,t),E=i.memoizedState),(r=en||Dn(i,e,r,t,g,E,l))?(k||"function"!=typeof h.UNSAFE_componentWillMount&&"function"!=typeof h.componentWillMount||("function"==typeof h.componentWillMount&&h.componentWillMount(),"function"==typeof h.UNSAFE_componentWillMount&&h.UNSAFE_componentWillMount()),"function"==typeof h.componentDidMount&&(i.flags|=4)):("function"==typeof h.componentDidMount&&(i.flags|=4),i.memoizedProps=t,i.memoizedState=E),h.props=t,h.state=E,h.context=l,t=r):("function"==typeof h.componentDidMount&&(i.flags|=4),t=!1)}else{h=i.stateNode,Cn(A,i),r=i.memoizedProps,l=i.type===i.elementType?r:WC(i.type,r),h.props=l,k=i.pendingProps,g=h.context,"object"==typeof(E=e.contextType)&&null!==E?E=An(E):E=oC(i,E=kC(e)?lC:rC.current);var D=e.getDerivedStateFromProps;(o="function"==typeof D||"function"==typeof h.getSnapshotBeforeUpdate)||"function"!=typeof h.UNSAFE_componentWillReceiveProps&&"function"!=typeof h.componentWillReceiveProps||(r!==k||g!==E)&&sn(i,h,t,E),en=!1,g=i.memoizedState,h.state=g,En(i,t,h,C);var a=i.memoizedState;r!==k||g!==a||EC.current||en?("function"==typeof D&&(kn(i,e,D,t),a=i.memoizedState),(l=en||Dn(i,e,l,t,g,a,E))?(o||"function"!=typeof h.UNSAFE_componentWillUpdate&&"function"!=typeof h.componentWillUpdate||("function"==typeof h.componentWillUpdate&&h.componentWillUpdate(t,a,E),"function"==typeof h.UNSAFE_componentWillUpdate&&h.UNSAFE_componentWillUpdate(t,a,E)),"function"==typeof h.componentDidUpdate&&(i.flags|=4),"function"==typeof h.getSnapshotBeforeUpdate&&(i.flags|=256)):("function"!=typeof h.componentDidUpdate||r===A.memoizedProps&&g===A.memoizedState||(i.flags|=4),"function"!=typeof h.getSnapshotBeforeUpdate||r===A.memoizedProps&&g===A.memoizedState||(i.flags|=256),i.memoizedProps=t,i.memoizedState=a),h.props=t,h.state=a,h.context=E,t=l):("function"!=typeof h.componentDidUpdate||r===A.memoizedProps&&g===A.memoizedState||(i.flags|=4),"function"!=typeof h.getSnapshotBeforeUpdate||r===A.memoizedProps&&g===A.memoizedState||(i.flags|=256),t=!1)}return Nh(A,i,e,t,n,C)}function Nh(A,i,e,t,C,n){Rh(A,i);var h=0!=(64&i.flags);if(!t&&!h)return C&&BC(i,e,!1),$h(A,i,n);t=i.stateNode,bh.current=i;var r=h&&"function"!=typeof e.getDerivedStateFromError?null:t.render();return i.flags|=1,null!==A&&h?(i.child=Fn(i,A.child,null,n),i.child=Fn(i,null,r,n)):xh(A,i,r,n),i.memoizedState=t.state,C&&BC(i,e,!0),i.child}function Jh(A){var i=A.stateNode;i.pendingContext?DC(0,i.pendingContext,i.pendingContext!==i.context):i.context&&DC(0,i.context,!1),In(A,i.containerInfo)}var Kh,Uh,Vh,Wh={dehydrated:null,retryLane:0};function zh(A,i,e){var t,C=i.pendingProps,n=xn.current,h=!1;return(t=0!=(64&i.flags))||(t=(null===A||null!==A.memoizedState)&&0!=(2&n)),t?(h=!0,i.flags&=-65):null!==A&&null===A.memoizedState||void 0===C.fallback||!0===C.unstable_avoidThisFallback||(n|=1),nC(xn,1&n),null===A?(void 0!==C.fallback&&On(i),A=C.children,n=C.fallback,h?(A=qh(i,A,n,e),i.child.memoizedState={baseLanes:e},i.memoizedState=Wh,A):"number"==typeof C.unstable_expectedLoadTime?(A=qh(i,A,n,e),i.child.memoizedState={baseLanes:e},i.memoizedState=Wh,i.lanes=33554432,A):((e=JE({mode:"visible",children:A},i.mode,e,null)).return=i,i.child=e)):(A.memoizedState,h?(C=Yh(A,i,C.children,C.fallback,e),h=i.child,n=A.child.memoizedState,h.memoizedState=null===n?{baseLanes:e}:{baseLanes:n.baseLanes|e},h.childLanes=A.childLanes&~e,i.memoizedState=Wh,C):(e=Qh(A,i,C.children,e),i.memoizedState=null,e))}function qh(A,i,e,t){var C=A.mode,n=A.child;return i={mode:"hidden",children:i},0==(2&C)&&null!==n?(n.childLanes=0,n.pendingProps=i):n=JE(i,C,0,null),e=NE(e,C,t,null),n.return=A,e.return=A,n.sibling=e,A.child=n,e}function Qh(A,i,e,t){var C=A.child;return A=C.sibling,e=PE(C,{mode:"visible",children:e}),0==(2&i.mode)&&(e.lanes=t),e.return=i,e.sibling=null,null!==A&&(A.nextEffect=null,A.flags=8,i.firstEffect=i.lastEffect=A),i.child=e}function Yh(A,i,e,t,C){var n=i.mode,h=A.child;A=h.sibling;var r={mode:"hidden",children:e};return 0==(2&n)&&i.child!==h?((e=i.child).childLanes=0,e.pendingProps=r,null!==(h=e.lastEffect)?(i.firstEffect=e.firstEffect,i.lastEffect=h,h.nextEffect=null):i.firstEffect=i.lastEffect=null):e=PE(h,r),null!==A?t=PE(A,t):(t=NE(t,n,C,null)).flags|=2,t.return=i,e.return=i,e.sibling=t,i.child=e,t}function Xh(A,i){A.lanes|=i;var e=A.alternate;null!==e&&(e.lanes|=i),_C(A.return,i)}function Zh(A,i,e,t,C,n){var h=A.memoizedState;null===h?A.memoizedState={isBackwards:i,rendering:null,renderingStartTime:0,last:t,tail:e,tailMode:C,lastEffect:n}:(h.isBackwards=i,h.rendering=null,h.renderingStartTime=0,h.last=t,h.tail=e,h.tailMode=C,h.lastEffect=n)}function _h(A,i,e){var t=i.pendingProps,C=t.revealOrder,n=t.tail;if(xh(A,i,t.children,e),0!=(2&(t=xn.current)))t=1&t|2,i.flags|=64;else{if(null!==A&&0!=(64&A.flags))A:for(A=i.child;null!==A;){if(13===A.tag)null!==A.memoizedState&&Xh(A,e);else if(19===A.tag)Xh(A,e);else if(null!==A.child){A.child.return=A,A=A.child;continue}if(A===i)break A;for(;null===A.sibling;){if(null===A.return||A.return===i)break A;A=A.return}A.sibling.return=A.return,A=A.sibling}t&=1}if(nC(xn,t),0==(2&i.mode))i.memoizedState=null;else switch(C){case"forwards":for(e=i.child,C=null;null!==e;)null!==(A=e.alternate)&&null===wn(A)&&(C=e),e=e.sibling;null===(e=C)?(C=i.child,i.child=null):(C=e.sibling,e.sibling=null),Zh(i,!1,C,e,n,i.lastEffect);break;case"backwards":for(e=null,C=i.child,i.child=null;null!==C;){if(null!==(A=C.alternate)&&null===wn(A)){i.child=C;break}A=C.sibling,C.sibling=e,e=C,C=A}Zh(i,!0,e,null,n,i.lastEffect);break;case"together":Zh(i,!1,null,null,void 0,i.lastEffect);break;default:i.memoizedState=null}return i.child}function $h(A,i,e){if(null!==A&&(i.dependencies=A.dependencies),wr|=i.lanes,0!=(e&i.childLanes)){if(null!==A&&i.child!==A.child)throw Error(h(153));if(null!==i.child){for(e=PE(A=i.child,A.pendingProps),i.child=e,e.return=i;null!==A.sibling;)A=A.sibling,(e=e.sibling=PE(A,A.pendingProps)).return=i;e.sibling=null}return i.child}return null}function Ar(A,i){if(!Ln)switch(A.tailMode){case"hidden":i=A.tail;for(var e=null;null!==i;)null!==i.alternate&&(e=i),i=i.sibling;null===e?A.tail=null:e.sibling=null;break;case"collapsed":e=A.tail;for(var t=null;null!==e;)null!==e.alternate&&(t=e),e=e.sibling;null===t?i||null===A.tail?A.tail=null:A.tail.sibling=null:t.sibling=null}}function ir(A,i,e){var t=i.pendingProps;switch(i.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return kC(i.type)&&gC(),null;case 3:return yn(),CC(EC),CC(rC),Vn(),(t=i.stateNode).pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==A&&null!==A.child||(Jn(i)?i.flags|=4:t.hydrate||(i.flags|=256)),null;case 5:Mn(i);var n=Hn(vn.current);if(e=i.type,null!==A&&null!=i.stateNode)Uh(A,i,e,t),A.ref!==i.ref&&(i.flags|=128);else{if(!t){if(null===i.stateNode)throw Error(h(166));return null}if(A=Hn(fn.current),Jn(i)){t=i.stateNode,e=i.type;var r=i.memoizedProps;switch(t[zt]=i,t[qt]=r,e){case"dialog":ft("cancel",t),ft("close",t);break;case"iframe":case"object":case"embed":ft("load",t);break;case"video":case"audio":for(A=0;A<ut.length;A++)ft(ut[A],t);break;case"source":ft("error",t);break;case"img":case"image":case"link":ft("error",t),ft("load",t);break;case"details":ft("toggle",t);break;case"input":AA(t,r),ft("invalid",t);break;case"select":t._wrapperState={wasMultiple:!!r.multiple},ft("invalid",t);break;case"textarea":EA(t,r),ft("invalid",t)}for(var l in dA(e,r),A=null,r)r.hasOwnProperty(l)&&(n=r[l],"children"===l?"string"==typeof n?t.textContent!==n&&(A=["children",n]):"number"==typeof n&&t.textContent!==""+n&&(A=["children",""+n]):E.hasOwnProperty(l)&&null!=n&&"onScroll"===l&&ft("scroll",t));switch(e){case"input":X(t),tA(t,r,!0);break;case"textarea":X(t),oA(t);break;case"select":case"option":break;default:"function"==typeof r.onClick&&(t.onclick=St)}t=A,i.updateQueue=t,null!==t&&(i.flags|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,A===kA&&(A=DA(e)),A===kA?"script"===e?((A=l.createElement("div")).innerHTML="<script><\/script>",A=A.removeChild(A.firstChild)):"string"==typeof t.is?A=l.createElement(e,{is:t.is}):(A=l.createElement(e),"select"===e&&(l=A,t.multiple?l.multiple=!0:t.size&&(l.size=t.size))):A=l.createElementNS(A,e),A[zt]=i,A[qt]=t,Kh(A,i),i.stateNode=A,l=fA(e,t),e){case"dialog":ft("cancel",A),ft("close",A),n=t;break;case"iframe":case"object":case"embed":ft("load",A),n=t;break;case"video":case"audio":for(n=0;n<ut.length;n++)ft(ut[n],A);n=t;break;case"source":ft("error",A),n=t;break;case"img":case"image":case"link":ft("error",A),ft("load",A),n=t;break;case"details":ft("toggle",A),n=t;break;case"input":AA(A,t),n=$(A,t),ft("invalid",A);break;case"option":n=nA(A,t);break;case"select":A._wrapperState={wasMultiple:!!t.multiple},n=C({},t,{value:void 0}),ft("invalid",A);break;case"textarea":EA(A,t),n=rA(A,t),ft("invalid",A);break;default:n=t}dA(e,n);var o=n;for(r in o)if(o.hasOwnProperty(r)){var k=o[r];"style"===r?FA(A,k):"dangerouslySetInnerHTML"===r?null!=(k=k?k.__html:void 0)&&BA(A,k):"children"===r?"string"==typeof k?("textarea"!==e||""!==k)&&jA(A,k):"number"==typeof k&&jA(A,""+k):"suppressContentEditableWarning"!==r&&"suppressHydrationWarning"!==r&&"autoFocus"!==r&&(E.hasOwnProperty(r)?null!=k&&"onScroll"===r&&ft("scroll",A):null!=k&&u(A,r,k,l))}switch(e){case"input":X(A),tA(A,t,!1);break;case"textarea":X(A),oA(A);break;case"option":null!=t.value&&A.setAttribute("value",""+Q(t.value));break;case"select":A.multiple=!!t.multiple,null!=(r=t.value)?hA(A,!!t.multiple,r,!1):null!=t.defaultValue&&hA(A,!!t.multiple,t.defaultValue,!0);break;default:"function"==typeof n.onClick&&(A.onclick=St)}Rt(e,t)&&(i.flags|=4)}null!==i.ref&&(i.flags|=128)}return null;case 6:if(A&&null!=i.stateNode)Vh(0,i,A.memoizedProps,t);else{if("string"!=typeof t&&null===i.stateNode)throw Error(h(166));e=Hn(vn.current),Hn(fn.current),Jn(i)?(t=i.stateNode,e=i.memoizedProps,t[zt]=i,t.nodeValue!==e&&(i.flags|=4)):((t=(9===e.nodeType?e:e.ownerDocument).createTextNode(t))[zt]=i,i.stateNode=t)}return null;case 13:return CC(xn),t=i.memoizedState,0!=(64&i.flags)?(i.lanes=e,i):(t=null!==t,e=!1,null===A?void 0!==i.memoizedProps.fallback&&Jn(i):e=null!==A.memoizedState,t&&!e&&0!=(2&i.mode)&&(null===A&&!0!==i.memoizedProps.unstable_avoidThisFallback||0!=(1&xn.current)?0===br&&(br=3):(0!==br&&3!==br||(br=4),null===pr||0==(134217727&wr)&&0==(134217727&Sr)||oE(pr,Hr))),(t||e)&&(i.flags|=4),null);case 4:return yn(),null===A&&vt(i.stateNode.containerInfo),null;case 10:return ZC(i),null;case 17:return kC(i.type)&&gC(),null;case 19:if(CC(xn),null===(t=i.memoizedState))return null;if(r=0!=(64&i.flags),null===(l=t.rendering))if(r)Ar(t,!1);else{if(0!==br||null!==A&&0!=(64&A.flags))for(A=i.child;null!==A;){if(null!==(l=wn(A))){for(i.flags|=64,Ar(t,!1),null!==(r=l.updateQueue)&&(i.updateQueue=r,i.flags|=4),null===t.lastEffect&&(i.firstEffect=null),i.lastEffect=t.lastEffect,t=e,e=i.child;null!==e;)A=t,(r=e).flags&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(l=r.alternate)?(r.childLanes=0,r.lanes=A,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=l.childLanes,r.lanes=l.lanes,r.child=l.child,r.memoizedProps=l.memoizedProps,r.memoizedState=l.memoizedState,r.updateQueue=l.updateQueue,r.type=l.type,A=l.dependencies,r.dependencies=null===A?null:{lanes:A.lanes,firstContext:A.firstContext}),e=e.sibling;return nC(xn,1&xn.current|2),i.child}A=A.sibling}null!==t.tail&&RC()>Pr&&(i.flags|=64,r=!0,Ar(t,!1),i.lanes=33554432)}else{if(!r)if(null!==(A=wn(l))){if(i.flags|=64,r=!0,null!==(e=A.updateQueue)&&(i.updateQueue=e,i.flags|=4),Ar(t,!0),null===t.tail&&"hidden"===t.tailMode&&!l.alternate&&!Ln)return null!==(i=i.lastEffect=t.lastEffect)&&(i.nextEffect=null),null}else 2*RC()-t.renderingStartTime>Pr&&1073741824!==e&&(i.flags|=64,r=!0,Ar(t,!1),i.lanes=33554432);t.isBackwards?(l.sibling=i.child,i.child=l):(null!==(e=t.last)?e.sibling=l:i.child=l,t.last=l)}return null!==t.tail?(e=t.tail,t.rendering=e,t.tail=e.sibling,t.lastEffect=i.lastEffect,t.renderingStartTime=RC(),e.sibling=null,i=xn.current,nC(xn,r?1&i|2:1&i),e):null;case 23:case 24:return sE(),null!==A&&null!==A.memoizedState!=(null!==i.memoizedState)&&"unstable-defer-without-hiding"!==t.mode&&(i.flags|=4),null}throw Error(h(156,i.tag))}function er(A){switch(A.tag){case 1:kC(A.type)&&gC();var i=A.flags;return 4096&i?(A.flags=-4097&i|64,A):null;case 3:if(yn(),CC(EC),CC(rC),Vn(),0!=(64&(i=A.flags)))throw Error(h(285));return A.flags=-4097&i|64,A;case 5:return Mn(A),null;case 13:return CC(xn),4096&(i=A.flags)?(A.flags=-4097&i|64,A):null;case 19:return CC(xn),null;case 4:return yn(),null;case 10:return ZC(A),null;case 23:case 24:return sE(),null;default:return null}}function tr(A,i){try{var e="",t=i;do{e+=z(t),t=t.return}while(t);var C=e}catch(A){C="\nError generating stack: "+A.message+"\n"+A.stack}return{value:A,source:i,stack:C}}function Cr(A,i){try{console.error(i.value)}catch(A){setTimeout((function(){throw A}))}}Kh=function(A,i){for(var e=i.child;null!==e;){if(5===e.tag||6===e.tag)A.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e,e=e.child;continue}if(e===i)break;for(;null===e.sibling;){if(null===e.return||e.return===i)return;e=e.return}e.sibling.return=e.return,e=e.sibling}},Uh=function(A,i,e,t){var n=A.memoizedProps;if(n!==t){A=i.stateNode,Hn(fn.current);var h,r=null;switch(e){case"input":n=$(A,n),t=$(A,t),r=[];break;case"option":n=nA(A,n),t=nA(A,t),r=[];break;case"select":n=C({},n,{value:void 0}),t=C({},t,{value:void 0}),r=[];break;case"textarea":n=rA(A,n),t=rA(A,t),r=[];break;default:"function"!=typeof n.onClick&&"function"==typeof t.onClick&&(A.onclick=St)}for(k in dA(e,t),e=null,n)if(!t.hasOwnProperty(k)&&n.hasOwnProperty(k)&&null!=n[k])if("style"===k){var l=n[k];for(h in l)l.hasOwnProperty(h)&&(e||(e={}),e[h]="")}else"dangerouslySetInnerHTML"!==k&&"children"!==k&&"suppressContentEditableWarning"!==k&&"suppressHydrationWarning"!==k&&"autoFocus"!==k&&(E.hasOwnProperty(k)?r||(r=[]):(r=r||[]).push(k,null));for(k in t){var o=t[k];if(l=null!=n?n[k]:void 0,t.hasOwnProperty(k)&&o!==l&&(null!=o||null!=l))if("style"===k)if(l){for(h in l)!l.hasOwnProperty(h)||o&&o.hasOwnProperty(h)||(e||(e={}),e[h]="");for(h in o)o.hasOwnProperty(h)&&l[h]!==o[h]&&(e||(e={}),e[h]=o[h])}else e||(r||(r=[]),r.push(k,e)),e=o;else"dangerouslySetInnerHTML"===k?(o=o?o.__html:void 0,l=l?l.__html:void 0,null!=o&&l!==o&&(r=r||[]).push(k,o)):"children"===k?"string"!=typeof o&&"number"!=typeof o||(r=r||[]).push(k,""+o):"suppressContentEditableWarning"!==k&&"suppressHydrationWarning"!==k&&(E.hasOwnProperty(k)?(null!=o&&"onScroll"===k&&ft("scroll",A),r||l===o||(r=[])):"object"==typeof o&&null!==o&&o.$$typeof===T?o.toString():(r=r||[]).push(k,o))}e&&(r=r||[]).push("style",e);var k=r;(i.updateQueue=k)&&(i.flags|=4)}},Vh=function(A,i,e,t){e!==t&&(i.flags|=4)};var nr="function"==typeof WeakMap?WeakMap:Map;function hr(A,i,e){(e=nn(-1,e)).tag=3,e.payload={element:null};var t=i.value;return e.callback=function(){Kr||(Kr=!0,Ur=t),Cr(0,i)},e}function rr(A,i,e){(e=nn(-1,e)).tag=3;var t=A.type.getDerivedStateFromError;if("function"==typeof t){var C=i.value;e.payload=function(){return Cr(0,i),t(C)}}var n=A.stateNode;return null!==n&&"function"==typeof n.componentDidCatch&&(e.callback=function(){"function"!=typeof t&&(null===Vr?Vr=new Set([this]):Vr.add(this),Cr(0,i));var A=i.stack;this.componentDidCatch(i.value,{componentStack:null!==A?A:""})}),e}var Er="function"==typeof WeakSet?WeakSet:Set;function lr(A){var i=A.ref;if(null!==i)if("function"==typeof i)try{i(null)}catch(i){xE(A,i)}else i.current=null}function or(A,i){switch(i.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&i.flags&&null!==A){var e=A.memoizedProps,t=A.memoizedState;i=(A=i.stateNode).getSnapshotBeforeUpdate(i.elementType===i.type?e:WC(i.type,e),t),A.__reactInternalSnapshotBeforeUpdate=i}return;case 3:return void(256&i.flags&&Jt(i.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(h(163))}function kr(A,i,e){switch(e.tag){case 0:case 11:case 15:case 22:if(null!==(i=null!==(i=e.updateQueue)?i.lastEffect:null)){A=i=i.next;do{if(3==(3&A.tag)){var t=A.create;A.destroy=t()}A=A.next}while(A!==i)}if(null!==(i=null!==(i=e.updateQueue)?i.lastEffect:null)){A=i=i.next;do{var C=A;t=C.next,0!=(4&(C=C.tag))&&0!=(1&C)&&(yE(e,A),IE(e,A)),A=t}while(A!==i)}return;case 1:return A=e.stateNode,4&e.flags&&(null===i?A.componentDidMount():(t=e.elementType===e.type?i.memoizedProps:WC(e.type,i.memoizedProps),A.componentDidUpdate(t,i.memoizedState,A.__reactInternalSnapshotBeforeUpdate))),void(null!==(i=e.updateQueue)&&ln(e,i,A));case 3:if(null!==(i=e.updateQueue)){if(A=null,null!==e.child)switch(e.child.tag){case 5:A=e.child.stateNode;break;case 1:A=e.child.stateNode}ln(e,i,A)}return;case 5:return A=e.stateNode,void(null===i&&4&e.flags&&Rt(e.type,e.memoizedProps)&&A.focus());case 6:case 4:case 12:return;case 13:return void(null===e.memoizedState&&(e=e.alternate,null!==e&&(e=e.memoizedState,null!==e&&(e=e.dehydrated,null!==e&&Fi(e)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(h(163))}function gr(A,i){for(var e=A;;){if(5===e.tag){var t=e.stateNode;if(i)"function"==typeof(t=t.style).setProperty?t.setProperty("display","none","important"):t.display="none";else{t=e.stateNode;var C=e.memoizedProps.style;C=null!=C&&C.hasOwnProperty("display")?C.display:null,t.style.display=uA("display",C)}}else if(6===e.tag)e.stateNode.nodeValue=i?"":e.memoizedProps;else if((23!==e.tag&&24!==e.tag||null===e.memoizedState||e===A)&&null!==e.child){e.child.return=e,e=e.child;continue}if(e===A)break;for(;null===e.sibling;){if(null===e.return||e.return===A)return;e=e.return}e.sibling.return=e.return,e=e.sibling}}function Dr(A,i){if(mC&&"function"==typeof mC.onCommitFiberUnmount)try{mC.onCommitFiberUnmount(jC,i)}catch(A){}switch(i.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(A=i.updateQueue)&&null!==(A=A.lastEffect)){var e=A=A.next;do{var t=e,C=t.destroy;if(t=t.tag,void 0!==C)if(0!=(4&t))yE(i,e);else{t=i;try{C()}catch(A){xE(t,A)}}e=e.next}while(e!==A)}break;case 1:if(lr(i),"function"==typeof(A=i.stateNode).componentWillUnmount)try{A.props=i.memoizedProps,A.state=i.memoizedState,A.componentWillUnmount()}catch(A){xE(i,A)}break;case 5:lr(i);break;case 4:jr(A,i)}}function ar(A){A.alternate=null,A.child=null,A.dependencies=null,A.firstEffect=null,A.lastEffect=null,A.memoizedProps=null,A.memoizedState=null,A.pendingProps=null,A.return=null,A.updateQueue=null}function sr(A){return 5===A.tag||3===A.tag||4===A.tag}function Br(A){A:{for(var i=A.return;null!==i;){if(sr(i))break A;i=i.return}throw Error(h(160))}var e=i;switch(i=e.stateNode,e.tag){case 5:var t=!1;break;case 3:case 4:i=i.containerInfo,t=!0;break;default:throw Error(h(161))}16&e.flags&&(jA(i,""),e.flags&=-17);A:i:for(e=A;;){for(;null===e.sibling;){if(null===e.return||sr(e.return)){e=null;break A}e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue i;if(null===e.child||4===e.tag)continue i;e.child.return=e,e=e.child}if(!(2&e.flags)){e=e.stateNode;break A}}t?function A(i,e,t){var C=i.tag,n=5===C||6===C;if(n)i=n?i.stateNode:i.stateNode.instance,e?8===t.nodeType?t.parentNode.insertBefore(i,e):t.insertBefore(i,e):(8===t.nodeType?(e=t.parentNode).insertBefore(i,t):(e=t).appendChild(i),null!==(t=t._reactRootContainer)&&void 0!==t||null!==e.onclick||(e.onclick=St));else if(4!==C&&null!==(i=i.child))for(A(i,e,t),i=i.sibling;null!==i;)A(i,e,t),i=i.sibling}(A,e,i):function A(i,e,t){var C=i.tag,n=5===C||6===C;if(n)i=n?i.stateNode:i.stateNode.instance,e?t.insertBefore(i,e):t.appendChild(i);else if(4!==C&&null!==(i=i.child))for(A(i,e,t),i=i.sibling;null!==i;)A(i,e,t),i=i.sibling}(A,e,i)}function jr(A,i){for(var e,t,C=i,n=!1;;){if(!n){n=C.return;A:for(;;){if(null===n)throw Error(h(160));switch(e=n.stateNode,n.tag){case 5:t=!1;break A;case 3:case 4:e=e.containerInfo,t=!0;break A}n=n.return}n=!0}if(5===C.tag||6===C.tag){A:for(var r=A,E=C,l=E;;)if(Dr(r,l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===E)break A;for(;null===l.sibling;){if(null===l.return||l.return===E)break A;l=l.return}l.sibling.return=l.return,l=l.sibling}t?(r=e,E=C.stateNode,8===r.nodeType?r.parentNode.removeChild(E):r.removeChild(E)):e.removeChild(C.stateNode)}else if(4===C.tag){if(null!==C.child){e=C.stateNode.containerInfo,t=!0,C.child.return=C,C=C.child;continue}}else if(Dr(A,C),null!==C.child){C.child.return=C,C=C.child;continue}if(C===i)break;for(;null===C.sibling;){if(null===C.return||C.return===i)return;4===(C=C.return).tag&&(n=!1)}C.sibling.return=C.return,C=C.sibling}}function mr(A,i){switch(i.tag){case 0:case 11:case 14:case 15:case 22:var e=i.updateQueue;if(null!==(e=null!==e?e.lastEffect:null)){var t=e=e.next;do{3==(3&t.tag)&&(A=t.destroy,t.destroy=void 0,void 0!==A&&A()),t=t.next}while(t!==e)}return;case 1:return;case 5:if(null!=(e=i.stateNode)){t=i.memoizedProps;var C=null!==A?A.memoizedProps:t;A=i.type;var n=i.updateQueue;if(i.updateQueue=null,null!==n){for(e[qt]=t,"input"===A&&"radio"===t.type&&null!=t.name&&iA(e,t),fA(A,C),i=fA(A,t),C=0;C<n.length;C+=2){var r=n[C],E=n[C+1];"style"===r?FA(e,E):"dangerouslySetInnerHTML"===r?BA(e,E):"children"===r?jA(e,E):u(e,r,E,i)}switch(A){case"input":eA(e,t);break;case"textarea":lA(e,t);break;case"select":A=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!t.multiple,null!=(n=t.value)?hA(e,!!t.multiple,n,!1):A!==!!t.multiple&&(null!=t.defaultValue?hA(e,!!t.multiple,t.defaultValue,!0):hA(e,!!t.multiple,t.multiple?[]:"",!1))}}}return;case 6:if(null===i.stateNode)throw Error(h(162));return void(i.stateNode.nodeValue=i.memoizedProps);case 3:return void((e=i.stateNode).hydrate&&(e.hydrate=!1,Fi(e.containerInfo)));case 12:return;case 13:return null!==i.memoizedState&&(Rr=RC(),gr(i.child,!0)),void cr(i);case 19:return void cr(i);case 17:return;case 23:case 24:return void gr(i,null!==i.memoizedState)}throw Error(h(163))}function cr(A){var i=A.updateQueue;if(null!==i){A.updateQueue=null;var e=A.stateNode;null===e&&(e=A.stateNode=new Er),i.forEach((function(i){var t=SE.bind(null,A,i);e.has(i)||(e.add(i),i.then(t,t))}))}}function ur(A,i){return null!==A&&(null===(A=A.memoizedState)||null!==A.dehydrated)&&(null!==(i=i.memoizedState)&&null===i.dehydrated)}var Fr=Math.ceil,Gr=F.ReactCurrentDispatcher,dr=F.ReactCurrentOwner,fr=0,pr=null,vr=null,Hr=0,Ir=0,yr=tC(0),br=0,Mr=null,xr=0,wr=0,Sr=0,Tr=0,Lr=null,Rr=0,Pr=1/0;function Or(){Pr=RC()+500}var Nr,Jr=null,Kr=!1,Ur=null,Vr=null,Wr=!1,zr=null,qr=90,Qr=[],Yr=[],Xr=null,Zr=0,_r=null,$r=-1,AE=0,iE=0,eE=null,tE=!1;function CE(){return 0!=(48&fr)?RC():-1!==$r?$r:$r=RC()}function nE(A){if(0==(2&(A=A.mode)))return 1;if(0==(4&A))return 99===PC()?1:2;if(0===AE&&(AE=xr),0!==VC.transition){0!==iE&&(iE=null!==Lr?Lr.pendingLanes:0),A=AE;var i=4186112&~iE;return 0===(i&=-i)&&(0===(i=(A=4186112&~A)&-A)&&(i=8192)),i}return A=PC(),0!=(4&fr)&&98===A?A=Oi(12,AE):A=Oi(A=function(A){switch(A){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(A),AE),A}function hE(A,i,e){if(50<Zr)throw Zr=0,_r=null,Error(h(185));if(null===(A=rE(A,i)))return null;Ki(A,i,e),A===pr&&(Sr|=i,4===br&&oE(A,Hr));var t=PC();1===i?0!=(8&fr)&&0==(48&fr)?kE(A):(EE(A,e),0===fr&&(Or(),KC())):(0==(4&fr)||98!==t&&99!==t||(null===Xr?Xr=new Set([A]):Xr.add(A)),EE(A,e)),Lr=A}function rE(A,i){A.lanes|=i;var e=A.alternate;for(null!==e&&(e.lanes|=i),e=A,A=A.return;null!==A;)A.childLanes|=i,null!==(e=A.alternate)&&(e.childLanes|=i),e=A,A=A.return;return 3===e.tag?e.stateNode:null}function EE(A,i){for(var e=A.callbackNode,t=A.suspendedLanes,C=A.pingedLanes,n=A.expirationTimes,r=A.pendingLanes;0<r;){var E=31-Ui(r),l=1<<E,o=n[E];if(-1===o){if(0==(l&t)||0!=(l&C)){o=i,Li(l);var k=Ti;n[E]=10<=k?o+250:6<=k?o+5e3:-1}}else o<=i&&(A.expiredLanes|=l);r&=~l}if(t=Ri(A,A===pr?Hr:0),i=Ti,0===t)null!==e&&(e!==MC&&FC(e),A.callbackNode=null,A.callbackPriority=0);else{if(null!==e){if(A.callbackPriority===i)return;e!==MC&&FC(e)}15===i?(e=kE.bind(null,A),null===wC?(wC=[e],SC=uC(vC,UC)):wC.push(e),e=MC):14===i?e=JC(99,kE.bind(null,A)):e=JC(e=function(A){switch(A){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(h(358,A))}}(i),lE.bind(null,A)),A.callbackPriority=i,A.callbackNode=e}}function lE(A){if($r=-1,iE=AE=0,0!=(48&fr))throw Error(h(327));var i=A.callbackNode;if(HE()&&A.callbackNode!==i)return null;var e=Ri(A,A===pr?Hr:0);if(0===e)return null;var t=e,C=fr;fr|=16;var n=mE();for(pr===A&&Hr===t||(Or(),BE(A,t));;)try{FE();break}catch(i){jE(A,i)}if(XC(),Gr.current=n,fr=C,null!==vr?t=0:(pr=null,Hr=0,t=br),0!=(xr&Sr))BE(A,0);else if(0!==t){if(2===t&&(fr|=64,A.hydrate&&(A.hydrate=!1,Jt(A.containerInfo)),0!==(e=Pi(A))&&(t=cE(A,e))),1===t)throw i=Mr,BE(A,0),oE(A,e),EE(A,RC()),i;switch(A.finishedWork=A.current.alternate,A.finishedLanes=e,t){case 0:case 1:throw Error(h(345));case 2:fE(A);break;case 3:if(oE(A,e),(62914560&e)===e&&10<(t=Rr+500-RC())){if(0!==Ri(A,0))break;if(((C=A.suspendedLanes)&e)!==e){CE(),A.pingedLanes|=A.suspendedLanes&C;break}A.timeoutHandle=Ot(fE.bind(null,A),t);break}fE(A);break;case 4:if(oE(A,e),(4186112&e)===e)break;for(t=A.eventTimes,C=-1;0<e;){var r=31-Ui(e);n=1<<r,(r=t[r])>C&&(C=r),e&=~n}if(e=C,10<(e=(120>(e=RC()-e)?120:480>e?480:1080>e?1080:1920>e?1920:3e3>e?3e3:4320>e?4320:1960*Fr(e/1960))-e)){A.timeoutHandle=Ot(fE.bind(null,A),e);break}fE(A);break;case 5:fE(A);break;default:throw Error(h(329))}}return EE(A,RC()),A.callbackNode===i?lE.bind(null,A):null}function oE(A,i){for(i&=~Tr,i&=~Sr,A.suspendedLanes|=i,A.pingedLanes&=~i,A=A.expirationTimes;0<i;){var e=31-Ui(i),t=1<<e;A[e]=-1,i&=~t}}function kE(A){if(0!=(48&fr))throw Error(h(327));if(HE(),A===pr&&0!=(A.expiredLanes&Hr)){var i=Hr,e=cE(A,i);0!=(xr&Sr)&&(e=cE(A,i=Ri(A,i)))}else e=cE(A,i=Ri(A,0));if(0!==A.tag&&2===e&&(fr|=64,A.hydrate&&(A.hydrate=!1,Jt(A.containerInfo)),0!==(i=Pi(A))&&(e=cE(A,i))),1===e)throw e=Mr,BE(A,0),oE(A,i),EE(A,RC()),e;return A.finishedWork=A.current.alternate,A.finishedLanes=i,fE(A),EE(A,RC()),null}function gE(A,i){var e=fr;fr|=1;try{return A(i)}finally{0===(fr=e)&&(Or(),KC())}}function DE(A,i){var e=fr;fr&=-2,fr|=8;try{return A(i)}finally{0===(fr=e)&&(Or(),KC())}}function aE(A,i){nC(yr,Ir),Ir|=i,xr|=i}function sE(){Ir=yr.current,CC(yr)}function BE(A,i){A.finishedWork=null,A.finishedLanes=0;var e=A.timeoutHandle;if(-1!==e&&(A.timeoutHandle=-1,Nt(e)),null!==vr)for(e=vr.return;null!==e;){var t=e;switch(t.tag){case 1:null!=(t=t.type.childContextTypes)&&gC();break;case 3:yn(),CC(EC),CC(rC),Vn();break;case 5:Mn(t);break;case 4:yn();break;case 13:case 19:CC(xn);break;case 10:ZC(t);break;case 23:case 24:sE()}e=e.return}pr=A,vr=PE(A.current,null),Hr=Ir=xr=i,br=0,Mr=null,Tr=Sr=wr=0}function jE(A,i){for(;;){var e=vr;try{if(XC(),Wn.current=vh,Zn){for(var t=Qn.memoizedState;null!==t;){var C=t.queue;null!==C&&(C.pending=null),t=t.next}Zn=!1}if(qn=0,Xn=Yn=Qn=null,_n=!1,dr.current=null,null===e||null===e.return){br=1,Mr=i,vr=null;break}A:{var n=A,h=e.return,r=e,E=i;if(i=Hr,r.flags|=2048,r.firstEffect=r.lastEffect=null,null!==E&&"object"==typeof E&&"function"==typeof E.then){var l=E;if(0==(2&r.mode)){var o=r.alternate;o?(r.updateQueue=o.updateQueue,r.memoizedState=o.memoizedState,r.lanes=o.lanes):(r.updateQueue=null,r.memoizedState=null)}var k=0!=(1&xn.current),g=h;do{var D;if(D=13===g.tag){var a=g.memoizedState;if(null!==a)D=null!==a.dehydrated;else{var s=g.memoizedProps;D=void 0!==s.fallback&&(!0!==s.unstable_avoidThisFallback||!k)}}if(D){var B=g.updateQueue;if(null===B){var j=new Set;j.add(l),g.updateQueue=j}else B.add(l);if(0==(2&g.mode)){if(g.flags|=64,r.flags|=16384,r.flags&=-2981,1===r.tag)if(null===r.alternate)r.tag=17;else{var m=nn(-1,1);m.tag=2,hn(r,m)}r.lanes|=1;break A}E=void 0,r=i;var c=n.pingCache;if(null===c?(c=n.pingCache=new nr,E=new Set,c.set(l,E)):void 0===(E=c.get(l))&&(E=new Set,c.set(l,E)),!E.has(r)){E.add(r);var u=wE.bind(null,n,l,r);l.then(u,u)}g.flags|=4096,g.lanes=i;break A}g=g.return}while(null!==g);E=Error((q(r.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==br&&(br=2),E=tr(E,r),g=h;do{switch(g.tag){case 3:n=E,g.flags|=4096,i&=-i,g.lanes|=i,rn(g,hr(0,n,i));break A;case 1:n=E;var F=g.type,G=g.stateNode;if(0==(64&g.flags)&&("function"==typeof F.getDerivedStateFromError||null!==G&&"function"==typeof G.componentDidCatch&&(null===Vr||!Vr.has(G)))){g.flags|=4096,i&=-i,g.lanes|=i,rn(g,rr(g,n,i));break A}}g=g.return}while(null!==g)}dE(e)}catch(A){i=A,vr===e&&null!==e&&(vr=e=e.return);continue}break}}function mE(){var A=Gr.current;return Gr.current=vh,null===A?vh:A}function cE(A,i){var e=fr;fr|=16;var t=mE();for(pr===A&&Hr===i||BE(A,i);;)try{uE();break}catch(i){jE(A,i)}if(XC(),fr=e,Gr.current=t,null!==vr)throw Error(h(261));return pr=null,Hr=0,br}function uE(){for(;null!==vr;)GE(vr)}function FE(){for(;null!==vr&&!GC();)GE(vr)}function GE(A){var i=Nr(A.alternate,A,Ir);A.memoizedProps=A.pendingProps,null===i?dE(A):vr=i,dr.current=null}function dE(A){var i=A;do{var e=i.alternate;if(A=i.return,0==(2048&i.flags)){if(null!==(e=ir(e,i,Ir)))return void(vr=e);if(24!==(e=i).tag&&23!==e.tag||null===e.memoizedState||0!=(1073741824&Ir)||0==(4&e.mode)){for(var t=0,C=e.child;null!==C;)t|=C.lanes|C.childLanes,C=C.sibling;e.childLanes=t}null!==A&&0==(2048&A.flags)&&(null===A.firstEffect&&(A.firstEffect=i.firstEffect),null!==i.lastEffect&&(null!==A.lastEffect&&(A.lastEffect.nextEffect=i.firstEffect),A.lastEffect=i.lastEffect),1<i.flags&&(null!==A.lastEffect?A.lastEffect.nextEffect=i:A.firstEffect=i,A.lastEffect=i))}else{if(null!==(e=er(i)))return e.flags&=2047,void(vr=e);null!==A&&(A.firstEffect=A.lastEffect=null,A.flags|=2048)}if(null!==(i=i.sibling))return void(vr=i);vr=i=A}while(null!==i);0===br&&(br=5)}function fE(A){var i=PC();return NC(99,pE.bind(null,A,i)),null}function pE(A,i){do{HE()}while(null!==zr);if(0!=(48&fr))throw Error(h(327));var e=A.finishedWork;if(null===e)return null;if(A.finishedWork=null,A.finishedLanes=0,e===A.current)throw Error(h(177));A.callbackNode=null;var t=e.lanes|e.childLanes,C=t,n=A.pendingLanes&~C;A.pendingLanes=C,A.suspendedLanes=0,A.pingedLanes=0,A.expiredLanes&=C,A.mutableReadLanes&=C,A.entangledLanes&=C,C=A.entanglements;for(var r=A.eventTimes,E=A.expirationTimes;0<n;){var l=31-Ui(n),o=1<<l;C[l]=0,r[l]=-1,E[l]=-1,n&=~o}if(null!==Xr&&0==(24&t)&&Xr.has(A)&&Xr.delete(A),A===pr&&(vr=pr=null,Hr=0),1<e.flags?null!==e.lastEffect?(e.lastEffect.nextEffect=e,t=e.firstEffect):t=e:t=e.firstEffect,null!==t){if(C=fr,fr|=32,dr.current=null,Tt=Qi,kt(r=ot())){if("selectionStart"in r)E={start:r.selectionStart,end:r.selectionEnd};else A:if(E=(E=r.ownerDocument)&&E.defaultView||window,(o=E.getSelection&&E.getSelection())&&0!==o.rangeCount){E=o.anchorNode,n=o.anchorOffset,l=o.focusNode,o=o.focusOffset;try{E.nodeType,l.nodeType}catch(A){E=null;break A}var k=0,g=-1,D=-1,a=0,s=0,B=r,j=null;i:for(;;){for(var m;B!==E||0!==n&&3!==B.nodeType||(g=k+n),B!==l||0!==o&&3!==B.nodeType||(D=k+o),3===B.nodeType&&(k+=B.nodeValue.length),null!==(m=B.firstChild);)j=B,B=m;for(;;){if(B===r)break i;if(j===E&&++a===n&&(g=k),j===l&&++s===o&&(D=k),null!==(m=B.nextSibling))break;j=(B=j).parentNode}B=m}E=-1===g||-1===D?null:{start:g,end:D}}else E=null;E=E||{start:0,end:0}}else E=null;Lt={focusedElem:r,selectionRange:E},Qi=!1,eE=null,tE=!1,Jr=t;do{try{vE()}catch(A){if(null===Jr)throw Error(h(330));xE(Jr,A),Jr=Jr.nextEffect}}while(null!==Jr);eE=null,Jr=t;do{try{for(r=A;null!==Jr;){var c=Jr.flags;if(16&c&&jA(Jr.stateNode,""),128&c){var u=Jr.alternate;if(null!==u){var F=u.ref;null!==F&&("function"==typeof F?F(null):F.current=null)}}switch(1038&c){case 2:Br(Jr),Jr.flags&=-3;break;case 6:Br(Jr),Jr.flags&=-3,mr(Jr.alternate,Jr);break;case 1024:Jr.flags&=-1025;break;case 1028:Jr.flags&=-1025,mr(Jr.alternate,Jr);break;case 4:mr(Jr.alternate,Jr);break;case 8:jr(r,E=Jr);var G=E.alternate;ar(E),null!==G&&ar(G)}Jr=Jr.nextEffect}}catch(A){if(null===Jr)throw Error(h(330));xE(Jr,A),Jr=Jr.nextEffect}}while(null!==Jr);if(F=Lt,u=ot(),c=F.focusedElem,r=F.selectionRange,u!==c&&c&&c.ownerDocument&&function A(i,e){return!(!i||!e)&&(i===e||(!i||3!==i.nodeType)&&(e&&3===e.nodeType?A(i,e.parentNode):"contains"in i?i.contains(e):!!i.compareDocumentPosition&&!!(16&i.compareDocumentPosition(e))))}(c.ownerDocument.documentElement,c)){null!==r&&kt(c)&&(u=r.start,void 0===(F=r.end)&&(F=u),"selectionStart"in c?(c.selectionStart=u,c.selectionEnd=Math.min(F,c.value.length)):(F=(u=c.ownerDocument||document)&&u.defaultView||window).getSelection&&(F=F.getSelection(),E=c.textContent.length,G=Math.min(r.start,E),r=void 0===r.end?G:Math.min(r.end,E),!F.extend&&G>r&&(E=r,r=G,G=E),E=lt(c,G),n=lt(c,r),E&&n&&(1!==F.rangeCount||F.anchorNode!==E.node||F.anchorOffset!==E.offset||F.focusNode!==n.node||F.focusOffset!==n.offset)&&((u=u.createRange()).setStart(E.node,E.offset),F.removeAllRanges(),G>r?(F.addRange(u),F.extend(n.node,n.offset)):(u.setEnd(n.node,n.offset),F.addRange(u))))),u=[];for(F=c;F=F.parentNode;)1===F.nodeType&&u.push({element:F,left:F.scrollLeft,top:F.scrollTop});for("function"==typeof c.focus&&c.focus(),c=0;c<u.length;c++)(F=u[c]).element.scrollLeft=F.left,F.element.scrollTop=F.top}Qi=!!Tt,Lt=Tt=null,A.current=e,Jr=t;do{try{for(c=A;null!==Jr;){var d=Jr.flags;if(36&d&&kr(c,Jr.alternate,Jr),128&d){u=void 0;var f=Jr.ref;if(null!==f){var p=Jr.stateNode;switch(Jr.tag){case 5:u=p;break;default:u=p}"function"==typeof f?f(u):f.current=u}}Jr=Jr.nextEffect}}catch(A){if(null===Jr)throw Error(h(330));xE(Jr,A),Jr=Jr.nextEffect}}while(null!==Jr);Jr=null,xC(),fr=C}else A.current=e;if(Wr)Wr=!1,zr=A,qr=i;else for(Jr=t;null!==Jr;)i=Jr.nextEffect,Jr.nextEffect=null,8&Jr.flags&&((d=Jr).sibling=null,d.stateNode=null),Jr=i;if(0===(t=A.pendingLanes)&&(Vr=null),1===t?A===_r?Zr++:(Zr=0,_r=A):Zr=0,e=e.stateNode,mC&&"function"==typeof mC.onCommitFiberRoot)try{mC.onCommitFiberRoot(jC,e,void 0,64==(64&e.current.flags))}catch(A){}if(EE(A,RC()),Kr)throw Kr=!1,A=Ur,Ur=null,A;return 0!=(8&fr)||KC(),null}function vE(){for(;null!==Jr;){var A=Jr.alternate;tE||null===eE||(0!=(8&Jr.flags)?$A(Jr,eE)&&(tE=!0):13===Jr.tag&&ur(A,Jr)&&$A(Jr,eE)&&(tE=!0));var i=Jr.flags;0!=(256&i)&&or(A,Jr),0==(512&i)||Wr||(Wr=!0,JC(97,(function(){return HE(),null}))),Jr=Jr.nextEffect}}function HE(){if(90!==qr){var A=97<qr?97:qr;return qr=90,NC(A,bE)}return!1}function IE(A,i){Qr.push(i,A),Wr||(Wr=!0,JC(97,(function(){return HE(),null})))}function yE(A,i){Yr.push(i,A),Wr||(Wr=!0,JC(97,(function(){return HE(),null})))}function bE(){if(null===zr)return!1;var A=zr;if(zr=null,0!=(48&fr))throw Error(h(331));var i=fr;fr|=32;var e=Yr;Yr=[];for(var t=0;t<e.length;t+=2){var C=e[t],n=e[t+1],r=C.destroy;if(C.destroy=void 0,"function"==typeof r)try{r()}catch(A){if(null===n)throw Error(h(330));xE(n,A)}}for(e=Qr,Qr=[],t=0;t<e.length;t+=2){C=e[t],n=e[t+1];try{var E=C.create;C.destroy=E()}catch(A){if(null===n)throw Error(h(330));xE(n,A)}}for(E=A.current.firstEffect;null!==E;)A=E.nextEffect,E.nextEffect=null,8&E.flags&&(E.sibling=null,E.stateNode=null),E=A;return fr=i,KC(),!0}function ME(A,i,e){hn(A,i=hr(0,i=tr(e,i),1)),i=CE(),null!==(A=rE(A,1))&&(Ki(A,1,i),EE(A,i))}function xE(A,i){if(3===A.tag)ME(A,A,i);else for(var e=A.return;null!==e;){if(3===e.tag){ME(e,A,i);break}if(1===e.tag){var t=e.stateNode;if("function"==typeof e.type.getDerivedStateFromError||"function"==typeof t.componentDidCatch&&(null===Vr||!Vr.has(t))){var C=rr(e,A=tr(i,A),1);if(hn(e,C),C=CE(),null!==(e=rE(e,1)))Ki(e,1,C),EE(e,C);else if("function"==typeof t.componentDidCatch&&(null===Vr||!Vr.has(t)))try{t.componentDidCatch(i,A)}catch(A){}break}}e=e.return}}function wE(A,i,e){var t=A.pingCache;null!==t&&t.delete(i),i=CE(),A.pingedLanes|=A.suspendedLanes&e,pr===A&&(Hr&e)===e&&(4===br||3===br&&(62914560&Hr)===Hr&&500>RC()-Rr?BE(A,0):Tr|=e),EE(A,i)}function SE(A,i){var e=A.stateNode;null!==e&&e.delete(i),0===(i=0)&&(0==(2&(i=A.mode))?i=1:0==(4&i)?i=99===PC()?1:2:(0===AE&&(AE=xr),0===(i=Ni(62914560&~AE))&&(i=4194304))),e=CE(),null!==(A=rE(A,i))&&(Ki(A,i,e),EE(A,e))}function TE(A,i,e,t){this.tag=A,this.key=e,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=i,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=t,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function LE(A,i,e,t){return new TE(A,i,e,t)}function RE(A){return!(!(A=A.prototype)||!A.isReactComponent)}function PE(A,i){var e=A.alternate;return null===e?((e=LE(A.tag,i,A.key,A.mode)).elementType=A.elementType,e.type=A.type,e.stateNode=A.stateNode,e.alternate=A,A.alternate=e):(e.pendingProps=i,e.type=A.type,e.flags=0,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null),e.childLanes=A.childLanes,e.lanes=A.lanes,e.child=A.child,e.memoizedProps=A.memoizedProps,e.memoizedState=A.memoizedState,e.updateQueue=A.updateQueue,i=A.dependencies,e.dependencies=null===i?null:{lanes:i.lanes,firstContext:i.firstContext},e.sibling=A.sibling,e.index=A.index,e.ref=A.ref,e}function OE(A,i,e,t,C,n){var r=2;if(t=A,"function"==typeof A)RE(A)&&(r=1);else if("string"==typeof A)r=5;else A:switch(A){case f:return NE(e.children,C,n,i);case L:r=8,C|=16;break;case p:r=8,C|=1;break;case v:return(A=LE(12,e,i,8|C)).elementType=v,A.type=v,A.lanes=n,A;case b:return(A=LE(13,e,i,C)).type=b,A.elementType=b,A.lanes=n,A;case M:return(A=LE(19,e,i,C)).elementType=M,A.lanes=n,A;case R:return JE(e,C,n,i);case P:return(A=LE(24,e,i,C)).elementType=P,A.lanes=n,A;default:if("object"==typeof A&&null!==A)switch(A.$$typeof){case H:r=10;break A;case I:r=9;break A;case y:r=11;break A;case x:r=14;break A;case w:r=16,t=null;break A;case S:r=22;break A}throw Error(h(130,null==A?A:typeof A,""))}return(i=LE(r,e,i,C)).elementType=A,i.type=t,i.lanes=n,i}function NE(A,i,e,t){return(A=LE(7,A,t,i)).lanes=e,A}function JE(A,i,e,t){return(A=LE(23,A,t,i)).elementType=R,A.lanes=e,A}function KE(A,i,e){return(A=LE(6,A,null,i)).lanes=e,A}function UE(A,i,e){return(i=LE(4,null!==A.children?A.children:[],A.key,i)).lanes=e,i.stateNode={containerInfo:A.containerInfo,pendingChildren:null,implementation:A.implementation},i}function VE(A,i,e){this.tag=i,this.containerInfo=A,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=e,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ji(0),this.expirationTimes=Ji(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ji(0),this.mutableSourceEagerHydrationData=null}function WE(A,i,e){var t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:d,key:null==t?null:""+t,children:A,containerInfo:i,implementation:e}}function zE(A,i,e,t){var C=i.current,n=CE(),r=nE(C);A:if(e){i:{if(YA(e=e._reactInternals)!==e||1!==e.tag)throw Error(h(170));var E=e;do{switch(E.tag){case 3:E=E.stateNode.context;break i;case 1:if(kC(E.type)){E=E.stateNode.__reactInternalMemoizedMergedChildContext;break i}}E=E.return}while(null!==E);throw Error(h(171))}if(1===e.tag){var l=e.type;if(kC(l)){e=aC(e,l,E);break A}}e=E}else e=hC;return null===i.context?i.context=e:i.pendingContext=e,(i=nn(n,r)).payload={element:A},null!==(t=void 0===t?null:t)&&(i.callback=t),hn(C,i),hE(C,r,n),r}function qE(A){if(!(A=A.current).child)return null;switch(A.child.tag){case 5:default:return A.child.stateNode}}function QE(A,i){if(null!==(A=A.memoizedState)&&null!==A.dehydrated){var e=A.retryLane;A.retryLane=0!==e&&e<i?e:i}}function YE(A,i){QE(A,i),(A=A.alternate)&&QE(A,i)}function XE(A,i,e){var t=null!=e&&null!=e.hydrationOptions&&e.hydrationOptions.mutableSources||null;if(e=new VE(A,i,null!=e&&!0===e.hydrate),i=LE(3,null,null,2===i?7:1===i?3:0),e.current=i,i.stateNode=e,tn(i),A[Qt]=e.current,vt(8===A.nodeType?A.parentNode:A),t)for(A=0;A<t.length;A++){var C=(i=t[A])._getVersion;C=C(i._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[i,C]:e.mutableSourceEagerHydrationData.push(i,C)}this._internalRoot=e}function ZE(A){return!(!A||1!==A.nodeType&&9!==A.nodeType&&11!==A.nodeType&&(8!==A.nodeType||" react-mount-point-unstable "!==A.nodeValue))}function _E(A,i,e,t,C){var n=e._reactRootContainer;if(n){var h=n._internalRoot;if("function"==typeof C){var r=C;C=function(){var A=qE(h);r.call(A)}}zE(i,h,A,C)}else{if(n=e._reactRootContainer=function(A,i){if(i||(i=!(!(i=A?9===A.nodeType?A.documentElement:A.firstChild:null)||1!==i.nodeType||!i.hasAttribute("data-reactroot"))),!i)for(var e;e=A.lastChild;)A.removeChild(e);return new XE(A,0,i?{hydrate:!0}:void 0)}(e,t),h=n._internalRoot,"function"==typeof C){var E=C;C=function(){var A=qE(h);E.call(A)}}DE((function(){zE(i,h,A,C)}))}return qE(h)}function $E(A,i){var e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ZE(i))throw Error(h(200));return WE(A,i,null,e)}Nr=function(A,i,e){var t=i.lanes;if(null!==A)if(A.memoizedProps!==i.pendingProps||EC.current)Mh=!0;else{if(0==(e&t)){switch(Mh=!1,i.tag){case 3:Jh(i),Kn();break;case 5:bn(i);break;case 1:kC(i.type)&&sC(i);break;case 4:In(i,i.stateNode.containerInfo);break;case 10:t=i.memoizedProps.value;var C=i.type._context;nC(zC,C._currentValue),C._currentValue=t;break;case 13:if(null!==i.memoizedState)return 0!=(e&i.child.childLanes)?zh(A,i,e):(nC(xn,1&xn.current),null!==(i=$h(A,i,e))?i.sibling:null);nC(xn,1&xn.current);break;case 19:if(t=0!=(e&i.childLanes),0!=(64&A.flags)){if(t)return _h(A,i,e);i.flags|=64}if(null!==(C=i.memoizedState)&&(C.rendering=null,C.tail=null,C.lastEffect=null),nC(xn,xn.current),t)break;return null;case 23:case 24:return i.lanes=0,Lh(A,i,e)}return $h(A,i,e)}Mh=0!=(16384&A.flags)}else Mh=!1;switch(i.lanes=0,i.tag){case 2:if(t=i.type,null!==A&&(A.alternate=null,i.alternate=null,i.flags|=2),A=i.pendingProps,C=oC(i,rC.current),$C(i,e),C=ih(null,i,t,A,C,e),i.flags|=1,"object"==typeof C&&null!==C&&"function"==typeof C.render&&void 0===C.$$typeof){if(i.tag=1,i.memoizedState=null,i.updateQueue=null,kC(t)){var n=!0;sC(i)}else n=!1;i.memoizedState=null!==C.state&&void 0!==C.state?C.state:null,tn(i);var r=t.getDerivedStateFromProps;"function"==typeof r&&kn(i,t,r,A),C.updater=gn,i.stateNode=C,C._reactInternals=i,Bn(i,t,A,e),i=Nh(null,i,t,!0,n,e)}else i.tag=0,xh(null,i,C,e),i=i.child;return i;case 16:C=i.elementType;A:{switch(null!==A&&(A.alternate=null,i.alternate=null,i.flags|=2),A=i.pendingProps,C=(n=C._init)(C._payload),i.type=C,n=i.tag=function(A){if("function"==typeof A)return RE(A)?1:0;if(null!=A){if((A=A.$$typeof)===y)return 11;if(A===x)return 14}return 2}(C),A=WC(C,A),n){case 0:i=Ph(null,i,C,A,e);break A;case 1:i=Oh(null,i,C,A,e);break A;case 11:i=wh(null,i,C,A,e);break A;case 14:i=Sh(null,i,C,WC(C.type,A),t,e);break A}throw Error(h(306,C,""))}return i;case 0:return t=i.type,C=i.pendingProps,Ph(A,i,t,C=i.elementType===t?C:WC(t,C),e);case 1:return t=i.type,C=i.pendingProps,Oh(A,i,t,C=i.elementType===t?C:WC(t,C),e);case 3:if(Jh(i),t=i.updateQueue,null===A||null===t)throw Error(h(282));if(t=i.pendingProps,C=null!==(C=i.memoizedState)?C.element:null,Cn(A,i),En(i,t,null,e),(t=i.memoizedState.element)===C)Kn(),i=$h(A,i,e);else{if((n=(C=i.stateNode).hydrate)&&(Tn=Kt(i.stateNode.containerInfo.firstChild),Sn=i,n=Ln=!0),n){if(null!=(A=C.mutableSourceEagerHydrationData))for(C=0;C<A.length;C+=2)(n=A[C])._workInProgressVersionPrimary=A[C+1],Un.push(n);for(e=Gn(i,null,t,e),i.child=e;e;)e.flags=-3&e.flags|1024,e=e.sibling}else xh(A,i,t,e),Kn();i=i.child}return i;case 5:return bn(i),null===A&&On(i),t=i.type,C=i.pendingProps,n=null!==A?A.memoizedProps:null,r=C.children,Pt(t,C)?r=null:null!==n&&Pt(t,n)&&(i.flags|=16),Rh(A,i),xh(A,i,r,e),i.child;case 6:return null===A&&On(i),null;case 13:return zh(A,i,e);case 4:return In(i,i.stateNode.containerInfo),t=i.pendingProps,null===A?i.child=Fn(i,null,t,e):xh(A,i,t,e),i.child;case 11:return t=i.type,C=i.pendingProps,wh(A,i,t,C=i.elementType===t?C:WC(t,C),e);case 7:return xh(A,i,i.pendingProps,e),i.child;case 8:case 12:return xh(A,i,i.pendingProps.children,e),i.child;case 10:A:{t=i.type._context,C=i.pendingProps,r=i.memoizedProps,n=C.value;var E=i.type._context;if(nC(zC,E._currentValue),E._currentValue=n,null!==r)if(E=r.value,0===(n=nt(E,n)?0:0|("function"==typeof t._calculateChangedBits?t._calculateChangedBits(E,n):1073741823))){if(r.children===C.children&&!EC.current){i=$h(A,i,e);break A}}else for(null!==(E=i.child)&&(E.return=i);null!==E;){var l=E.dependencies;if(null!==l){r=E.child;for(var o=l.firstContext;null!==o;){if(o.context===t&&0!=(o.observedBits&n)){1===E.tag&&((o=nn(-1,e&-e)).tag=2,hn(E,o)),E.lanes|=e,null!==(o=E.alternate)&&(o.lanes|=e),_C(E.return,e),l.lanes|=e;break}o=o.next}}else r=10===E.tag&&E.type===i.type?null:E.child;if(null!==r)r.return=E;else for(r=E;null!==r;){if(r===i){r=null;break}if(null!==(E=r.sibling)){E.return=r.return,r=E;break}r=r.return}E=r}xh(A,i,C.children,e),i=i.child}return i;case 9:return C=i.type,t=(n=i.pendingProps).children,$C(i,e),t=t(C=An(C,n.unstable_observedBits)),i.flags|=1,xh(A,i,t,e),i.child;case 14:return n=WC(C=i.type,i.pendingProps),Sh(A,i,C,n=WC(C.type,n),t,e);case 15:return Th(A,i,i.type,i.pendingProps,t,e);case 17:return t=i.type,C=i.pendingProps,C=i.elementType===t?C:WC(t,C),null!==A&&(A.alternate=null,i.alternate=null,i.flags|=2),i.tag=1,kC(t)?(A=!0,sC(i)):A=!1,$C(i,e),an(i,t,C),Bn(i,t,C,e),Nh(null,i,t,!0,A,e);case 19:return _h(A,i,e);case 23:case 24:return Lh(A,i,e)}throw Error(h(156,i.tag))},XE.prototype.render=function(A){zE(A,this._internalRoot,null,null)},XE.prototype.unmount=function(){var A=this._internalRoot,i=A.containerInfo;zE(null,A,null,(function(){i[Qt]=null}))},Ai=function(A){13===A.tag&&(hE(A,4,CE()),YE(A,4))},ii=function(A){13===A.tag&&(hE(A,67108864,CE()),YE(A,67108864))},ei=function(A){if(13===A.tag){var i=CE(),e=nE(A);hE(A,e,i),YE(A,e)}},ti=function(A,i){return i()},vA=function(A,i,e){switch(i){case"input":if(eA(A,e),i=e.name,"radio"===e.type&&null!=i){for(e=A;e.parentNode;)e=e.parentNode;for(e=e.querySelectorAll("input[name="+JSON.stringify(""+i)+'][type="radio"]'),i=0;i<e.length;i++){var t=e[i];if(t!==A&&t.form===A.form){var C=$t(t);if(!C)throw Error(h(90));Z(t),eA(t,C)}}}break;case"textarea":lA(A,e);break;case"select":null!=(i=e.value)&&hA(A,!!e.multiple,i,!1)}},xA=gE,wA=function(A,i,e,t,C){var n=fr;fr|=4;try{return NC(98,A.bind(null,i,e,t,C))}finally{0===(fr=n)&&(Or(),KC())}},SA=function(){0==(49&fr)&&(function(){if(null!==Xr){var A=Xr;Xr=null,A.forEach((function(A){A.expiredLanes|=24&A.pendingLanes,EE(A,RC())}))}KC()}(),HE())},TA=function(A,i){var e=fr;fr|=2;try{return A(i)}finally{0===(fr=e)&&(Or(),KC())}};var Al={Events:[Zt,_t,$t,bA,MA,HE,{current:!1}]},il={findFiberByHostInstance:Xt,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},el={bundleType:il.bundleType,version:il.version,rendererPackageName:il.rendererPackageName,rendererConfig:il.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:F.ReactCurrentDispatcher,findHostInstanceByFiber:function(A){return null===(A=_A(A))?null:A.stateNode},findFiberByHostInstance:il.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var tl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!tl.isDisabled&&tl.supportsFiber)try{jC=tl.inject(el),mC=tl}catch(A){}}i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Al,i.createPortal=$E,i.findDOMNode=function(A){if(null==A)return null;if(1===A.nodeType)return A;var i=A._reactInternals;if(void 0===i){if("function"==typeof A.render)throw Error(h(188));throw Error(h(268,Object.keys(A)))}return A=null===(A=_A(i))?null:A.stateNode},i.flushSync=function(A,i){var e=fr;if(0!=(48&e))return A(i);fr|=1;try{if(A)return NC(99,A.bind(null,i))}finally{fr=e,KC()}},i.hydrate=function(A,i,e){if(!ZE(i))throw Error(h(200));return _E(null,A,i,!0,e)},i.render=function(A,i,e){if(!ZE(i))throw Error(h(200));return _E(null,A,i,!1,e)},i.unmountComponentAtNode=function(A){if(!ZE(A))throw Error(h(40));return!!A._reactRootContainer&&(DE((function(){_E(null,null,A,!1,(function(){A._reactRootContainer=null,A[Qt]=null}))})),!0)},i.unstable_batchedUpdates=gE,i.unstable_createPortal=function(A,i){return $E(A,i,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},i.unstable_renderSubtreeIntoContainer=function(A,i,e,t){if(!ZE(e))throw Error(h(200));if(null==A||void 0===A._reactInternals)throw Error(h(38));return _E(A,i,e,!1,t)},i.version="17.0.1"},function(A,i,e){"use strict";A.exports=e(44)},function(A,i,e){"use strict";
/** @license React v0.20.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t,C,n,h;if("object"==typeof performance&&"function"==typeof performance.now){var r=performance;i.unstable_now=function(){return r.now()}}else{var E=Date,l=E.now();i.unstable_now=function(){return E.now()-l}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var o=null,k=null,g=function(){if(null!==o)try{var A=i.unstable_now();o(!0,A),o=null}catch(A){throw setTimeout(g,0),A}};t=function(A){null!==o?setTimeout(t,0,A):(o=A,setTimeout(g,0))},C=function(A,i){k=setTimeout(A,i)},n=function(){clearTimeout(k)},i.unstable_shouldYield=function(){return!1},h=i.unstable_forceFrameRate=function(){}}else{var D=window.setTimeout,a=window.clearTimeout;if("undefined"!=typeof console){var s=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof s&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var B=!1,j=null,m=-1,c=5,u=0;i.unstable_shouldYield=function(){return i.unstable_now()>=u},h=function(){},i.unstable_forceFrameRate=function(A){0>A||125<A?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):c=0<A?Math.floor(1e3/A):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==j){var A=i.unstable_now();u=A+c;try{j(!0,A)?G.postMessage(null):(B=!1,j=null)}catch(A){throw G.postMessage(null),A}}else B=!1},t=function(A){j=A,B||(B=!0,G.postMessage(null))},C=function(A,e){m=D((function(){A(i.unstable_now())}),e)},n=function(){a(m),m=-1}}function d(A,i){var e=A.length;A.push(i);A:for(;;){var t=e-1>>>1,C=A[t];if(!(void 0!==C&&0<v(C,i)))break A;A[t]=i,A[e]=C,e=t}}function f(A){return void 0===(A=A[0])?null:A}function p(A){var i=A[0];if(void 0!==i){var e=A.pop();if(e!==i){A[0]=e;A:for(var t=0,C=A.length;t<C;){var n=2*(t+1)-1,h=A[n],r=n+1,E=A[r];if(void 0!==h&&0>v(h,e))void 0!==E&&0>v(E,h)?(A[t]=E,A[r]=e,t=r):(A[t]=h,A[n]=e,t=n);else{if(!(void 0!==E&&0>v(E,e)))break A;A[t]=E,A[r]=e,t=r}}}return i}return null}function v(A,i){var e=A.sortIndex-i.sortIndex;return 0!==e?e:A.id-i.id}var H=[],I=[],y=1,b=null,M=3,x=!1,w=!1,S=!1;function T(A){for(var i=f(I);null!==i;){if(null===i.callback)p(I);else{if(!(i.startTime<=A))break;p(I),i.sortIndex=i.expirationTime,d(H,i)}i=f(I)}}function L(A){if(S=!1,T(A),!w)if(null!==f(H))w=!0,t(R);else{var i=f(I);null!==i&&C(L,i.startTime-A)}}function R(A,e){w=!1,S&&(S=!1,n()),x=!0;var t=M;try{for(T(e),b=f(H);null!==b&&(!(b.expirationTime>e)||A&&!i.unstable_shouldYield());){var h=b.callback;if("function"==typeof h){b.callback=null,M=b.priorityLevel;var r=h(b.expirationTime<=e);e=i.unstable_now(),"function"==typeof r?b.callback=r:b===f(H)&&p(H),T(e)}else p(H);b=f(H)}if(null!==b)var E=!0;else{var l=f(I);null!==l&&C(L,l.startTime-e),E=!1}return E}finally{b=null,M=t,x=!1}}var P=h;i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(A){A.callback=null},i.unstable_continueExecution=function(){w||x||(w=!0,t(R))},i.unstable_getCurrentPriorityLevel=function(){return M},i.unstable_getFirstCallbackNode=function(){return f(H)},i.unstable_next=function(A){switch(M){case 1:case 2:case 3:var i=3;break;default:i=M}var e=M;M=i;try{return A()}finally{M=e}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=P,i.unstable_runWithPriority=function(A,i){switch(A){case 1:case 2:case 3:case 4:case 5:break;default:A=3}var e=M;M=A;try{return i()}finally{M=e}},i.unstable_scheduleCallback=function(A,e,h){var r=i.unstable_now();switch("object"==typeof h&&null!==h?h="number"==typeof(h=h.delay)&&0<h?r+h:r:h=r,A){case 1:var E=-1;break;case 2:E=250;break;case 5:E=1073741823;break;case 4:E=1e4;break;default:E=5e3}return A={id:y++,callback:e,priorityLevel:A,startTime:h,expirationTime:E=h+E,sortIndex:-1},h>r?(A.sortIndex=h,d(I,A),null===f(H)&&A===f(I)&&(S?n():S=!0,C(L,h-r))):(A.sortIndex=E,d(H,A),w||x||(w=!0,t(R))),A},i.unstable_wrapCallback=function(A){var i=M;return function(){var e=M;M=i;try{return A.apply(this,arguments)}finally{M=e}}}},function(A,i,e){"use strict";var t=e(46);function C(){}function n(){}n.resetWarningCache=C,A.exports=function(){function A(A,i,e,C,n,h){if(h!==t){var r=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw r.name="Invariant Violation",r}}function i(){return A}A.isRequired=A;var e={array:A,bool:A,func:A,number:A,object:A,string:A,symbol:A,any:A,arrayOf:i,element:A,elementType:A,instanceOf:i,node:A,objectOf:i,oneOf:i,oneOfType:i,shape:i,exact:i,checkPropTypes:n,resetWarningCache:C};return e.PropTypes=e,e}},function(A,i,e){"use strict";A.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(A,i,e){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t="function"==typeof Symbol&&Symbol.for,C=t?Symbol.for("react.element"):60103,n=t?Symbol.for("react.portal"):60106,h=t?Symbol.for("react.fragment"):60107,r=t?Symbol.for("react.strict_mode"):60108,E=t?Symbol.for("react.profiler"):60114,l=t?Symbol.for("react.provider"):60109,o=t?Symbol.for("react.context"):60110,k=t?Symbol.for("react.async_mode"):60111,g=t?Symbol.for("react.concurrent_mode"):60111,D=t?Symbol.for("react.forward_ref"):60112,a=t?Symbol.for("react.suspense"):60113,s=t?Symbol.for("react.suspense_list"):60120,B=t?Symbol.for("react.memo"):60115,j=t?Symbol.for("react.lazy"):60116,m=t?Symbol.for("react.block"):60121,c=t?Symbol.for("react.fundamental"):60117,u=t?Symbol.for("react.responder"):60118,F=t?Symbol.for("react.scope"):60119;function G(A){if("object"==typeof A&&null!==A){var i=A.$$typeof;switch(i){case C:switch(A=A.type){case k:case g:case h:case E:case r:case a:return A;default:switch(A=A&&A.$$typeof){case o:case D:case j:case B:case l:return A;default:return i}}case n:return i}}}function d(A){return G(A)===g}i.AsyncMode=k,i.ConcurrentMode=g,i.ContextConsumer=o,i.ContextProvider=l,i.Element=C,i.ForwardRef=D,i.Fragment=h,i.Lazy=j,i.Memo=B,i.Portal=n,i.Profiler=E,i.StrictMode=r,i.Suspense=a,i.isAsyncMode=function(A){return d(A)||G(A)===k},i.isConcurrentMode=d,i.isContextConsumer=function(A){return G(A)===o},i.isContextProvider=function(A){return G(A)===l},i.isElement=function(A){return"object"==typeof A&&null!==A&&A.$$typeof===C},i.isForwardRef=function(A){return G(A)===D},i.isFragment=function(A){return G(A)===h},i.isLazy=function(A){return G(A)===j},i.isMemo=function(A){return G(A)===B},i.isPortal=function(A){return G(A)===n},i.isProfiler=function(A){return G(A)===E},i.isStrictMode=function(A){return G(A)===r},i.isSuspense=function(A){return G(A)===a},i.isValidElementType=function(A){return"string"==typeof A||"function"==typeof A||A===h||A===g||A===E||A===r||A===a||A===s||"object"==typeof A&&null!==A&&(A.$$typeof===j||A.$$typeof===B||A.$$typeof===l||A.$$typeof===o||A.$$typeof===D||A.$$typeof===c||A.$$typeof===u||A.$$typeof===F||A.$$typeof===m)},i.typeOf=G},function(A,i){A.exports=function(A){if(!A.webpackPolyfill){var i=Object.create(A);i.children||(i.children=[]),Object.defineProperty(i,"loaded",{enumerable:!0,get:function(){return i.l}}),Object.defineProperty(i,"id",{enumerable:!0,get:function(){return i.i}}),Object.defineProperty(i,"exports",{enumerable:!0}),i.webpackPolyfill=1}return i}},function(A,i,e){var t=e(21),C=e(7)("socket.io-client:url");A.exports=function(A,i){var e=A;i=i||"undefined"!=typeof location&&location,null==A&&(A=i.protocol+"//"+i.host);"string"==typeof A&&("/"===A.charAt(0)&&(A="/"===A.charAt(1)?i.protocol+A:i.host+A),/^(https?|wss?):\/\//.test(A)||(C("protocol-less url %s",A),A=void 0!==i?i.protocol+"//"+A:"https://"+A),C("parse %s",A),e=t(A));e.port||(/^(http|ws)$/.test(e.protocol)?e.port="80":/^(http|ws)s$/.test(e.protocol)&&(e.port="443"));e.path=e.path||"/";var n=-1!==e.host.indexOf(":")?"["+e.host+"]":e.host;return e.id=e.protocol+"://"+n+":"+e.port,e.href=e.protocol+"://"+n+(i&&i.port===e.port?"":":"+e.port),e}},function(A,i,e){function t(A){var e;function t(){if(t.enabled){var A=t,C=+new Date,n=C-(e||C);A.diff=n,A.prev=e,A.curr=C,e=C;for(var h=new Array(arguments.length),r=0;r<h.length;r++)h[r]=arguments[r];h[0]=i.coerce(h[0]),"string"!=typeof h[0]&&h.unshift("%O");var E=0;h[0]=h[0].replace(/%([a-zA-Z%])/g,(function(e,t){if("%%"===e)return e;E++;var C=i.formatters[t];if("function"==typeof C){var n=h[E];e=C.call(A,n),h.splice(E,1),E--}return e})),i.formatArgs.call(A,h);var l=t.log||i.log||console.log.bind(console);l.apply(A,h)}}return t.namespace=A,t.enabled=i.enabled(A),t.useColors=i.useColors(),t.color=function(A){var e,t=0;for(e in A)t=(t<<5)-t+A.charCodeAt(e),t|=0;return i.colors[Math.abs(t)%i.colors.length]}(A),t.destroy=C,"function"==typeof i.init&&i.init(t),i.instances.push(t),t}function C(){var A=i.instances.indexOf(this);return-1!==A&&(i.instances.splice(A,1),!0)}(i=A.exports=t.debug=t.default=t).coerce=function(A){return A instanceof Error?A.stack||A.message:A},i.disable=function(){i.enable("")},i.enable=function(A){var e;i.save(A),i.names=[],i.skips=[];var t=("string"==typeof A?A:"").split(/[\s,]+/),C=t.length;for(e=0;e<C;e++)t[e]&&("-"===(A=t[e].replace(/\*/g,".*?"))[0]?i.skips.push(new RegExp("^"+A.substr(1)+"$")):i.names.push(new RegExp("^"+A+"$")));for(e=0;e<i.instances.length;e++){var n=i.instances[e];n.enabled=i.enabled(n.namespace)}},i.enabled=function(A){if("*"===A[A.length-1])return!0;var e,t;for(e=0,t=i.skips.length;e<t;e++)if(i.skips[e].test(A))return!1;for(e=0,t=i.names.length;e<t;e++)if(i.names[e].test(A))return!0;return!1},i.humanize=e(23),i.instances=[],i.names=[],i.skips=[],i.formatters={}},function(A,i,e){var t=e(24),C=e(25),n=Object.prototype.toString,h="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===n.call(Blob),r="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===n.call(File);i.deconstructPacket=function(A){var i=[],e=A.data,n=A;return n.data=function A(i,e){if(!i)return i;if(C(i)){var n={_placeholder:!0,num:e.length};return e.push(i),n}if(t(i)){for(var h=new Array(i.length),r=0;r<i.length;r++)h[r]=A(i[r],e);return h}if("object"==typeof i&&!(i instanceof Date)){h={};for(var E in i)h[E]=A(i[E],e);return h}return i}(e,i),n.attachments=i.length,{packet:n,buffers:i}},i.reconstructPacket=function(A,i){return A.data=function A(i,e){if(!i)return i;if(i&&i._placeholder)return e[i.num];if(t(i))for(var C=0;C<i.length;C++)i[C]=A(i[C],e);else if("object"==typeof i)for(var n in i)i[n]=A(i[n],e);return i}(A.data,i),A.attachments=void 0,A},i.removeBlobs=function(A,i){var e=0,n=A;!function A(E,l,o){if(!E)return E;if(h&&E instanceof Blob||r&&E instanceof File){e++;var k=new FileReader;k.onload=function(){o?o[l]=this.result:n=this.result,--e||i(n)},k.readAsArrayBuffer(E)}else if(t(E))for(var g=0;g<E.length;g++)A(E[g],g,E);else if("object"==typeof E&&!C(E))for(var D in E)A(E[D],D,E)}(n),e||i(n)}},function(A,i,e){"use strict";i.byteLength=function(A){var i=l(A),e=i[0],t=i[1];return 3*(e+t)/4-t},i.toByteArray=function(A){var i,e,t=l(A),h=t[0],r=t[1],E=new n(function(A,i,e){return 3*(i+e)/4-e}(0,h,r)),o=0,k=r>0?h-4:h;for(e=0;e<k;e+=4)i=C[A.charCodeAt(e)]<<18|C[A.charCodeAt(e+1)]<<12|C[A.charCodeAt(e+2)]<<6|C[A.charCodeAt(e+3)],E[o++]=i>>16&255,E[o++]=i>>8&255,E[o++]=255&i;2===r&&(i=C[A.charCodeAt(e)]<<2|C[A.charCodeAt(e+1)]>>4,E[o++]=255&i);1===r&&(i=C[A.charCodeAt(e)]<<10|C[A.charCodeAt(e+1)]<<4|C[A.charCodeAt(e+2)]>>2,E[o++]=i>>8&255,E[o++]=255&i);return E},i.fromByteArray=function(A){for(var i,e=A.length,C=e%3,n=[],h=0,r=e-C;h<r;h+=16383)n.push(o(A,h,h+16383>r?r:h+16383));1===C?(i=A[e-1],n.push(t[i>>2]+t[i<<4&63]+"==")):2===C&&(i=(A[e-2]<<8)+A[e-1],n.push(t[i>>10]+t[i>>4&63]+t[i<<2&63]+"="));return n.join("")};for(var t=[],C=[],n="undefined"!=typeof Uint8Array?Uint8Array:Array,h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r=0,E=h.length;r<E;++r)t[r]=h[r],C[h.charCodeAt(r)]=r;function l(A){var i=A.length;if(i%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=A.indexOf("=");return-1===e&&(e=i),[e,e===i?0:4-e%4]}function o(A,i,e){for(var C,n,h=[],r=i;r<e;r+=3)C=(A[r]<<16&16711680)+(A[r+1]<<8&65280)+(255&A[r+2]),h.push(t[(n=C)>>18&63]+t[n>>12&63]+t[n>>6&63]+t[63&n]);return h.join("")}C["-".charCodeAt(0)]=62,C["_".charCodeAt(0)]=63},function(A,i){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
i.read=function(A,i,e,t,C){var n,h,r=8*C-t-1,E=(1<<r)-1,l=E>>1,o=-7,k=e?C-1:0,g=e?-1:1,D=A[i+k];for(k+=g,n=D&(1<<-o)-1,D>>=-o,o+=r;o>0;n=256*n+A[i+k],k+=g,o-=8);for(h=n&(1<<-o)-1,n>>=-o,o+=t;o>0;h=256*h+A[i+k],k+=g,o-=8);if(0===n)n=1-l;else{if(n===E)return h?NaN:1/0*(D?-1:1);h+=Math.pow(2,t),n-=l}return(D?-1:1)*h*Math.pow(2,n-t)},i.write=function(A,i,e,t,C,n){var h,r,E,l=8*n-C-1,o=(1<<l)-1,k=o>>1,g=23===C?Math.pow(2,-24)-Math.pow(2,-77):0,D=t?0:n-1,a=t?1:-1,s=i<0||0===i&&1/i<0?1:0;for(i=Math.abs(i),isNaN(i)||i===1/0?(r=isNaN(i)?1:0,h=o):(h=Math.floor(Math.log(i)/Math.LN2),i*(E=Math.pow(2,-h))<1&&(h--,E*=2),(i+=h+k>=1?g/E:g*Math.pow(2,1-k))*E>=2&&(h++,E/=2),h+k>=o?(r=0,h=o):h+k>=1?(r=(i*E-1)*Math.pow(2,C),h+=k):(r=i*Math.pow(2,k-1)*Math.pow(2,C),h=0));C>=8;A[e+D]=255&r,D+=a,r/=256,C-=8);for(h=h<<C|r,l+=C;l>0;A[e+D]=255&h,D+=a,h/=256,l-=8);A[e+D-a]|=128*s}},function(A,i){var e={}.toString;A.exports=Array.isArray||function(A){return"[object Array]"==e.call(A)}},function(A,i,e){A.exports=e(56),A.exports.parser=e(6)},function(A,i,e){var t=e(27),C=e(5),n=e(11)("engine.io-client:socket"),h=e(31),r=e(6),E=e(21),l=e(9);function o(A,i){if(!(this instanceof o))return new o(A,i);i=i||{},A&&"object"==typeof A&&(i=A,A=null),A?(A=E(A),i.hostname=A.host,i.secure="https"===A.protocol||"wss"===A.protocol,i.port=A.port,A.query&&(i.query=A.query)):i.host&&(i.hostname=E(i.host).host),this.secure=null!=i.secure?i.secure:"undefined"!=typeof location&&"https:"===location.protocol,i.hostname&&!i.port&&(i.port=this.secure?"443":"80"),this.agent=i.agent||!1,this.hostname=i.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=i.port||("undefined"!=typeof location&&location.port?location.port:this.secure?443:80),this.query=i.query||{},"string"==typeof this.query&&(this.query=l.decode(this.query)),this.upgrade=!1!==i.upgrade,this.path=(i.path||"/engine.io").replace(/\/$/,"")+"/",this.forceJSONP=!!i.forceJSONP,this.jsonp=!1!==i.jsonp,this.forceBase64=!!i.forceBase64,this.enablesXDR=!!i.enablesXDR,this.withCredentials=!1!==i.withCredentials,this.timestampParam=i.timestampParam||"t",this.timestampRequests=i.timestampRequests,this.transports=i.transports||["polling","websocket"],this.transportOptions=i.transportOptions||{},this.readyState="",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=i.policyPort||843,this.rememberUpgrade=i.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=i.onlyBinaryUpgrades,this.perMessageDeflate=!1!==i.perMessageDeflate&&(i.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=i.pfx||void 0,this.key=i.key||void 0,this.passphrase=i.passphrase||void 0,this.cert=i.cert||void 0,this.ca=i.ca||void 0,this.ciphers=i.ciphers||void 0,this.rejectUnauthorized=void 0===i.rejectUnauthorized||i.rejectUnauthorized,this.forceNode=!!i.forceNode,this.isReactNative="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase(),("undefined"==typeof self||this.isReactNative)&&(i.extraHeaders&&Object.keys(i.extraHeaders).length>0&&(this.extraHeaders=i.extraHeaders),i.localAddress&&(this.localAddress=i.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,this.open()}A.exports=o,o.priorWebsocketSuccess=!1,C(o.prototype),o.protocol=r.protocol,o.Socket=o,o.Transport=e(15),o.transports=e(27),o.parser=e(6),o.prototype.createTransport=function(A){n('creating transport "%s"',A);var i=function(A){var i={};for(var e in A)A.hasOwnProperty(e)&&(i[e]=A[e]);return i}(this.query);i.EIO=r.protocol,i.transport=A;var e=this.transportOptions[A]||{};return this.id&&(i.sid=this.id),new t[A]({query:i,socket:this,agent:e.agent||this.agent,hostname:e.hostname||this.hostname,port:e.port||this.port,secure:e.secure||this.secure,path:e.path||this.path,forceJSONP:e.forceJSONP||this.forceJSONP,jsonp:e.jsonp||this.jsonp,forceBase64:e.forceBase64||this.forceBase64,enablesXDR:e.enablesXDR||this.enablesXDR,withCredentials:e.withCredentials||this.withCredentials,timestampRequests:e.timestampRequests||this.timestampRequests,timestampParam:e.timestampParam||this.timestampParam,policyPort:e.policyPort||this.policyPort,pfx:e.pfx||this.pfx,key:e.key||this.key,passphrase:e.passphrase||this.passphrase,cert:e.cert||this.cert,ca:e.ca||this.ca,ciphers:e.ciphers||this.ciphers,rejectUnauthorized:e.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:e.perMessageDeflate||this.perMessageDeflate,extraHeaders:e.extraHeaders||this.extraHeaders,forceNode:e.forceNode||this.forceNode,localAddress:e.localAddress||this.localAddress,requestTimeout:e.requestTimeout||this.requestTimeout,protocols:e.protocols||void 0,isReactNative:this.isReactNative})},o.prototype.open=function(){var A;if(this.rememberUpgrade&&o.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))A="websocket";else{if(0===this.transports.length){var i=this;return void setTimeout((function(){i.emit("error","No transports available")}),0)}A=this.transports[0]}this.readyState="opening";try{A=this.createTransport(A)}catch(A){return this.transports.shift(),void this.open()}A.open(),this.setTransport(A)},o.prototype.setTransport=function(A){n("setting transport %s",A.name);var i=this;this.transport&&(n("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=A,A.on("drain",(function(){i.onDrain()})).on("packet",(function(A){i.onPacket(A)})).on("error",(function(A){i.onError(A)})).on("close",(function(){i.onClose("transport close")}))},o.prototype.probe=function(A){n('probing transport "%s"',A);var i=this.createTransport(A,{probe:1}),e=!1,t=this;function C(){if(t.onlyBinaryUpgrades){var C=!this.supportsBinary&&t.transport.supportsBinary;e=e||C}e||(n('probe transport "%s" opened',A),i.send([{type:"ping",data:"probe"}]),i.once("packet",(function(C){if(!e)if("pong"===C.type&&"probe"===C.data){if(n('probe transport "%s" pong',A),t.upgrading=!0,t.emit("upgrading",i),!i)return;o.priorWebsocketSuccess="websocket"===i.name,n('pausing current transport "%s"',t.transport.name),t.transport.pause((function(){e||"closed"!==t.readyState&&(n("changing transport and sending upgrade packet"),g(),t.setTransport(i),i.send([{type:"upgrade"}]),t.emit("upgrade",i),i=null,t.upgrading=!1,t.flush())}))}else{n('probe transport "%s" failed',A);var h=new Error("probe error");h.transport=i.name,t.emit("upgradeError",h)}})))}function h(){e||(e=!0,g(),i.close(),i=null)}function r(e){var C=new Error("probe error: "+e);C.transport=i.name,h(),n('probe transport "%s" failed because of error: %s',A,e),t.emit("upgradeError",C)}function E(){r("transport closed")}function l(){r("socket closed")}function k(A){i&&A.name!==i.name&&(n('"%s" works - aborting "%s"',A.name,i.name),h())}function g(){i.removeListener("open",C),i.removeListener("error",r),i.removeListener("close",E),t.removeListener("close",l),t.removeListener("upgrading",k)}o.priorWebsocketSuccess=!1,i.once("open",C),i.once("error",r),i.once("close",E),this.once("close",l),this.once("upgrading",k),i.open()},o.prototype.onOpen=function(){if(n("socket open"),this.readyState="open",o.priorWebsocketSuccess="websocket"===this.transport.name,this.emit("open"),this.flush(),"open"===this.readyState&&this.upgrade&&this.transport.pause){n("starting upgrade probes");for(var A=0,i=this.upgrades.length;A<i;A++)this.probe(this.upgrades[A])}},o.prototype.onPacket=function(A){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(n('socket receive: type "%s", data "%s"',A.type,A.data),this.emit("packet",A),this.emit("heartbeat"),A.type){case"open":this.onHandshake(JSON.parse(A.data));break;case"pong":this.setPing(),this.emit("pong");break;case"error":var i=new Error("server error");i.code=A.data,this.onError(i);break;case"message":this.emit("data",A.data),this.emit("message",A.data)}else n('packet received with socket readyState "%s"',this.readyState)},o.prototype.onHandshake=function(A){this.emit("handshake",A),this.id=A.sid,this.transport.query.sid=A.sid,this.upgrades=this.filterUpgrades(A.upgrades),this.pingInterval=A.pingInterval,this.pingTimeout=A.pingTimeout,this.onOpen(),"closed"!==this.readyState&&(this.setPing(),this.removeListener("heartbeat",this.onHeartbeat),this.on("heartbeat",this.onHeartbeat))},o.prototype.onHeartbeat=function(A){clearTimeout(this.pingTimeoutTimer);var i=this;i.pingTimeoutTimer=setTimeout((function(){"closed"!==i.readyState&&i.onClose("ping timeout")}),A||i.pingInterval+i.pingTimeout)},o.prototype.setPing=function(){var A=this;clearTimeout(A.pingIntervalTimer),A.pingIntervalTimer=setTimeout((function(){n("writing ping packet - expecting pong within %sms",A.pingTimeout),A.ping(),A.onHeartbeat(A.pingTimeout)}),A.pingInterval)},o.prototype.ping=function(){var A=this;this.sendPacket("ping",(function(){A.emit("ping")}))},o.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit("drain"):this.flush()},o.prototype.flush=function(){"closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(n("flushing %d packets in socket",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit("flush"))},o.prototype.write=o.prototype.send=function(A,i,e){return this.sendPacket("message",A,i,e),this},o.prototype.sendPacket=function(A,i,e,t){if("function"==typeof i&&(t=i,i=void 0),"function"==typeof e&&(t=e,e=null),"closing"!==this.readyState&&"closed"!==this.readyState){(e=e||{}).compress=!1!==e.compress;var C={type:A,data:i,options:e};this.emit("packetCreate",C),this.writeBuffer.push(C),t&&this.once("flush",t),this.flush()}},o.prototype.close=function(){if("opening"===this.readyState||"open"===this.readyState){this.readyState="closing";var A=this;this.writeBuffer.length?this.once("drain",(function(){this.upgrading?t():i()})):this.upgrading?t():i()}function i(){A.onClose("forced close"),n("socket closing - telling transport to close"),A.transport.close()}function e(){A.removeListener("upgrade",e),A.removeListener("upgradeError",e),i()}function t(){A.once("upgrade",e),A.once("upgradeError",e)}return this},o.prototype.onError=function(A){n("socket error %j",A),o.priorWebsocketSuccess=!1,this.emit("error",A),this.onClose("transport error",A)},o.prototype.onClose=function(A,i){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){n('socket close with reason: "%s"',A);clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),this.readyState="closed",this.id=null,this.emit("close",A,i),this.writeBuffer=[],this.prevBufferLen=0}},o.prototype.filterUpgrades=function(A){for(var i=[],e=0,t=A.length;e<t;e++)~h(this.transports,A[e])&&i.push(A[e]);return i}},function(A,i){try{A.exports="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(i){A.exports=!1}},function(A,i,e){var t=e(13),C=e(28),n=e(5),h=e(10),r=e(11)("engine.io-client:polling-xhr"),E=e(14);function l(){}function o(A){if(C.call(this,A),this.requestTimeout=A.requestTimeout,this.extraHeaders=A.extraHeaders,"undefined"!=typeof location){var i="https:"===location.protocol,e=location.port;e||(e=i?443:80),this.xd="undefined"!=typeof location&&A.hostname!==location.hostname||e!==A.port,this.xs=A.secure!==i}}function k(A){this.method=A.method||"GET",this.uri=A.uri,this.xd=!!A.xd,this.xs=!!A.xs,this.async=!1!==A.async,this.data=void 0!==A.data?A.data:null,this.agent=A.agent,this.isBinary=A.isBinary,this.supportsBinary=A.supportsBinary,this.enablesXDR=A.enablesXDR,this.withCredentials=A.withCredentials,this.requestTimeout=A.requestTimeout,this.pfx=A.pfx,this.key=A.key,this.passphrase=A.passphrase,this.cert=A.cert,this.ca=A.ca,this.ciphers=A.ciphers,this.rejectUnauthorized=A.rejectUnauthorized,this.extraHeaders=A.extraHeaders,this.create()}if(A.exports=o,A.exports.Request=k,h(o,C),o.prototype.supportsBinary=!0,o.prototype.request=function(A){return(A=A||{}).uri=this.uri(),A.xd=this.xd,A.xs=this.xs,A.agent=this.agent||!1,A.supportsBinary=this.supportsBinary,A.enablesXDR=this.enablesXDR,A.withCredentials=this.withCredentials,A.pfx=this.pfx,A.key=this.key,A.passphrase=this.passphrase,A.cert=this.cert,A.ca=this.ca,A.ciphers=this.ciphers,A.rejectUnauthorized=this.rejectUnauthorized,A.requestTimeout=this.requestTimeout,A.extraHeaders=this.extraHeaders,new k(A)},o.prototype.doWrite=function(A,i){var e="string"!=typeof A&&void 0!==A,t=this.request({method:"POST",data:A,isBinary:e}),C=this;t.on("success",i),t.on("error",(function(A){C.onError("xhr post error",A)})),this.sendXhr=t},o.prototype.doPoll=function(){r("xhr poll");var A=this.request(),i=this;A.on("data",(function(A){i.onData(A)})),A.on("error",(function(A){i.onError("xhr poll error",A)})),this.pollXhr=A},n(k.prototype),k.prototype.create=function(){var A={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};A.pfx=this.pfx,A.key=this.key,A.passphrase=this.passphrase,A.cert=this.cert,A.ca=this.ca,A.ciphers=this.ciphers,A.rejectUnauthorized=this.rejectUnauthorized;var i=this.xhr=new t(A),e=this;try{r("xhr open %s: %s",this.method,this.uri),i.open(this.method,this.uri,this.async);try{if(this.extraHeaders)for(var C in i.setDisableHeaderCheck&&i.setDisableHeaderCheck(!0),this.extraHeaders)this.extraHeaders.hasOwnProperty(C)&&i.setRequestHeader(C,this.extraHeaders[C])}catch(A){}if("POST"===this.method)try{this.isBinary?i.setRequestHeader("Content-type","application/octet-stream"):i.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(A){}try{i.setRequestHeader("Accept","*/*")}catch(A){}"withCredentials"in i&&(i.withCredentials=this.withCredentials),this.requestTimeout&&(i.timeout=this.requestTimeout),this.hasXDR()?(i.onload=function(){e.onLoad()},i.onerror=function(){e.onError(i.responseText)}):i.onreadystatechange=function(){if(2===i.readyState)try{var A=i.getResponseHeader("Content-Type");(e.supportsBinary&&"application/octet-stream"===A||"application/octet-stream; charset=UTF-8"===A)&&(i.responseType="arraybuffer")}catch(A){}4===i.readyState&&(200===i.status||1223===i.status?e.onLoad():setTimeout((function(){e.onError("number"==typeof i.status?i.status:0)}),0))},r("xhr data %s",this.data),i.send(this.data)}catch(A){return void setTimeout((function(){e.onError(A)}),0)}"undefined"!=typeof document&&(this.index=k.requestsCount++,k.requests[this.index]=this)},k.prototype.onSuccess=function(){this.emit("success"),this.cleanup()},k.prototype.onData=function(A){this.emit("data",A),this.onSuccess()},k.prototype.onError=function(A){this.emit("error",A),this.cleanup(!0)},k.prototype.cleanup=function(A){if(void 0!==this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=l:this.xhr.onreadystatechange=l,A)try{this.xhr.abort()}catch(A){}"undefined"!=typeof document&&delete k.requests[this.index],this.xhr=null}},k.prototype.onLoad=function(){var A;try{var i;try{i=this.xhr.getResponseHeader("Content-Type")}catch(A){}A=("application/octet-stream"===i||"application/octet-stream; charset=UTF-8"===i)&&this.xhr.response||this.xhr.responseText}catch(A){this.onError(A)}null!=A&&this.onData(A)},k.prototype.hasXDR=function(){return"undefined"!=typeof XDomainRequest&&!this.xs&&this.enablesXDR},k.prototype.abort=function(){this.cleanup()},k.requestsCount=0,k.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",g);else if("function"==typeof addEventListener){addEventListener("onpagehide"in E?"pagehide":"unload",g,!1)}function g(){for(var A in k.requests)k.requests.hasOwnProperty(A)&&k.requests[A].abort()}},function(A,i){A.exports=Object.keys||function(A){var i=[],e=Object.prototype.hasOwnProperty;for(var t in A)e.call(A,t)&&i.push(t);return i}},function(A,i){var e={}.toString;A.exports=Array.isArray||function(A){return"[object Array]"==e.call(A)}},function(A,i){A.exports=function(A,i,e){var t=A.byteLength;if(i=i||0,e=e||t,A.slice)return A.slice(i,e);if(i<0&&(i+=t),e<0&&(e+=t),e>t&&(e=t),i>=t||i>=e||0===t)return new ArrayBuffer(0);for(var C=new Uint8Array(A),n=new Uint8Array(e-i),h=i,r=0;h<e;h++,r++)n[r]=C[h];return n.buffer}},function(A,i){function e(){}A.exports=function(A,i,t){var C=!1;return t=t||e,n.count=A,0===A?i():n;function n(A,e){if(n.count<=0)throw new Error("after called too many times");--n.count,A?(C=!0,i(A),i=t):0!==n.count||C||i(null,e)}}},function(A,i){
/*! https://mths.be/utf8js v2.1.2 by @mathias */
var e,t,C,n=String.fromCharCode;function h(A){for(var i,e,t=[],C=0,n=A.length;C<n;)(i=A.charCodeAt(C++))>=55296&&i<=56319&&C<n?56320==(64512&(e=A.charCodeAt(C++)))?t.push(((1023&i)<<10)+(1023&e)+65536):(t.push(i),C--):t.push(i);return t}function r(A,i){if(A>=55296&&A<=57343){if(i)throw Error("Lone surrogate U+"+A.toString(16).toUpperCase()+" is not a scalar value");return!1}return!0}function E(A,i){return n(A>>i&63|128)}function l(A,i){if(0==(4294967168&A))return n(A);var e="";return 0==(4294965248&A)?e=n(A>>6&31|192):0==(4294901760&A)?(r(A,i)||(A=65533),e=n(A>>12&15|224),e+=E(A,6)):0==(4292870144&A)&&(e=n(A>>18&7|240),e+=E(A,12),e+=E(A,6)),e+=n(63&A|128)}function o(){if(C>=t)throw Error("Invalid byte index");var A=255&e[C];if(C++,128==(192&A))return 63&A;throw Error("Invalid continuation byte")}function k(A){var i,n;if(C>t)throw Error("Invalid byte index");if(C==t)return!1;if(i=255&e[C],C++,0==(128&i))return i;if(192==(224&i)){if((n=(31&i)<<6|o())>=128)return n;throw Error("Invalid continuation byte")}if(224==(240&i)){if((n=(15&i)<<12|o()<<6|o())>=2048)return r(n,A)?n:65533;throw Error("Invalid continuation byte")}if(240==(248&i)&&(n=(7&i)<<18|o()<<12|o()<<6|o())>=65536&&n<=1114111)return n;throw Error("Invalid UTF-8 detected")}A.exports={version:"2.1.2",encode:function(A,i){for(var e=!1!==(i=i||{}).strict,t=h(A),C=t.length,n=-1,r="";++n<C;)r+=l(t[n],e);return r},decode:function(A,i){var r=!1!==(i=i||{}).strict;e=h(A),t=e.length,C=0;for(var E,l=[];!1!==(E=k(r));)l.push(E);return function(A){for(var i,e=A.length,t=-1,C="";++t<e;)(i=A[t])>65535&&(C+=n((i-=65536)>>>10&1023|55296),i=56320|1023&i),C+=n(i);return C}(l)}}},function(A,i){!function(A){"use strict";i.encode=function(i){var e,t=new Uint8Array(i),C=t.length,n="";for(e=0;e<C;e+=3)n+=A[t[e]>>2],n+=A[(3&t[e])<<4|t[e+1]>>4],n+=A[(15&t[e+1])<<2|t[e+2]>>6],n+=A[63&t[e+2]];return C%3==2?n=n.substring(0,n.length-1)+"=":C%3==1&&(n=n.substring(0,n.length-2)+"=="),n},i.decode=function(i){var e,t,C,n,h,r=.75*i.length,E=i.length,l=0;"="===i[i.length-1]&&(r--,"="===i[i.length-2]&&r--);var o=new ArrayBuffer(r),k=new Uint8Array(o);for(e=0;e<E;e+=4)t=A.indexOf(i[e]),C=A.indexOf(i[e+1]),n=A.indexOf(i[e+2]),h=A.indexOf(i[e+3]),k[l++]=t<<2|C>>4,k[l++]=(15&C)<<4|n>>2,k[l++]=(3&n)<<6|63&h;return o}}("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")},function(A,i){var e=void 0!==e?e:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder&&MozBlobBuilder,t=function(){try{return 2===new Blob(["hi"]).size}catch(A){return!1}}(),C=t&&function(){try{return 2===new Blob([new Uint8Array([1,2])]).size}catch(A){return!1}}(),n=e&&e.prototype.append&&e.prototype.getBlob;function h(A){return A.map((function(A){if(A.buffer instanceof ArrayBuffer){var i=A.buffer;if(A.byteLength!==i.byteLength){var e=new Uint8Array(A.byteLength);e.set(new Uint8Array(i,A.byteOffset,A.byteLength)),i=e.buffer}return i}return A}))}function r(A,i){i=i||{};var t=new e;return h(A).forEach((function(A){t.append(A)})),i.type?t.getBlob(i.type):t.getBlob()}function E(A,i){return new Blob(h(A),i||{})}"undefined"!=typeof Blob&&(r.prototype=Blob.prototype,E.prototype=Blob.prototype),A.exports=t?C?Blob:E:n?r:void 0},function(A,i,e){function t(A){var e;function t(){if(t.enabled){var A=t,C=+new Date,n=C-(e||C);A.diff=n,A.prev=e,A.curr=C,e=C;for(var h=new Array(arguments.length),r=0;r<h.length;r++)h[r]=arguments[r];h[0]=i.coerce(h[0]),"string"!=typeof h[0]&&h.unshift("%O");var E=0;h[0]=h[0].replace(/%([a-zA-Z%])/g,(function(e,t){if("%%"===e)return e;E++;var C=i.formatters[t];if("function"==typeof C){var n=h[E];e=C.call(A,n),h.splice(E,1),E--}return e})),i.formatArgs.call(A,h);var l=t.log||i.log||console.log.bind(console);l.apply(A,h)}}return t.namespace=A,t.enabled=i.enabled(A),t.useColors=i.useColors(),t.color=function(A){var e,t=0;for(e in A)t=(t<<5)-t+A.charCodeAt(e),t|=0;return i.colors[Math.abs(t)%i.colors.length]}(A),t.destroy=C,"function"==typeof i.init&&i.init(t),i.instances.push(t),t}function C(){var A=i.instances.indexOf(this);return-1!==A&&(i.instances.splice(A,1),!0)}(i=A.exports=t.debug=t.default=t).coerce=function(A){return A instanceof Error?A.stack||A.message:A},i.disable=function(){i.enable("")},i.enable=function(A){var e;i.save(A),i.names=[],i.skips=[];var t=("string"==typeof A?A:"").split(/[\s,]+/),C=t.length;for(e=0;e<C;e++)t[e]&&("-"===(A=t[e].replace(/\*/g,".*?"))[0]?i.skips.push(new RegExp("^"+A.substr(1)+"$")):i.names.push(new RegExp("^"+A+"$")));for(e=0;e<i.instances.length;e++){var n=i.instances[e];n.enabled=i.enabled(n.namespace)}},i.enabled=function(A){if("*"===A[A.length-1])return!0;var e,t;for(e=0,t=i.skips.length;e<t;e++)if(i.skips[e].test(A))return!1;for(e=0,t=i.names.length;e<t;e++)if(i.names[e].test(A))return!0;return!1},i.humanize=e(23),i.instances=[],i.names=[],i.skips=[],i.formatters={}},function(A,i,e){var t=e(28),C=e(10),n=e(14);A.exports=o;var h,r=/\n/g,E=/\\n/g;function l(){}function o(A){t.call(this,A),this.query=this.query||{},h||(h=n.___eio=n.___eio||[]),this.index=h.length;var i=this;h.push((function(A){i.onData(A)})),this.query.j=this.index,"function"==typeof addEventListener&&addEventListener("beforeunload",(function(){i.script&&(i.script.onerror=l)}),!1)}C(o,t),o.prototype.supportsBinary=!1,o.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),t.prototype.doClose.call(this)},o.prototype.doPoll=function(){var A=this,i=document.createElement("script");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),i.async=!0,i.src=this.uri(),i.onerror=function(i){A.onError("jsonp poll error",i)};var e=document.getElementsByTagName("script")[0];e?e.parentNode.insertBefore(i,e):(document.head||document.body).appendChild(i),this.script=i,"undefined"!=typeof navigator&&/gecko/i.test(navigator.userAgent)&&setTimeout((function(){var A=document.createElement("iframe");document.body.appendChild(A),document.body.removeChild(A)}),100)},o.prototype.doWrite=function(A,i){var e=this;if(!this.form){var t,C=document.createElement("form"),n=document.createElement("textarea"),h=this.iframeId="eio_iframe_"+this.index;C.className="socketio",C.style.position="absolute",C.style.top="-1000px",C.style.left="-1000px",C.target=h,C.method="POST",C.setAttribute("accept-charset","utf-8"),n.name="d",C.appendChild(n),document.body.appendChild(C),this.form=C,this.area=n}function l(){o(),i()}function o(){if(e.iframe)try{e.form.removeChild(e.iframe)}catch(A){e.onError("jsonp polling iframe removal error",A)}try{var A='<iframe src="javascript:0" name="'+e.iframeId+'">';t=document.createElement(A)}catch(A){(t=document.createElement("iframe")).name=e.iframeId,t.src="javascript:0"}t.id=e.iframeId,e.form.appendChild(t),e.iframe=t}this.form.action=this.uri(),o(),A=A.replace(E,"\\\n"),this.area.value=A.replace(r,"\\n");try{this.form.submit()}catch(A){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){"complete"===e.iframe.readyState&&l()}:this.iframe.onload=l}},function(A,i,e){(function(i){var t,C,n=e(15),h=e(6),r=e(9),E=e(10),l=e(30),o=e(11)("engine.io-client:websocket");if("undefined"!=typeof WebSocket?t=WebSocket:"undefined"!=typeof self&&(t=self.WebSocket||self.MozWebSocket),"undefined"==typeof window)try{C=e(69)}catch(A){}var k=t||C;function g(A){A&&A.forceBase64&&(this.supportsBinary=!1),this.perMessageDeflate=A.perMessageDeflate,this.usingBrowserWebSocket=t&&!A.forceNode,this.protocols=A.protocols,this.usingBrowserWebSocket||(k=C),n.call(this,A)}A.exports=g,E(g,n),g.prototype.name="websocket",g.prototype.supportsBinary=!0,g.prototype.doOpen=function(){if(this.check()){var A=this.uri(),i=this.protocols,e={};this.isReactNative||(e.agent=this.agent,e.perMessageDeflate=this.perMessageDeflate,e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized),this.extraHeaders&&(e.headers=this.extraHeaders),this.localAddress&&(e.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket&&!this.isReactNative?i?new k(A,i):new k(A):new k(A,i,e)}catch(A){return this.emit("error",A)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType="nodebuffer"):this.ws.binaryType="arraybuffer",this.addEventListeners()}},g.prototype.addEventListeners=function(){var A=this;this.ws.onopen=function(){A.onOpen()},this.ws.onclose=function(){A.onClose()},this.ws.onmessage=function(i){A.onData(i.data)},this.ws.onerror=function(i){A.onError("websocket error",i)}},g.prototype.write=function(A){var e=this;this.writable=!1;for(var t=A.length,C=0,n=t;C<n;C++)!function(A){h.encodePacket(A,e.supportsBinary,(function(C){if(!e.usingBrowserWebSocket){var n={};if(A.options&&(n.compress=A.options.compress),e.perMessageDeflate)("string"==typeof C?i.byteLength(C):C.length)<e.perMessageDeflate.threshold&&(n.compress=!1)}try{e.usingBrowserWebSocket?e.ws.send(C):e.ws.send(C,n)}catch(A){o("websocket closed before onclose event")}--t||r()}))}(A[C]);function r(){e.emit("flush"),setTimeout((function(){e.writable=!0,e.emit("drain")}),0)}},g.prototype.onClose=function(){n.prototype.onClose.call(this)},g.prototype.doClose=function(){void 0!==this.ws&&this.ws.close()},g.prototype.uri=function(){var A=this.query||{},i=this.secure?"wss":"ws",e="";return this.port&&("wss"===i&&443!==Number(this.port)||"ws"===i&&80!==Number(this.port))&&(e=":"+this.port),this.timestampRequests&&(A[this.timestampParam]=l()),this.supportsBinary||(A.b64=1),(A=r.encode(A)).length&&(A="?"+A),i+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+e+this.path+A},g.prototype.check=function(){return!(!k||"__initialize"in k&&this.name===g.prototype.name)}}).call(this,e(8).Buffer)},function(A,i){},function(A,i){A.exports=function(A,i){for(var e=[],t=(i=i||0)||0;t<A.length;t++)e[t-i]=A[t];return e}},function(A,i){function e(A){A=A||{},this.ms=A.min||100,this.max=A.max||1e4,this.factor=A.factor||2,this.jitter=A.jitter>0&&A.jitter<=1?A.jitter:0,this.attempts=0}A.exports=e,e.prototype.duration=function(){var A=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var i=Math.random(),e=Math.floor(i*this.jitter*A);A=0==(1&Math.floor(10*i))?A-e:A+e}return 0|Math.min(A,this.max)},e.prototype.reset=function(){this.attempts=0},e.prototype.setMin=function(A){this.ms=A},e.prototype.setMax=function(A){this.max=A},e.prototype.setJitter=function(A){this.jitter=A}},function(A,i,e){var t=e(73);"string"==typeof t&&(t=[[A.i,t,""]]);var C={hmr:!0,transform:void 0,insertInto:void 0};e(75)(t,C);t.locals&&(A.exports=t.locals)},function(A,i,e){(i=e(74)(!1)).push([A.i,"body,\r\ninput,\r\nbutton {\r\n    font-size: 1.6vw;\r\n    margin: 0;\r\n    font-family: Sans-Serif;\r\n}\r\n@media(max-width: 1024px) {\r\n    body,\r\n    input,\r\n    button {\r\n        font-size: 1em;\r\n    }\r\n}\r\ninput:focus,\r\nbutton:focus {\r\n    outline:0;\r\n}\r\ninput[type=text] {\r\n    border: none;\r\n    border-bottom: solid 2px #4c4c4f;\r\n    font-size: 1em;\r\n    background-color: transparent;\r\n    color: #fff;\r\n    padding: .4em 0;\r\n    margin: 2ex 0;\r\n    width: 100%;\r\n    max-width: 18em;\r\n    display: block;\r\n}\r\n.home {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.call-exit-button,\r\n.hangup-button,\r\n.audio-button-true,\r\n.audio-button-false,\r\n.video-button-true,\r\n.video-button-false,\r\n.fullscreen-button {\r\n    width: 3em;\r\n    height: 3em;\r\n    border-radius: 50%;\r\n    background: rgba(44, 44, 44, 0.6);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 0;\r\n    box-shadow: .2ex .2ex 1.5em #444;\r\n    transition: all .2s ease-out;\r\n    margin: 0 .4em;\r\n    cursor: pointer;\r\n}\r\n.call-exit-button:hover,\r\n.hangup-button:hover,\r\n.audio-button-true:hover,\r\n.audio-button-false:hover,\r\n.video-button-true:hover,\r\n.video-button-false:hover,\r\n.fullscreen-button:hover {\r\n    box-shadow: .4ex .4ex 3em #666;\r\n    background: rgba(64, 124, 247, 1)\r\n}\r\n.you-left,\r\n.remote-left,\r\n.hangup-button,\r\n.audio-button-true .on,\r\n.video-button-true .on,\r\n.video-button-false .off,\r\n.fullscreen-button .on,\r\n.room-occupied {\r\n\tdisplay: none;\r\n}\r\n:-webkit-full-screen .fullscreen-button .on {\r\n    display: block;\r\n}\r\n:-moz-full-screen .fullscreen-button .on {\r\n    display: block;\r\n}\r\n:-ms-fullscreen .fullscreen-button .on {\r\n    display: block;\r\n}\r\n:fullscreen .fullscreen-button .on { /* spec */\r\n    display: block;\r\n}\r\n:-webkit-full-screen .fullscreen-button .off {\r\n    display: none;\r\n}\r\n:-moz-full-screen .fullscreen-button .off {\r\n    display: none;\r\n}\r\n:-ms-fullscreen .fullscreen-button .off {\r\n    display: none;\r\n}\r\n:fullscreen .fullscreen-button .off { /* spec */\r\n    display: none;\r\n}\r\n/* deeper elements */\r\n:-webkit-full-screen video {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.guest-hangup + .auth .you-left {\r\n    display: inline;\r\n}\r\n.full .room-occupied,\r\n.host-hangup + .auth .remote-left,\r\n.recent-room {\r\n\tdisplay: block;\r\n}\r\n.recent-room {\r\n    color: #4285F4;\r\n    margin: 1ex 1em;\r\n}\r\n.remote-video {\r\n    display: block;\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n    /* JEELIZ: replace object-fit cover by contain */\r\n    object-fit: contain;\r\n}\r\n.local-video {\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n    /* JEELIZ: replace object-fit cover by contain */\r\n    object-fit: contain;\r\n    transition: all .3s;\r\n}\r\n.established .local-video {\r\n    /* JEELIZ: hide user own weboji since we already display video feedback*/\r\n    display: none;\r\n    margin: 10px;\r\n    max-height: 17%;\r\n    max-width: 17%;\r\n    height: auto;\r\n    width: auto;\r\n}\r\n.media-bridge,\r\n.local-video,\r\n.remote-video {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n.auth {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center\r\n}\r\n.primary-button {\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    background-color: #4285F4;\r\n    border: none;\r\n    color: white;\r\n    font-size: 0.8em;\r\n    margin: 0 5px 20px 5px;\r\n    width: 8em;\r\n    line-height: 3ex;\r\n    padding: 1ex 0.7em;\r\n    text-align: center;\r\n    -webkit-box-shadow: 1px 1px 5px 0 rgba(0,0,0,.5);\r\n    -moz-box-shadow: 1px 1px 5px 0 rgba(0,0,0,.5);\r\n    box-shadow: 1px 1px 5px 0 rgba(0,0,0,.5);\r\n}\r\n.media-controls {\r\n    display: flex;\r\n    margin: 2ex 0;\r\n    justify-content: center;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n.svg {\r\n    width: 1.4em;\r\n}\r\n.room-occupied,\r\n.request-access,\r\n.waiting,\r\n.request-access,\r\n.grant-access,\r\n.waiting {\r\n    overflow: hidden;\r\n    padding: 0 1em;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    background: rgba(0, 0, 0, .8);\r\n    /* Initially we don't want any height, and we want the contents to be hidden */\r\n    max-height: 0;\r\n    transition: max-height .3s ease;\r\n}\r\n.full + .auth .room-occupied,\r\n.guest-hangup + .auth .request-access,\r\n.join + .auth .request-access,\r\n.approve + .auth .grant-access {\r\n    transition-delay: .3s;\r\n    /* Set the max-height to something large. In this case there's an obvious limit. */\r\n    max-height: 20ex;\r\n}\r\n.host-hangup + .auth .waiting,\r\n.create + .auth .waiting {\r\n    /* Set the max-height to something large. In this case there's an obvious limit. */\r\n    max-height: 20ex;\r\n}\r\n.established + .auth .hangup-button {\r\n    display: flex;\r\n}",""]),A.exports=i},function(A,i,e){"use strict";A.exports=function(A){var i=[];return i.toString=function(){return this.map((function(i){var e=function(A,i){var e=A[1]||"",t=A[3];if(!t)return e;if(i&&"function"==typeof btoa){var C=(h=t,r=btoa(unescape(encodeURIComponent(JSON.stringify(h)))),E="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),"/*# ".concat(E," */")),n=t.sources.map((function(A){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(A," */")}));return[e].concat(n).concat([C]).join("\n")}var h,r,E;return[e].join("\n")}(i,A);return i[2]?"@media ".concat(i[2]," {").concat(e,"}"):e})).join("")},i.i=function(A,e,t){"string"==typeof A&&(A=[[null,A,""]]);var C={};if(t)for(var n=0;n<this.length;n++){var h=this[n][0];null!=h&&(C[h]=!0)}for(var r=0;r<A.length;r++){var E=[].concat(A[r]);t&&C[E[0]]||(e&&(E[2]?E[2]="".concat(e," and ").concat(E[2]):E[2]=e),i.push(E))}},i}},function(A,i,e){var t,C,n={},h=(t=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===C&&(C=t.apply(this,arguments)),C}),r=function(A){return document.querySelector(A)},E=function(A){var i={};return function(A){if("function"==typeof A)return A();if(void 0===i[A]){var e=r.call(this,A);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(A){e=null}i[A]=e}return i[A]}}(),l=null,o=0,k=[],g=e(76);function D(A,i){for(var e=0;e<A.length;e++){var t=A[e],C=n[t.id];if(C){C.refs++;for(var h=0;h<C.parts.length;h++)C.parts[h](t.parts[h]);for(;h<t.parts.length;h++)C.parts.push(c(t.parts[h],i))}else{var r=[];for(h=0;h<t.parts.length;h++)r.push(c(t.parts[h],i));n[t.id]={id:t.id,refs:1,parts:r}}}}function a(A,i){for(var e=[],t={},C=0;C<A.length;C++){var n=A[C],h=i.base?n[0]+i.base:n[0],r={css:n[1],media:n[2],sourceMap:n[3]};t[h]?t[h].parts.push(r):e.push(t[h]={id:h,parts:[r]})}return e}function s(A,i){var e=E(A.insertInto);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var t=k[k.length-1];if("top"===A.insertAt)t?t.nextSibling?e.insertBefore(i,t.nextSibling):e.appendChild(i):e.insertBefore(i,e.firstChild),k.push(i);else if("bottom"===A.insertAt)e.appendChild(i);else{if("object"!=typeof A.insertAt||!A.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var C=E(A.insertInto+" "+A.insertAt.before);e.insertBefore(i,C)}}function B(A){if(null===A.parentNode)return!1;A.parentNode.removeChild(A);var i=k.indexOf(A);i>=0&&k.splice(i,1)}function j(A){var i=document.createElement("style");return void 0===A.attrs.type&&(A.attrs.type="text/css"),m(i,A.attrs),s(A,i),i}function m(A,i){Object.keys(i).forEach((function(e){A.setAttribute(e,i[e])}))}function c(A,i){var e,t,C,n;if(i.transform&&A.css){if(!(n=i.transform(A.css)))return function(){};A.css=n}if(i.singleton){var h=o++;e=l||(l=j(i)),t=G.bind(null,e,h,!1),C=G.bind(null,e,h,!0)}else A.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(e=function(A){var i=document.createElement("link");return void 0===A.attrs.type&&(A.attrs.type="text/css"),A.attrs.rel="stylesheet",m(i,A.attrs),s(A,i),i}(i),t=f.bind(null,e,i),C=function(){B(e),e.href&&URL.revokeObjectURL(e.href)}):(e=j(i),t=d.bind(null,e),C=function(){B(e)});return t(A),function(i){if(i){if(i.css===A.css&&i.media===A.media&&i.sourceMap===A.sourceMap)return;t(A=i)}else C()}}A.exports=function(A,i){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(i=i||{}).attrs="object"==typeof i.attrs?i.attrs:{},i.singleton||"boolean"==typeof i.singleton||(i.singleton=h()),i.insertInto||(i.insertInto="head"),i.insertAt||(i.insertAt="bottom");var e=a(A,i);return D(e,i),function(A){for(var t=[],C=0;C<e.length;C++){var h=e[C];(r=n[h.id]).refs--,t.push(r)}A&&D(a(A,i),i);for(C=0;C<t.length;C++){var r;if(0===(r=t[C]).refs){for(var E=0;E<r.parts.length;E++)r.parts[E]();delete n[r.id]}}}};var u,F=(u=[],function(A,i){return u[A]=i,u.filter(Boolean).join("\n")});function G(A,i,e,t){var C=e?"":t.css;if(A.styleSheet)A.styleSheet.cssText=F(i,C);else{var n=document.createTextNode(C),h=A.childNodes;h[i]&&A.removeChild(h[i]),h.length?A.insertBefore(n,h[i]):A.appendChild(n)}}function d(A,i){var e=i.css,t=i.media;if(t&&A.setAttribute("media",t),A.styleSheet)A.styleSheet.cssText=e;else{for(;A.firstChild;)A.removeChild(A.firstChild);A.appendChild(document.createTextNode(e))}}function f(A,i,e){var t=e.css,C=e.sourceMap,n=void 0===i.convertToAbsoluteUrls&&C;(i.convertToAbsoluteUrls||n)&&(t=g(t)),C&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(C))))+" */");var h=new Blob([t],{type:"text/css"}),r=A.href;A.href=URL.createObjectURL(h),r&&URL.revokeObjectURL(r)}},function(A,i){A.exports=function(A){var i="undefined"!=typeof window&&window.location;if(!i)throw new Error("fixUrls requires window.location");if(!A||"string"!=typeof A)return A;var e=i.protocol+"//"+i.host,t=e+i.pathname.replace(/\/[^\/]*$/,"/");return A.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(A,i){var C,n=i.trim().replace(/^"(.*)"$/,(function(A,i){return i})).replace(/^'(.*)'$/,(function(A,i){return i}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(n)?A:(C=0===n.indexOf("//")?n:0===n.indexOf("/")?e+n:t+n.replace(/^\.\//,""),"url("+JSON.stringify(C)+")")}))}},function(A,i){A.exports=Array.isArray||function(A){return"[object Array]"==Object.prototype.toString.call(A)}},function(A,i,e){"use strict";e.r(i);var t={};e.r(t),e.d(t,"ACESFilmicToneMapping",(function(){return Je})),e.d(t,"AddEquation",(function(){return oe})),e.d(t,"AddOperation",(function(){return Le})),e.d(t,"AdditiveAnimationBlendMode",(function(){return MC})),e.d(t,"AdditiveBlending",(function(){return he})),e.d(t,"AlphaFormat",(function(){return Ft})),e.d(t,"AlwaysDepth",(function(){return He})),e.d(t,"AlwaysStencilFunc",(function(){return ln})),e.d(t,"AmbientLight",(function(){return XD})),e.d(t,"AmbientLightProbe",(function(){return ma})),e.d(t,"AnimationClip",(function(){return Zg})),e.d(t,"AnimationLoader",(function(){return nD})),e.d(t,"AnimationMixer",(function(){return Ya})),e.d(t,"AnimationObjectGroup",(function(){return qa})),e.d(t,"AnimationUtils",(function(){return Pg})),e.d(t,"ArcCurve",(function(){return DD})),e.d(t,"ArrayCamera",(function(){return ko})),e.d(t,"ArrowHelper",(function(){return Ps})),e.d(t,"Audio",(function(){return ya})),e.d(t,"AudioAnalyser",(function(){return Ta})),e.d(t,"AudioContext",(function(){return sa})),e.d(t,"AudioListener",(function(){return Ia})),e.d(t,"AudioLoader",(function(){return Ba})),e.d(t,"AxesHelper",(function(){return Os})),e.d(t,"AxisHelper",(function(){return PB})),e.d(t,"BackSide",(function(){return Ae})),e.d(t,"BasicDepthPacking",(function(){return UC})),e.d(t,"BasicShadowMap",(function(){return Yi})),e.d(t,"BinaryTextureLoader",(function(){return UB})),e.d(t,"Bone",(function(){return Xo})),e.d(t,"BooleanKeyframeTrack",(function(){return Vg})),e.d(t,"BoundingBoxHelper",(function(){return OB})),e.d(t,"Box2",(function(){return ns})),e.d(t,"Box3",(function(){return On})),e.d(t,"Box3Helper",(function(){return ws})),e.d(t,"BoxBufferGeometry",(function(){return Xr})),e.d(t,"BoxGeometry",(function(){return Xr})),e.d(t,"BoxHelper",(function(){return xs})),e.d(t,"BufferAttribute",(function(){return lr})),e.d(t,"BufferGeometry",(function(){return br})),e.d(t,"BufferGeometryLoader",(function(){return Ca})),e.d(t,"ByteType",(function(){return ot})),e.d(t,"Cache",(function(){return $g})),e.d(t,"Camera",(function(){return iE})),e.d(t,"CameraHelper",(function(){return ys})),e.d(t,"CanvasRenderer",(function(){return WB})),e.d(t,"CanvasTexture",(function(){return pk})),e.d(t,"CatmullRomCurve3",(function(){return cD})),e.d(t,"CineonToneMapping",(function(){return Ne})),e.d(t,"CircleBufferGeometry",(function(){return Hk})),e.d(t,"CircleGeometry",(function(){return Hk})),e.d(t,"ClampToEdgeWrapping",(function(){return Ze})),e.d(t,"Clock",(function(){return Ga})),e.d(t,"Color",(function(){return nr})),e.d(t,"ColorKeyframeTrack",(function(){return Wg})),e.d(t,"CompressedTexture",(function(){return fk})),e.d(t,"CompressedTextureLoader",(function(){return hD})),e.d(t,"ConeBufferGeometry",(function(){return yk})),e.d(t,"ConeGeometry",(function(){return yk})),e.d(t,"CubeCamera",(function(){return tE})),e.d(t,"CubeReflectionMapping",(function(){return Ve})),e.d(t,"CubeRefractionMapping",(function(){return We})),e.d(t,"CubeTexture",(function(){return CE})),e.d(t,"CubeTextureLoader",(function(){return ED})),e.d(t,"CubeUVReflectionMapping",(function(){return Qe})),e.d(t,"CubeUVRefractionMapping",(function(){return Ye})),e.d(t,"CubicBezierCurve",(function(){return dD})),e.d(t,"CubicBezierCurve3",(function(){return fD})),e.d(t,"CubicInterpolant",(function(){return Ng})),e.d(t,"CullFaceBack",(function(){return zi})),e.d(t,"CullFaceFront",(function(){return qi})),e.d(t,"CullFaceFrontBack",(function(){return Qi})),e.d(t,"CullFaceNone",(function(){return Wi})),e.d(t,"Curve",(function(){return kD})),e.d(t,"CurvePath",(function(){return MD})),e.d(t,"CustomBlending",(function(){return le})),e.d(t,"CustomToneMapping",(function(){return Ke})),e.d(t,"CylinderBufferGeometry",(function(){return Ik})),e.d(t,"CylinderGeometry",(function(){return Ik})),e.d(t,"Cylindrical",(function(){return ts})),e.d(t,"DataTexture",(function(){return hE})),e.d(t,"DataTexture2DArray",(function(){return bE})),e.d(t,"DataTexture3D",(function(){return ME})),e.d(t,"DataTextureLoader",(function(){return lD})),e.d(t,"DataUtils",(function(){return Ks})),e.d(t,"DecrementStencilOp",(function(){return ZC})),e.d(t,"DecrementWrapStencilOp",(function(){return $C})),e.d(t,"DefaultLoadingManager",(function(){return iD})),e.d(t,"DepthFormat",(function(){return Ht})),e.d(t,"DepthStencilFormat",(function(){return It})),e.d(t,"DepthTexture",(function(){return vk})),e.d(t,"DirectionalLight",(function(){return YD})),e.d(t,"DirectionalLightHelper",(function(){return vs})),e.d(t,"DiscreteInterpolant",(function(){return Kg})),e.d(t,"DodecahedronBufferGeometry",(function(){return Mk})),e.d(t,"DodecahedronGeometry",(function(){return Mk})),e.d(t,"DoubleSide",(function(){return ie})),e.d(t,"DstAlphaFactor",(function(){return Fe})),e.d(t,"DstColorFactor",(function(){return de})),e.d(t,"DynamicBufferAttribute",(function(){return IB})),e.d(t,"DynamicCopyUsage",(function(){return jn})),e.d(t,"DynamicDrawUsage",(function(){return kn})),e.d(t,"DynamicReadUsage",(function(){return an})),e.d(t,"EdgesGeometry",(function(){return Lk})),e.d(t,"EdgesHelper",(function(){return NB})),e.d(t,"EllipseCurve",(function(){return gD})),e.d(t,"EqualDepth",(function(){return be})),e.d(t,"EqualStencilFunc",(function(){return Cn})),e.d(t,"EquirectangularReflectionMapping",(function(){return ze})),e.d(t,"EquirectangularRefractionMapping",(function(){return qe})),e.d(t,"Euler",(function(){return uh})),e.d(t,"EventDispatcher",(function(){return Fn})),e.d(t,"ExtrudeBufferGeometry",(function(){return kg})),e.d(t,"ExtrudeGeometry",(function(){return kg})),e.d(t,"FaceColors",(function(){return jB})),e.d(t,"FileLoader",(function(){return CD})),e.d(t,"FlatShading",(function(){return ee})),e.d(t,"Float16BufferAttribute",(function(){return jr})),e.d(t,"Float32Attribute",(function(){return LB})),e.d(t,"Float32BufferAttribute",(function(){return mr})),e.d(t,"Float64Attribute",(function(){return RB})),e.d(t,"Float64BufferAttribute",(function(){return cr})),e.d(t,"FloatType",(function(){return st})),e.d(t,"Fog",(function(){return co})),e.d(t,"FogExp2",(function(){return mo})),e.d(t,"Font",(function(){return ka})),e.d(t,"FontLoader",(function(){return Da})),e.d(t,"FrontSide",(function(){return $i})),e.d(t,"Frustum",(function(){return lE})),e.d(t,"GLBufferAttribute",(function(){return _a})),e.d(t,"GLSL1",(function(){return cn})),e.d(t,"GLSL3",(function(){return un})),e.d(t,"GammaEncoding",(function(){return RC})),e.d(t,"GreaterDepth",(function(){return xe})),e.d(t,"GreaterEqualDepth",(function(){return Me})),e.d(t,"GreaterEqualStencilFunc",(function(){return En})),e.d(t,"GreaterStencilFunc",(function(){return hn})),e.d(t,"GridHelper",(function(){return Fs})),e.d(t,"Group",(function(){return go})),e.d(t,"HalfFloatType",(function(){return Bt})),e.d(t,"HemisphereLight",(function(){return TD})),e.d(t,"HemisphereLightHelper",(function(){return us})),e.d(t,"HemisphereLightProbe",(function(){return ja})),e.d(t,"IcosahedronBufferGeometry",(function(){return Dg})),e.d(t,"IcosahedronGeometry",(function(){return Dg})),e.d(t,"ImageBitmapLoader",(function(){return la})),e.d(t,"ImageLoader",(function(){return rD})),e.d(t,"ImageUtils",(function(){return In})),e.d(t,"ImmediateRenderObject",(function(){return ls})),e.d(t,"IncrementStencilOp",(function(){return XC})),e.d(t,"IncrementWrapStencilOp",(function(){return _C})),e.d(t,"InstancedBufferAttribute",(function(){return ta})),e.d(t,"InstancedBufferGeometry",(function(){return ea})),e.d(t,"InstancedInterleavedBuffer",(function(){return Za})),e.d(t,"InstancedMesh",(function(){return Ck})),e.d(t,"Int16Attribute",(function(){return xB})),e.d(t,"Int16BufferAttribute",(function(){return Dr})),e.d(t,"Int32Attribute",(function(){return SB})),e.d(t,"Int32BufferAttribute",(function(){return sr})),e.d(t,"Int8Attribute",(function(){return yB})),e.d(t,"Int8BufferAttribute",(function(){return or})),e.d(t,"IntType",(function(){return Dt})),e.d(t,"InterleavedBuffer",(function(){return Fo})),e.d(t,"InterleavedBufferAttribute",(function(){return fo})),e.d(t,"Interpolant",(function(){return Og})),e.d(t,"InterpolateDiscrete",(function(){return fC})),e.d(t,"InterpolateLinear",(function(){return pC})),e.d(t,"InterpolateSmooth",(function(){return vC})),e.d(t,"InvertStencilOp",(function(){return An})),e.d(t,"JSONLoader",(function(){return zB})),e.d(t,"KeepStencilOp",(function(){return QC})),e.d(t,"KeyframeTrack",(function(){return Ug})),e.d(t,"LOD",(function(){return Uo})),e.d(t,"LatheBufferGeometry",(function(){return ag})),e.d(t,"LatheGeometry",(function(){return ag})),e.d(t,"Layers",(function(){return Fh})),e.d(t,"LensFlare",(function(){return QB})),e.d(t,"LessDepth",(function(){return Ie})),e.d(t,"LessEqualDepth",(function(){return ye})),e.d(t,"LessEqualStencilFunc",(function(){return nn})),e.d(t,"LessStencilFunc",(function(){return tn})),e.d(t,"Light",(function(){return SD})),e.d(t,"LightProbe",(function(){return $D})),e.d(t,"Line",(function(){return kk})),e.d(t,"Line3",(function(){return Es})),e.d(t,"LineBasicMaterial",(function(){return nk})),e.d(t,"LineCurve",(function(){return pD})),e.d(t,"LineCurve3",(function(){return vD})),e.d(t,"LineDashedMaterial",(function(){return Lg})),e.d(t,"LineLoop",(function(){return sk})),e.d(t,"LinePieces",(function(){return sB})),e.d(t,"LineSegments",(function(){return ak})),e.d(t,"LineStrip",(function(){return aB})),e.d(t,"LinearEncoding",(function(){return TC})),e.d(t,"LinearFilter",(function(){return Ct})),e.d(t,"LinearInterpolant",(function(){return Jg})),e.d(t,"LinearMipMapLinearFilter",(function(){return Et})),e.d(t,"LinearMipMapNearestFilter",(function(){return ht})),e.d(t,"LinearMipmapLinearFilter",(function(){return rt})),e.d(t,"LinearMipmapNearestFilter",(function(){return nt})),e.d(t,"LinearToneMapping",(function(){return Pe})),e.d(t,"Loader",(function(){return eD})),e.d(t,"LoaderUtils",(function(){return ia})),e.d(t,"LoadingManager",(function(){return AD})),e.d(t,"LogLuvEncoding",(function(){return OC})),e.d(t,"LoopOnce",(function(){return FC})),e.d(t,"LoopPingPong",(function(){return dC})),e.d(t,"LoopRepeat",(function(){return GC})),e.d(t,"LuminanceAlphaFormat",(function(){return pt})),e.d(t,"LuminanceFormat",(function(){return ft})),e.d(t,"MOUSE",(function(){return Ui})),e.d(t,"Material",(function(){return _h})),e.d(t,"MaterialLoader",(function(){return Aa})),e.d(t,"Math",(function(){return fn})),e.d(t,"MathUtils",(function(){return fn})),e.d(t,"Matrix3",(function(){return vn})),e.d(t,"Matrix4",(function(){return oh})),e.d(t,"MaxEquation",(function(){return ae})),e.d(t,"Mesh",(function(){return Qr})),e.d(t,"MeshBasicMaterial",(function(){return hr})),e.d(t,"MeshDepthMaterial",(function(){return no})),e.d(t,"MeshDistanceMaterial",(function(){return ho})),e.d(t,"MeshFaceMaterial",(function(){return cB})),e.d(t,"MeshLambertMaterial",(function(){return Sg})),e.d(t,"MeshMatcapMaterial",(function(){return Tg})),e.d(t,"MeshNormalMaterial",(function(){return wg})),e.d(t,"MeshPhongMaterial",(function(){return Mg})),e.d(t,"MeshPhysicalMaterial",(function(){return bg})),e.d(t,"MeshStandardMaterial",(function(){return yg})),e.d(t,"MeshToonMaterial",(function(){return xg})),e.d(t,"MinEquation",(function(){return De})),e.d(t,"MirroredRepeatWrapping",(function(){return _e})),e.d(t,"MixOperation",(function(){return Te})),e.d(t,"MultiMaterial",(function(){return uB})),e.d(t,"MultiplyBlending",(function(){return Ee})),e.d(t,"MultiplyOperation",(function(){return Se})),e.d(t,"NearestFilter",(function(){return $e})),e.d(t,"NearestMipMapLinearFilter",(function(){return tt})),e.d(t,"NearestMipMapNearestFilter",(function(){return it})),e.d(t,"NearestMipmapLinearFilter",(function(){return et})),e.d(t,"NearestMipmapNearestFilter",(function(){return At})),e.d(t,"NeverDepth",(function(){return ve})),e.d(t,"NeverStencilFunc",(function(){return en})),e.d(t,"NoBlending",(function(){return Ce})),e.d(t,"NoColors",(function(){return BB})),e.d(t,"NoToneMapping",(function(){return Re})),e.d(t,"NormalAnimationBlendMode",(function(){return bC})),e.d(t,"NormalBlending",(function(){return ne})),e.d(t,"NotEqualDepth",(function(){return we})),e.d(t,"NotEqualStencilFunc",(function(){return rn})),e.d(t,"NumberKeyframeTrack",(function(){return zg})),e.d(t,"Object3D",(function(){return Th})),e.d(t,"ObjectLoader",(function(){return na})),e.d(t,"ObjectSpaceNormalMap",(function(){return zC})),e.d(t,"OctahedronBufferGeometry",(function(){return sg})),e.d(t,"OctahedronGeometry",(function(){return sg})),e.d(t,"OneFactor",(function(){return Be})),e.d(t,"OneMinusDstAlphaFactor",(function(){return Ge})),e.d(t,"OneMinusDstColorFactor",(function(){return fe})),e.d(t,"OneMinusSrcAlphaFactor",(function(){return ue})),e.d(t,"OneMinusSrcColorFactor",(function(){return me})),e.d(t,"OrthographicCamera",(function(){return qD})),e.d(t,"PCFShadowMap",(function(){return Xi})),e.d(t,"PCFSoftShadowMap",(function(){return Zi})),e.d(t,"PMREMGenerator",(function(){return nB})),e.d(t,"ParametricBufferGeometry",(function(){return Bg})),e.d(t,"ParametricGeometry",(function(){return Bg})),e.d(t,"Particle",(function(){return GB})),e.d(t,"ParticleBasicMaterial",(function(){return pB})),e.d(t,"ParticleSystem",(function(){return dB})),e.d(t,"ParticleSystemMaterial",(function(){return vB})),e.d(t,"Path",(function(){return xD})),e.d(t,"PerspectiveCamera",(function(){return eE})),e.d(t,"Plane",(function(){return Oh})),e.d(t,"PlaneBufferGeometry",(function(){return gE})),e.d(t,"PlaneGeometry",(function(){return gE})),e.d(t,"PlaneHelper",(function(){return Ss})),e.d(t,"PointCloud",(function(){return FB})),e.d(t,"PointCloudMaterial",(function(){return fB})),e.d(t,"PointLight",(function(){return zD})),e.d(t,"PointLightHelper",(function(){return Bs})),e.d(t,"Points",(function(){return Fk})),e.d(t,"PointsMaterial",(function(){return Bk})),e.d(t,"PolarGridHelper",(function(){return Gs})),e.d(t,"PolyhedronBufferGeometry",(function(){return bk})),e.d(t,"PolyhedronGeometry",(function(){return bk})),e.d(t,"PositionalAudio",(function(){return Sa})),e.d(t,"PropertyBinding",(function(){return za})),e.d(t,"PropertyMixer",(function(){return La})),e.d(t,"QuadraticBezierCurve",(function(){return HD})),e.d(t,"QuadraticBezierCurve3",(function(){return ID})),e.d(t,"Quaternion",(function(){return Tn})),e.d(t,"QuaternionKeyframeTrack",(function(){return Qg})),e.d(t,"QuaternionLinearInterpolant",(function(){return qg})),e.d(t,"REVISION",(function(){return Ki})),e.d(t,"RGBADepthPacking",(function(){return VC})),e.d(t,"RGBAFormat",(function(){return dt})),e.d(t,"RGBAIntegerFormat",(function(){return St})),e.d(t,"RGBA_ASTC_10x10_Format",(function(){return tC})),e.d(t,"RGBA_ASTC_10x5_Format",(function(){return AC})),e.d(t,"RGBA_ASTC_10x6_Format",(function(){return iC})),e.d(t,"RGBA_ASTC_10x8_Format",(function(){return eC})),e.d(t,"RGBA_ASTC_12x10_Format",(function(){return CC})),e.d(t,"RGBA_ASTC_12x12_Format",(function(){return nC})),e.d(t,"RGBA_ASTC_4x4_Format",(function(){return zt})),e.d(t,"RGBA_ASTC_5x4_Format",(function(){return qt})),e.d(t,"RGBA_ASTC_5x5_Format",(function(){return Qt})),e.d(t,"RGBA_ASTC_6x5_Format",(function(){return Yt})),e.d(t,"RGBA_ASTC_6x6_Format",(function(){return Xt})),e.d(t,"RGBA_ASTC_8x5_Format",(function(){return Zt})),e.d(t,"RGBA_ASTC_8x6_Format",(function(){return _t})),e.d(t,"RGBA_ASTC_8x8_Format",(function(){return $t})),e.d(t,"RGBA_BPTC_Format",(function(){return hC})),e.d(t,"RGBA_ETC2_EAC_Format",(function(){return Wt})),e.d(t,"RGBA_PVRTC_2BPPV1_Format",(function(){return Kt})),e.d(t,"RGBA_PVRTC_4BPPV1_Format",(function(){return Jt})),e.d(t,"RGBA_S3TC_DXT1_Format",(function(){return Lt})),e.d(t,"RGBA_S3TC_DXT3_Format",(function(){return Rt})),e.d(t,"RGBA_S3TC_DXT5_Format",(function(){return Pt})),e.d(t,"RGBDEncoding",(function(){return KC})),e.d(t,"RGBEEncoding",(function(){return PC})),e.d(t,"RGBEFormat",(function(){return vt})),e.d(t,"RGBFormat",(function(){return Gt})),e.d(t,"RGBIntegerFormat",(function(){return wt})),e.d(t,"RGBM16Encoding",(function(){return JC})),e.d(t,"RGBM7Encoding",(function(){return NC})),e.d(t,"RGB_ETC1_Format",(function(){return Ut})),e.d(t,"RGB_ETC2_Format",(function(){return Vt})),e.d(t,"RGB_PVRTC_2BPPV1_Format",(function(){return Nt})),e.d(t,"RGB_PVRTC_4BPPV1_Format",(function(){return Ot})),e.d(t,"RGB_S3TC_DXT1_Format",(function(){return Tt})),e.d(t,"RGFormat",(function(){return Mt})),e.d(t,"RGIntegerFormat",(function(){return xt})),e.d(t,"RawShaderMaterial",(function(){return Ig})),e.d(t,"Ray",(function(){return lh})),e.d(t,"Raycaster",(function(){return $a})),e.d(t,"RectAreaLight",(function(){return ZD})),e.d(t,"RedFormat",(function(){return yt})),e.d(t,"RedIntegerFormat",(function(){return bt})),e.d(t,"ReinhardToneMapping",(function(){return Oe})),e.d(t,"RepeatWrapping",(function(){return Xe})),e.d(t,"ReplaceStencilOp",(function(){return YC})),e.d(t,"ReverseSubtractEquation",(function(){return ge})),e.d(t,"RingBufferGeometry",(function(){return jg})),e.d(t,"RingGeometry",(function(){return jg})),e.d(t,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return mC})),e.d(t,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return sC})),e.d(t,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return BC})),e.d(t,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return jC})),e.d(t,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return cC})),e.d(t,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return uC})),e.d(t,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return rC})),e.d(t,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return EC})),e.d(t,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return lC})),e.d(t,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return oC})),e.d(t,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return kC})),e.d(t,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return gC})),e.d(t,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return DC})),e.d(t,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return aC})),e.d(t,"Scene",(function(){return uo})),e.d(t,"SceneUtils",(function(){return qB})),e.d(t,"ShaderChunk",(function(){return DE})),e.d(t,"ShaderLib",(function(){return sE})),e.d(t,"ShaderMaterial",(function(){return AE})),e.d(t,"ShadowMaterial",(function(){return Hg})),e.d(t,"Shape",(function(){return wD})),e.d(t,"ShapeBufferGeometry",(function(){return mg})),e.d(t,"ShapeGeometry",(function(){return mg})),e.d(t,"ShapePath",(function(){return oa})),e.d(t,"ShapeUtils",(function(){return Eg})),e.d(t,"ShortType",(function(){return kt})),e.d(t,"Skeleton",(function(){return $o})),e.d(t,"SkeletonHelper",(function(){return ss})),e.d(t,"SkinnedMesh",(function(){return Yo})),e.d(t,"SmoothShading",(function(){return te})),e.d(t,"Sphere",(function(){return ih})),e.d(t,"SphereBufferGeometry",(function(){return cg})),e.d(t,"SphereGeometry",(function(){return cg})),e.d(t,"Spherical",(function(){return es})),e.d(t,"SphericalHarmonics3",(function(){return _D})),e.d(t,"SplineCurve",(function(){return yD})),e.d(t,"SpotLight",(function(){return JD})),e.d(t,"SpotLightHelper",(function(){return ks})),e.d(t,"Sprite",(function(){return Oo})),e.d(t,"SpriteMaterial",(function(){return po})),e.d(t,"SrcAlphaFactor",(function(){return ce})),e.d(t,"SrcAlphaSaturateFactor",(function(){return pe})),e.d(t,"SrcColorFactor",(function(){return je})),e.d(t,"StaticCopyUsage",(function(){return Bn})),e.d(t,"StaticDrawUsage",(function(){return on})),e.d(t,"StaticReadUsage",(function(){return Dn})),e.d(t,"StereoCamera",(function(){return Fa})),e.d(t,"StreamCopyUsage",(function(){return mn})),e.d(t,"StreamDrawUsage",(function(){return gn})),e.d(t,"StreamReadUsage",(function(){return sn})),e.d(t,"StringKeyframeTrack",(function(){return Yg})),e.d(t,"SubtractEquation",(function(){return ke})),e.d(t,"SubtractiveBlending",(function(){return re})),e.d(t,"TOUCH",(function(){return Vi})),e.d(t,"TangentSpaceNormalMap",(function(){return WC})),e.d(t,"TetrahedronBufferGeometry",(function(){return ug})),e.d(t,"TetrahedronGeometry",(function(){return ug})),e.d(t,"TextBufferGeometry",(function(){return Fg})),e.d(t,"TextGeometry",(function(){return Fg})),e.d(t,"Texture",(function(){return bn})),e.d(t,"TextureLoader",(function(){return oD})),e.d(t,"TorusBufferGeometry",(function(){return Gg})),e.d(t,"TorusGeometry",(function(){return Gg})),e.d(t,"TorusKnotBufferGeometry",(function(){return dg})),e.d(t,"TorusKnotGeometry",(function(){return dg})),e.d(t,"Triangle",(function(){return Xh})),e.d(t,"TriangleFanDrawMode",(function(){return SC})),e.d(t,"TriangleStripDrawMode",(function(){return wC})),e.d(t,"TrianglesDrawMode",(function(){return xC})),e.d(t,"TubeBufferGeometry",(function(){return fg})),e.d(t,"TubeGeometry",(function(){return fg})),e.d(t,"UVMapping",(function(){return Ue})),e.d(t,"Uint16Attribute",(function(){return wB})),e.d(t,"Uint16BufferAttribute",(function(){return ar})),e.d(t,"Uint32Attribute",(function(){return TB})),e.d(t,"Uint32BufferAttribute",(function(){return Br})),e.d(t,"Uint8Attribute",(function(){return bB})),e.d(t,"Uint8BufferAttribute",(function(){return kr})),e.d(t,"Uint8ClampedAttribute",(function(){return MB})),e.d(t,"Uint8ClampedBufferAttribute",(function(){return gr})),e.d(t,"Uniform",(function(){return Xa})),e.d(t,"UniformsLib",(function(){return aE})),e.d(t,"UniformsUtils",(function(){return $r})),e.d(t,"UnsignedByteType",(function(){return lt})),e.d(t,"UnsignedInt248Type",(function(){return ut})),e.d(t,"UnsignedIntType",(function(){return at})),e.d(t,"UnsignedShort4444Type",(function(){return jt})),e.d(t,"UnsignedShort5551Type",(function(){return mt})),e.d(t,"UnsignedShort565Type",(function(){return ct})),e.d(t,"UnsignedShortType",(function(){return gt})),e.d(t,"VSMShadowMap",(function(){return _i})),e.d(t,"Vector2",(function(){return pn})),e.d(t,"Vector3",(function(){return Ln})),e.d(t,"Vector4",(function(){return xn})),e.d(t,"VectorKeyframeTrack",(function(){return Xg})),e.d(t,"Vertex",(function(){return HB})),e.d(t,"VertexColors",(function(){return mB})),e.d(t,"VideoTexture",(function(){return dk})),e.d(t,"WebGL1Renderer",(function(){return jo})),e.d(t,"WebGLCubeRenderTarget",(function(){return nE})),e.d(t,"WebGLMultisampleRenderTarget",(function(){return Sn})),e.d(t,"WebGLRenderTarget",(function(){return wn})),e.d(t,"WebGLRenderTargetCube",(function(){return VB})),e.d(t,"WebGLRenderer",(function(){return Bo})),e.d(t,"WebGLUtils",(function(){return oo})),e.d(t,"WireframeGeometry",(function(){return pg})),e.d(t,"WireframeHelper",(function(){return JB})),e.d(t,"WrapAroundEnding",(function(){return yC})),e.d(t,"XHRLoader",(function(){return KB})),e.d(t,"ZeroCurvatureEnding",(function(){return HC})),e.d(t,"ZeroFactor",(function(){return se})),e.d(t,"ZeroSlopeEnding",(function(){return IC})),e.d(t,"ZeroStencilOp",(function(){return qC})),e.d(t,"sRGBEncoding",(function(){return LC}));var C=e(0),n=e.n(C),h=e(35);function r(A,i){return(r=Object.setPrototypeOf||function(A,i){return A.__proto__=i,A})(A,i)}function E(A,i){A.prototype=Object.create(i.prototype),A.prototype.constructor=A,r(A,i)}var l=e(1),o=e.n(l),k=o.a.shape({trySubscribe:o.a.func.isRequired,tryUnsubscribe:o.a.func.isRequired,notifyNestedSubs:o.a.func.isRequired,isSubscribed:o.a.func.isRequired}),g=o.a.shape({subscribe:o.a.func.isRequired,dispatch:o.a.func.isRequired,getState:o.a.func.isRequired});n.a.forwardRef;var D=function(A){var i;void 0===A&&(A="store");var e=A+"Subscription",t=function(i){E(n,i);var t=n.prototype;function n(e,t){var C;return(C=i.call(this,e,t)||this)[A]=e.store,C}return t.getChildContext=function(){var i;return(i={})[A]=this[A],i[e]=null,i},t.render=function(){return C.Children.only(this.props.children)},n}(C.Component);return t.propTypes={store:g.isRequired,children:o.a.element.isRequired},t.childContextTypes=((i={})[A]=g.isRequired,i[e]=k,i),t}();function a(A){if(void 0===A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return A}function s(){return(s=Object.assign||function(A){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(A[t]=e[t])}return A}).apply(this,arguments)}function B(A,i){if(null==A)return{};var e,t,C={},n=Object.keys(A);for(t=0;t<n.length;t++)e=n[t],i.indexOf(e)>=0||(C[e]=A[e]);return C}var j=e(36),m=e.n(j),c=e(2),u=e.n(c),F=e(16),G={notify:function(){}};var d=function(){function A(A,i,e){this.store=A,this.parentSub=i,this.onStateChange=e,this.unsubscribe=null,this.listeners=G}var i=A.prototype;return i.addNestedSub=function(A){return this.trySubscribe(),this.listeners.subscribe(A)},i.notifyNestedSubs=function(){this.listeners.notify()},i.isSubscribed=function(){return Boolean(this.unsubscribe)},i.trySubscribe=function(){var A,i;this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=(A=[],i=[],{clear:function(){i=null,A=null},notify:function(){for(var e=A=i,t=0;t<e.length;t++)e[t]()},get:function(){return i},subscribe:function(e){var t=!0;return i===A&&(i=A.slice()),i.push(e),function(){t&&null!==A&&(t=!1,i===A&&(i=A.slice()),i.splice(i.indexOf(e),1))}}}))},i.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=G)},A}(),f=void 0!==n.a.forwardRef,p=0,v={};function H(){}function I(A,i){var e,t;void 0===i&&(i={});var n=i,h=n.getDisplayName,r=void 0===h?function(A){return"ConnectAdvanced("+A+")"}:h,l=n.methodName,o=void 0===l?"connectAdvanced":l,D=n.renderCountProp,j=void 0===D?void 0:D,c=n.shouldHandleStateChanges,G=void 0===c||c,I=n.storeKey,y=void 0===I?"store":I,b=n.withRef,M=void 0!==b&&b,x=B(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),w=y+"Subscription",S=p++,T=((e={})[y]=g,e[w]=k,e),L=((t={})[w]=k,t);return function(i){u()(Object(F.isValidElementType)(i),"You must pass a component to the function returned by "+o+". Instead received "+JSON.stringify(i));var e=i.displayName||i.name||"Component",t=r(e),n=s({},x,{getDisplayName:r,methodName:o,renderCountProp:j,shouldHandleStateChanges:G,storeKey:y,withRef:M,displayName:t,wrappedComponentName:e,WrappedComponent:i}),h=function(e){function h(A,i){var C;return(C=e.call(this,A,i)||this).version=S,C.state={},C.renderCount=0,C.store=A[y]||i[y],C.propsMode=Boolean(A[y]),C.setWrappedInstance=C.setWrappedInstance.bind(a(a(C))),u()(C.store,'Could not find "'+y+'" in either the context or props of "'+t+'". Either wrap the root component in a <Provider>, or explicitly pass "'+y+'" as a prop to "'+t+'".'),C.initSelector(),C.initSubscription(),C}E(h,e);var r=h.prototype;return r.getChildContext=function(){var A,i=this.propsMode?null:this.subscription;return(A={})[w]=i||this.context[w],A},r.componentDidMount=function(){G&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},r.componentWillReceiveProps=function(A){this.selector.run(A)},r.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},r.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=H,this.store=null,this.selector.run=H,this.selector.shouldComponentUpdate=!1},r.getWrappedInstance=function(){return u()(M,"To access the wrapped instance, you need to specify { withRef: true } in the options argument of the "+o+"() call."),this.wrappedInstance},r.setWrappedInstance=function(A){this.wrappedInstance=A},r.initSelector=function(){var i=A(this.store.dispatch,n);this.selector=function(A,i){var e={run:function(t){try{var C=A(i.getState(),t);(C!==e.props||e.error)&&(e.shouldComponentUpdate=!0,e.props=C,e.error=null)}catch(A){e.shouldComponentUpdate=!0,e.error=A}}};return e}(i,this.store),this.selector.run(this.props)},r.initSubscription=function(){if(G){var A=(this.propsMode?this.props:this.context)[w];this.subscription=new d(this.store,A,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},r.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(v)):this.notifyNestedSubs()},r.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},r.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},r.addExtraProps=function(A){if(!(M||j||this.propsMode&&this.subscription))return A;var i=s({},A);return M&&(i.ref=this.setWrappedInstance),j&&(i[j]=this.renderCount++),this.propsMode&&this.subscription&&(i[w]=this.subscription),i},r.render=function(){var A=this.selector;if(A.shouldComponentUpdate=!1,A.error)throw A.error;return Object(C.createElement)(i,this.addExtraProps(A.props))},h}(C.Component);return f&&(h.prototype.UNSAFE_componentWillReceiveProps=h.prototype.componentWillReceiveProps,delete h.prototype.componentWillReceiveProps),h.WrappedComponent=i,h.displayName=t,h.childContextTypes=L,h.contextTypes=T,h.propTypes=T,m()(h,i)}}var y=Object.prototype.hasOwnProperty;function b(A,i){return A===i?0!==A||0!==i||1/A==1/i:A!=A&&i!=i}function M(A,i){if(b(A,i))return!0;if("object"!=typeof A||null===A||"object"!=typeof i||null===i)return!1;var e=Object.keys(A),t=Object.keys(i);if(e.length!==t.length)return!1;for(var C=0;C<e.length;C++)if(!y.call(i,e[C])||!b(A[e[C]],i[e[C]]))return!1;return!0}var x=e(17),w=function(){return Math.random().toString(36).substring(7).split("").join(".")},S={INIT:"@@redux/INIT"+w(),REPLACE:"@@redux/REPLACE"+w(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+w()}};function T(A){if("object"!=typeof A||null===A)return!1;for(var i=A;null!==Object.getPrototypeOf(i);)i=Object.getPrototypeOf(i);return Object.getPrototypeOf(A)===i}function L(A,i){var e=i&&i.type;return"Given "+(e&&'action "'+String(e)+'"'||"an action")+', reducer "'+A+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function R(A,i){return function(){return i(A.apply(this,arguments))}}function P(A){return function(i,e){var t=A(i,e);function C(){return t}return C.dependsOnOwnProps=!1,C}}function O(A){return null!==A.dependsOnOwnProps&&void 0!==A.dependsOnOwnProps?Boolean(A.dependsOnOwnProps):1!==A.length}function N(A,i){return function(i,e){e.displayName;var t=function(A,i){return t.dependsOnOwnProps?t.mapToProps(A,i):t.mapToProps(A)};return t.dependsOnOwnProps=!0,t.mapToProps=function(i,e){t.mapToProps=A,t.dependsOnOwnProps=O(A);var C=t(i,e);return"function"==typeof C&&(t.mapToProps=C,t.dependsOnOwnProps=O(C),C=t(i,e)),C},t}}var J=[function(A){return"function"==typeof A?N(A):void 0},function(A){return A?void 0:P((function(A){return{dispatch:A}}))},function(A){return A&&"object"==typeof A?P((function(i){return function(A,i){if("function"==typeof A)return R(A,i);if("object"!=typeof A||null===A)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===A?"null":typeof A)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var e={};for(var t in A){var C=A[t];"function"==typeof C&&(e[t]=R(C,i))}return e}(A,i)})):void 0}];var K=[function(A){return"function"==typeof A?N(A):void 0},function(A){return A?void 0:P((function(){return{}}))}];function U(A,i,e){return s({},e,A,i)}var V=[function(A){return"function"==typeof A?function(A){return function(i,e){e.displayName;var t,C=e.pure,n=e.areMergedPropsEqual,h=!1;return function(i,e,r){var E=A(i,e,r);return h?C&&n(E,t)||(t=E):(h=!0,t=E),t}}}(A):void 0},function(A){return A?void 0:function(){return U}}];function W(A,i,e,t){return function(C,n){return e(A(C,n),i(t,n),n)}}function z(A,i,e,t,C){var n,h,r,E,l,o=C.areStatesEqual,k=C.areOwnPropsEqual,g=C.areStatePropsEqual,D=!1;function a(C,D){var a,s,B=!k(D,h),j=!o(C,n);return n=C,h=D,B&&j?(r=A(n,h),i.dependsOnOwnProps&&(E=i(t,h)),l=e(r,E,h)):B?(A.dependsOnOwnProps&&(r=A(n,h)),i.dependsOnOwnProps&&(E=i(t,h)),l=e(r,E,h)):j?(a=A(n,h),s=!g(a,r),r=a,s&&(l=e(r,E,h)),l):l}return function(C,o){return D?a(C,o):(r=A(n=C,h=o),E=i(t,h),l=e(r,E,h),D=!0,l)}}function q(A,i){var e=i.initMapStateToProps,t=i.initMapDispatchToProps,C=i.initMergeProps,n=B(i,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),h=e(A,n),r=t(A,n),E=C(A,n);return(n.pure?z:W)(h,r,E,A,n)}function Q(A,i,e){for(var t=i.length-1;t>=0;t--){var C=i[t](A);if(C)return C}return function(i,t){throw new Error("Invalid value of type "+typeof A+" for "+e+" argument when connecting component "+t.wrappedComponentName+".")}}function Y(A,i){return A===i}var X,Z,_,$,AA,iA,eA,tA,CA,nA,hA,rA,EA=(_=(Z=void 0===X?{}:X).connectHOC,$=void 0===_?I:_,AA=Z.mapStateToPropsFactories,iA=void 0===AA?K:AA,eA=Z.mapDispatchToPropsFactories,tA=void 0===eA?J:eA,CA=Z.mergePropsFactories,nA=void 0===CA?V:CA,hA=Z.selectorFactory,rA=void 0===hA?q:hA,function(A,i,e,t){void 0===t&&(t={});var C=t,n=C.pure,h=void 0===n||n,r=C.areStatesEqual,E=void 0===r?Y:r,l=C.areOwnPropsEqual,o=void 0===l?M:l,k=C.areStatePropsEqual,g=void 0===k?M:k,D=C.areMergedPropsEqual,a=void 0===D?M:D,j=B(C,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),m=Q(A,iA,"mapStateToProps"),c=Q(i,tA,"mapDispatchToProps"),u=Q(e,nA,"mergeProps");return $(rA,s({methodName:"connect",getDisplayName:function(A){return"Connect("+A+")"},shouldHandleStateChanges:Boolean(A),initMapStateToProps:m,initMapDispatchToProps:c,initMergeProps:u,pure:h,areStatesEqual:E,areOwnPropsEqual:o,areStatePropsEqual:g,areMergedPropsEqual:a},j))});function lA(A){return function(A){if(Array.isArray(A))return oA(A)}(A)||function(A){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(A))return Array.from(A)}(A)||function(A,i){if(!A)return;if("string"==typeof A)return oA(A,i);var e=Object.prototype.toString.call(A).slice(8,-1);"Object"===e&&A.constructor&&(e=A.constructor.name);if("Map"===e||"Set"===e)return Array.from(A);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return oA(A,i)}(A)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function oA(A,i){(null==i||i>A.length)&&(i=A.length);for(var e=0,t=new Array(i);e<i;e++)t[e]=A[e];return t}var kA=function A(i,e,t){var C;if("function"==typeof e&&"function"==typeof t||"function"==typeof t&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof e&&void 0===t&&(t=e,e=void 0),void 0!==t){if("function"!=typeof t)throw new Error("Expected the enhancer to be a function.");return t(A)(i,e)}if("function"!=typeof i)throw new Error("Expected the reducer to be a function.");var n=i,h=e,r=[],E=r,l=!1;function o(){E===r&&(E=r.slice())}function k(){if(l)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return h}function g(A){if("function"!=typeof A)throw new Error("Expected the listener to be a function.");if(l)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var i=!0;return o(),E.push(A),function(){if(i){if(l)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");i=!1,o();var e=E.indexOf(A);E.splice(e,1),r=null}}}function D(A){if(!T(A))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===A.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(l)throw new Error("Reducers may not dispatch actions.");try{l=!0,h=n(h,A)}finally{l=!1}for(var i=r=E,e=0;e<i.length;e++){(0,i[e])()}return A}function a(A){if("function"!=typeof A)throw new Error("Expected the nextReducer to be a function.");n=A,D({type:S.REPLACE})}function s(){var A,i=g;return(A={subscribe:function(A){if("object"!=typeof A||null===A)throw new TypeError("Expected the observer to be an object.");function e(){A.next&&A.next(k())}return e(),{unsubscribe:i(e)}}})[x.a]=function(){return this},A}return D({type:S.INIT}),(C={dispatch:D,subscribe:g,getState:k,replaceReducer:a})[x.a]=s,C}(function(A){for(var i=Object.keys(A),e={},t=0;t<i.length;t++){var C=i[t];0,"function"==typeof A[C]&&(e[C]=A[C])}var n,h=Object.keys(e);try{!function(A){Object.keys(A).forEach((function(i){var e=A[i];if(void 0===e(void 0,{type:S.INIT}))throw new Error('Reducer "'+i+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===e(void 0,{type:S.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+i+"\" returned undefined when probed with a random type. Don't try to handle "+S.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(e)}catch(A){n=A}return function(A,i){if(void 0===A&&(A={}),n)throw n;for(var t=!1,C={},r=0;r<h.length;r++){var E=h[r],l=e[E],o=A[E],k=l(o,i);if(void 0===k){var g=L(E,i);throw new Error(g)}C[E]=k,t=t||k!==o}return(t=t||h.length!==Object.keys(A).length)?C:A}}({rooms:function(){var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1?arguments[1]:void 0;return"ADD_ROOM"===i.type?lA(new Set([].concat(lA(A),[i.room]))):A},video:function(){var A=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],i=arguments.length>1?arguments[1]:void 0;return"SET_VIDEO"===i.type?i.video:A},audio:function(){var A=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],i=arguments.length>1?arguments[1]:void 0;return"SET_AUDIO"===i.type?i.audio:A}}),localStorage.getItem("reduxState")?JSON.parse(localStorage.getItem("reduxState")):{rooms:[],video:!0,audio:!0});kA.subscribe((function(){return localStorage.setItem("reduxState",JSON.stringify(kA.getState()))}));var gA=kA,DA=e(3),aA=e.n(DA);function sA(A){return"/"===A.charAt(0)}function BA(A,i){for(var e=i,t=e+1,C=A.length;t<C;e+=1,t+=1)A[e]=A[t];A.pop()}var jA=function(A,i){void 0===i&&(i="");var e,t=A&&A.split("/")||[],C=i&&i.split("/")||[],n=A&&sA(A),h=i&&sA(i),r=n||h;if(A&&sA(A)?C=t:t.length&&(C.pop(),C=C.concat(t)),!C.length)return"/";if(C.length){var E=C[C.length-1];e="."===E||".."===E||""===E}else e=!1;for(var l=0,o=C.length;o>=0;o--){var k=C[o];"."===k?BA(C,o):".."===k?(BA(C,o),l++):l&&(BA(C,o),l--)}if(!r)for(;l--;l)C.unshift("..");!r||""===C[0]||C[0]&&sA(C[0])||C.unshift("");var g=C.join("/");return e&&"/"!==g.substr(-1)&&(g+="/"),g};var mA=function(A,i){if(!A)throw new Error("Invariant failed")};function cA(A){return"/"===A.charAt(0)?A:"/"+A}function uA(A,i){return function(A,i){return 0===A.toLowerCase().indexOf(i.toLowerCase())&&-1!=="/?#".indexOf(A.charAt(i.length))}(A,i)?A.substr(i.length):A}function FA(A){return"/"===A.charAt(A.length-1)?A.slice(0,-1):A}function GA(A){var i=A.pathname,e=A.search,t=A.hash,C=i||"/";return e&&"?"!==e&&(C+="?"===e.charAt(0)?e:"?"+e),t&&"#"!==t&&(C+="#"===t.charAt(0)?t:"#"+t),C}function dA(A,i,e,t){var C;"string"==typeof A?(C=function(A){var i=A||"/",e="",t="",C=i.indexOf("#");-1!==C&&(t=i.substr(C),i=i.substr(0,C));var n=i.indexOf("?");return-1!==n&&(e=i.substr(n),i=i.substr(0,n)),{pathname:i,search:"?"===e?"":e,hash:"#"===t?"":t}}(A)).state=i:(void 0===(C=s({},A)).pathname&&(C.pathname=""),C.search?"?"!==C.search.charAt(0)&&(C.search="?"+C.search):C.search="",C.hash?"#"!==C.hash.charAt(0)&&(C.hash="#"+C.hash):C.hash="",void 0!==i&&void 0===C.state&&(C.state=i));try{C.pathname=decodeURI(C.pathname)}catch(A){throw A instanceof URIError?new URIError('Pathname "'+C.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):A}return e&&(C.key=e),t?C.pathname?"/"!==C.pathname.charAt(0)&&(C.pathname=jA(C.pathname,t.pathname)):C.pathname=t.pathname:C.pathname||(C.pathname="/"),C}function fA(){var A=null;var i=[];return{setPrompt:function(i){return A=i,function(){A===i&&(A=null)}},confirmTransitionTo:function(i,e,t,C){if(null!=A){var n="function"==typeof A?A(i,e):A;"string"==typeof n?"function"==typeof t?t(n,C):C(!0):C(!1!==n)}else C(!0)},appendListener:function(A){var e=!0;function t(){e&&A.apply(void 0,arguments)}return i.push(t),function(){e=!1,i=i.filter((function(A){return A!==t}))}},notifyListeners:function(){for(var A=arguments.length,e=new Array(A),t=0;t<A;t++)e[t]=arguments[t];i.forEach((function(A){return A.apply(void 0,e)}))}}}var pA=!("undefined"==typeof window||!window.document||!window.document.createElement);function vA(A,i){i(window.confirm(A))}function HA(){try{return window.history.state||{}}catch(A){return{}}}function IA(A){void 0===A&&(A={}),pA||mA(!1);var i,e=window.history,t=(-1===(i=window.navigator.userAgent).indexOf("Android 2.")&&-1===i.indexOf("Android 4.0")||-1===i.indexOf("Mobile Safari")||-1!==i.indexOf("Chrome")||-1!==i.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,C=!(-1===window.navigator.userAgent.indexOf("Trident")),n=A,h=n.forceRefresh,r=void 0!==h&&h,E=n.getUserConfirmation,l=void 0===E?vA:E,o=n.keyLength,k=void 0===o?6:o,g=A.basename?FA(cA(A.basename)):"";function D(A){var i=A||{},e=i.key,t=i.state,C=window.location,n=C.pathname+C.search+C.hash;return g&&(n=uA(n,g)),dA(n,t,e)}function a(){return Math.random().toString(36).substr(2,k)}var B=fA();function j(A){s(y,A),y.length=e.length,B.notifyListeners(y.location,y.action)}function m(A){(function(A){return void 0===A.state&&-1===navigator.userAgent.indexOf("CriOS")})(A)||F(D(A.state))}function c(){F(D(HA()))}var u=!1;function F(A){if(u)u=!1,j();else{B.confirmTransitionTo(A,"POP",l,(function(i){i?j({action:"POP",location:A}):function(A){var i=y.location,e=d.indexOf(i.key);-1===e&&(e=0);var t=d.indexOf(A.key);-1===t&&(t=0);var C=e-t;C&&(u=!0,p(C))}(A)}))}}var G=D(HA()),d=[G.key];function f(A){return g+GA(A)}function p(A){e.go(A)}var v=0;function H(A){1===(v+=A)&&1===A?(window.addEventListener("popstate",m),C&&window.addEventListener("hashchange",c)):0===v&&(window.removeEventListener("popstate",m),C&&window.removeEventListener("hashchange",c))}var I=!1;var y={length:e.length,action:"POP",location:G,createHref:f,push:function(A,i){var C=dA(A,i,a(),y.location);B.confirmTransitionTo(C,"PUSH",l,(function(A){if(A){var i=f(C),n=C.key,h=C.state;if(t)if(e.pushState({key:n,state:h},null,i),r)window.location.href=i;else{var E=d.indexOf(y.location.key),l=d.slice(0,E+1);l.push(C.key),d=l,j({action:"PUSH",location:C})}else window.location.href=i}}))},replace:function(A,i){var C=dA(A,i,a(),y.location);B.confirmTransitionTo(C,"REPLACE",l,(function(A){if(A){var i=f(C),n=C.key,h=C.state;if(t)if(e.replaceState({key:n,state:h},null,i),r)window.location.replace(i);else{var E=d.indexOf(y.location.key);-1!==E&&(d[E]=C.key),j({action:"REPLACE",location:C})}else window.location.replace(i)}}))},go:p,goBack:function(){p(-1)},goForward:function(){p(1)},block:function(A){void 0===A&&(A=!1);var i=B.setPrompt(A);return I||(H(1),I=!0),function(){return I&&(I=!1,H(-1)),i()}},listen:function(A){var i=B.appendListener(A);return H(1),function(){H(-1),i()}}};return y}var yA=Object.assign||function(A){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(A[t]=e[t])}return A};function bA(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}function MA(A,i){if(!A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?A:i}var xA=function(A){function i(){var e,t;bA(this,i);for(var C=arguments.length,n=Array(C),h=0;h<C;h++)n[h]=arguments[h];return e=t=MA(this,A.call.apply(A,[this].concat(n))),t.state={match:t.computeMatch(t.props.history.location.pathname)},MA(t,e)}return function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(A,i):A.__proto__=i)}(i,A),i.prototype.getChildContext=function(){return{router:yA({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},i.prototype.computeMatch=function(A){return{path:"/",url:"/",params:{},isExact:"/"===A}},i.prototype.componentWillMount=function(){var A=this,i=this.props,e=i.children,t=i.history;u()(null==e||1===n.a.Children.count(e),"A <Router> may have only one child element"),this.unlisten=t.listen((function(){A.setState({match:A.computeMatch(t.location.pathname)})}))},i.prototype.componentWillReceiveProps=function(A){aA()(this.props.history===A.history,"You cannot change <Router history>")},i.prototype.componentWillUnmount=function(){this.unlisten()},i.prototype.render=function(){var A=this.props.children;return A?n.a.Children.only(A):null},i}(n.a.Component);xA.propTypes={history:o.a.object.isRequired,children:o.a.node},xA.contextTypes={router:o.a.object},xA.childContextTypes={router:o.a.object.isRequired};var wA=xA;function SA(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}function TA(A,i){if(!A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?A:i}var LA=function(A){function i(){var e,t;SA(this,i);for(var C=arguments.length,n=Array(C),h=0;h<C;h++)n[h]=arguments[h];return e=t=TA(this,A.call.apply(A,[this].concat(n))),t.history=IA(t.props),TA(t,e)}return function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(A,i):A.__proto__=i)}(i,A),i.prototype.componentWillMount=function(){aA()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},i.prototype.render=function(){return n.a.createElement(wA,{history:this.history,children:this.props.children})},i}(n.a.Component);LA.propTypes={basename:o.a.string,forceRefresh:o.a.bool,getUserConfirmation:o.a.func,keyLength:o.a.number,children:o.a.node};var RA=LA,PA=e(40),OA=e.n(PA),NA={},JA=0,KA=function(A,i){var e=""+i.end+i.strict+i.sensitive,t=NA[e]||(NA[e]={});if(t[A])return t[A];var C=[],n={re:OA()(A,C,i),keys:C};return JA<1e4&&(t[A]=n,JA++),n},UA=function(A){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=arguments[2];"string"==typeof i&&(i={path:i});var t=i,C=t.path,n=t.exact,h=void 0!==n&&n,r=t.strict,E=void 0!==r&&r,l=t.sensitive,o=void 0!==l&&l;if(null==C)return e;var k=KA(C,{end:h,strict:E,sensitive:o}),g=k.re,D=k.keys,a=g.exec(A);if(!a)return null;var s=a[0],B=a.slice(1),j=A===s;return h&&!j?null:{path:C,url:"/"===C&&""===s?"/":s,isExact:j,params:D.reduce((function(A,i,e){return A[i.name]=B[e],A}),{})}};function VA(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}function WA(A,i){if(!A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?A:i}var zA=function(A){function i(){return VA(this,i),WA(this,A.apply(this,arguments))}return function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(A,i):A.__proto__=i)}(i,A),i.prototype.componentWillMount=function(){u()(this.context.router,"You should not use <Switch> outside a <Router>")},i.prototype.componentWillReceiveProps=function(A){aA()(!(A.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),aA()(!(!A.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},i.prototype.render=function(){var A=this.context.router.route,i=this.props.children,e=this.props.location||A.location,t=void 0,C=void 0;return n.a.Children.forEach(i,(function(i){if(null==t&&n.a.isValidElement(i)){var h=i.props,r=h.path,E=h.exact,l=h.strict,o=h.sensitive,k=h.from,g=r||k;C=i,t=UA(e.pathname,{path:g,exact:E,strict:l,sensitive:o},A.match)}})),t?n.a.cloneElement(C,{location:e,computedMatch:t}):null},i}(n.a.Component);zA.contextTypes={router:o.a.shape({route:o.a.object.isRequired}).isRequired},zA.propTypes={children:o.a.node,location:o.a.object};var qA=zA,QA=Object.assign||function(A){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(A[t]=e[t])}return A};function YA(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}function XA(A,i){if(!A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?A:i}var ZA=function(A){return 0===n.a.Children.count(A)},_A=function(A){function i(){var e,t;YA(this,i);for(var C=arguments.length,n=Array(C),h=0;h<C;h++)n[h]=arguments[h];return e=t=XA(this,A.call.apply(A,[this].concat(n))),t.state={match:t.computeMatch(t.props,t.context.router)},XA(t,e)}return function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(A,i):A.__proto__=i)}(i,A),i.prototype.getChildContext=function(){return{router:QA({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},i.prototype.computeMatch=function(A,i){var e=A.computedMatch,t=A.location,C=A.path,n=A.strict,h=A.exact,r=A.sensitive;if(e)return e;u()(i,"You should not use <Route> or withRouter() outside a <Router>");var E=i.route,l=(t||E.location).pathname;return UA(l,{path:C,strict:n,exact:h,sensitive:r},E.match)},i.prototype.componentWillMount=function(){aA()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),aA()(!(this.props.component&&this.props.children&&!ZA(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),aA()(!(this.props.render&&this.props.children&&!ZA(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},i.prototype.componentWillReceiveProps=function(A,i){aA()(!(A.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),aA()(!(!A.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(A,i.router)})},i.prototype.render=function(){var A=this.state.match,i=this.props,e=i.children,t=i.component,C=i.render,h=this.context.router,r=h.history,E=h.route,l=h.staticContext,o={match:A,location:this.props.location||E.location,history:r,staticContext:l};return t?A?n.a.createElement(t,o):null:C?A?C(o):null:"function"==typeof e?e(o):e&&!ZA(e)?n.a.Children.only(e):null},i}(n.a.Component);_A.propTypes={computedMatch:o.a.object,path:o.a.string,exact:o.a.bool,strict:o.a.bool,sensitive:o.a.bool,component:o.a.func,render:o.a.func,children:o.a.oneOfType([o.a.func,o.a.node]),location:o.a.object},_A.contextTypes={router:o.a.shape({history:o.a.object.isRequired,route:o.a.object.isRequired,staticContext:o.a.object})},_A.childContextTypes={router:o.a.object.isRequired};var $A=_A,Ai=Object.assign||function(A){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(A[t]=e[t])}return A};function ii(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}function ei(A,i){if(!A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?A:i}var ti=function(A){return!!(A.metaKey||A.altKey||A.ctrlKey||A.shiftKey)},Ci=function(A){function i(){var e,t;ii(this,i);for(var C=arguments.length,n=Array(C),h=0;h<C;h++)n[h]=arguments[h];return e=t=ei(this,A.call.apply(A,[this].concat(n))),t.handleClick=function(A){if(t.props.onClick&&t.props.onClick(A),!A.defaultPrevented&&0===A.button&&!t.props.target&&!ti(A)){A.preventDefault();var i=t.context.router.history,e=t.props,C=e.replace,n=e.to;C?i.replace(n):i.push(n)}},ei(t,e)}return function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(A,i):A.__proto__=i)}(i,A),i.prototype.render=function(){var A=this.props,i=(A.replace,A.to),e=A.innerRef,t=function(A,i){var e={};for(var t in A)i.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(A,t)&&(e[t]=A[t]);return e}(A,["replace","to","innerRef"]);u()(this.context.router,"You should not use <Link> outside a <Router>"),u()(void 0!==i,'You must specify the "to" property');var C=this.context.router.history,h="string"==typeof i?dA(i,null,null,C.location):i,r=C.createHref(h);return n.a.createElement("a",Ai({},t,{onClick:this.handleClick,href:r,ref:e}))},i}(n.a.Component);Ci.propTypes={onClick:o.a.func,target:o.a.string,replace:o.a.bool,to:o.a.oneOfType([o.a.string,o.a.object]).isRequired,innerRef:o.a.oneOfType([o.a.string,o.a.func])},Ci.defaultProps={replace:!1},Ci.contextTypes={router:o.a.shape({history:o.a.shape({push:o.a.func.isRequired,replace:o.a.func.isRequired,createHref:o.a.func.isRequired}).isRequired}).isRequired};var ni=Ci,hi=function(A){return n.a.createElement("div",{className:"home"},n.a.createElement("div",null,n.a.createElement("h1",{itemProp:"headline"},"Webrtc Video Room"),n.a.createElement("p",null,"Please enter a room name."),n.a.createElement("input",{type:"text",name:"room",value:A.roomId,onChange:A.handleChange,pattern:"^\\w+$",maxLength:"10",required:!0,autoFocus:!0,title:"Room name should only contain letters or numbers."}),n.a.createElement(ni,{className:"primary-button",to:"/r/"+A.roomId},"Join"),n.a.createElement(ni,{className:"primary-button",to:"/r/"+A.defaultRoomId},"Random"),0!==A.rooms.length&&n.a.createElement("div",null,"Recently used rooms:"),A.rooms.map((function(A){return n.a.createElement(ni,{key:A,className:"recent-room",to:"/r/"+A},A)}))))};hi.propTypes={handleChange:l.PropTypes.func.isRequired,defaultRoomId:l.PropTypes.string.isRequired,roomId:l.PropTypes.string.isRequired,rooms:l.PropTypes.array.isRequired};var ri=EA((function(A){return{rooms:A.rooms}}))(hi);function Ei(A){return(Ei="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A})(A)}function li(A,i){for(var e=0;e<i.length;e++){var t=i[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(A,t.key,t)}}function oi(A,i){return(oi=Object.setPrototypeOf||function(A,i){return A.__proto__=i,A})(A,i)}function ki(A){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(A){return!1}}();return function(){var e,t=ai(A);if(i){var C=ai(this).constructor;e=Reflect.construct(t,arguments,C)}else e=t.apply(this,arguments);return gi(this,e)}}function gi(A,i){return!i||"object"!==Ei(i)&&"function"!=typeof i?Di(A):i}function Di(A){if(void 0===A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return A}function ai(A){return(ai=Object.setPrototypeOf?Object.getPrototypeOf:function(A){return A.__proto__||Object.getPrototypeOf(A)})(A)}var si=function(A){!function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,writable:!0,configurable:!0}}),i&&oi(A,i)}(h,A);var i,e,t,C=ki(h);function h(A){var i;return function(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}(this,h),(i=C.call(this,A)).defaultRoomId=String(new Date-(new Date).setHours(0,0,0,0)),i.state={roomId:i.defaultRoomId},i.handleChange=i.handleChange.bind(Di(i)),i}return i=h,(e=[{key:"handleChange",value:function(A){this.setState({roomId:A.target.value})}},{key:"render",value:function(){return n.a.createElement(ri,{defaultRoomId:this.defaultRoomId,roomId:this.state.roomId,handleChange:this.handleChange})}}])&&li(i.prototype,e),t&&li(i,t),h}(C.Component);si.contextTypes={router:l.PropTypes.object};var Bi=si;function ji(A){return(ji="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A})(A)}function mi(A,i){for(var e=0;e<i.length;e++){var t=i[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(A,t.key,t)}}function ci(A,i){return(ci=Object.setPrototypeOf||function(A,i){return A.__proto__=i,A})(A,i)}function ui(A){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(A){return!1}}();return function(){var e,t=di(A);if(i){var C=di(this).constructor;e=Reflect.construct(t,arguments,C)}else e=t.apply(this,arguments);return Fi(this,e)}}function Fi(A,i){return!i||"object"!==ji(i)&&"function"!=typeof i?Gi(A):i}function Gi(A){if(void 0===A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return A}function di(A){return(di=Object.setPrototypeOf?Object.getPrototypeOf:function(A){return A.__proto__||Object.getPrototypeOf(A)})(A)}var fi=function(A){!function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,writable:!0,configurable:!0}}),i&&ci(A,i)}(h,A);var i,e,t,C=ui(h);function h(A){var i;return function(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}(this,h),(i=C.call(this,A)).state={bridge:"",user:""},i.onRemoteHangup=i.onRemoteHangup.bind(Gi(i)),i.onMessage=i.onMessage.bind(Gi(i)),i.sendData=i.sendData.bind(Gi(i)),i.setupDataHandlers=i.setupDataHandlers.bind(Gi(i)),i.setDescription=i.setDescription.bind(Gi(i)),i.sendDescription=i.sendDescription.bind(Gi(i)),i.hangup=i.hangup.bind(Gi(i)),i.init=i.init.bind(Gi(i)),i.setDescription=i.setDescription.bind(Gi(i)),i}return i=h,(e=[{key:"componentDidMount",value:function(){var A=this;this.props.media(this),this.props.getUserMedia.then((function(i){return A.localVideo.srcObject=A.localStream=i})),this.props.socket.on("message",this.onMessage),this.props.socket.on("hangup",this.onRemoteHangup)}},{key:"componentWillUnmount",value:function(){this.props.media(null),void 0!==this.localStream&&this.localStream.getVideoTracks()[0].stop(),this.props.socket.emit("leave")}},{key:"onRemoteHangup",value:function(){this.setState({user:"host",bridge:"host-hangup"})}},{key:"onMessage",value:function(A){var i=this;"offer"===A.type?this.pc.setRemoteDescription(new RTCSessionDescription(A)).then((function(){return i.pc.createAnswer()})).then(this.setDescription).then(this.sendDescription).catch(this.handleError):"answer"===A.type?this.pc.setRemoteDescription(new RTCSessionDescription(A)):"candidate"===A.type&&this.pc.addIceCandidate(A.candidate)}},{key:"sendData",value:function(A){this.dc.send(JSON.stringify(A))}},{key:"setupDataHandlers",value:function(){var A=this;this.dc.onmessage=function(A){var i=JSON.parse(A.data);console.log("received message over data channel:"+i)},this.dc.onclose=function(){A.remoteStream.getVideoTracks()[0].stop(),console.log("The Data Channel is Closed")}}},{key:"setDescription",value:function(A){return this.pc.setLocalDescription(A)}},{key:"sendDescription",value:function(){this.props.socket.send(this.pc.localDescription)}},{key:"hangup",value:function(){this.setState({user:"guest",bridge:"guest-hangup"}),this.pc.close(),this.props.socket.emit("leave")}},{key:"handleError",value:function(A){console.log(A)}},{key:"init",value:function(){var A=this;this.pc=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]}),this.pc.onicecandidate=function(i){console.log(i,"onicecandidate"),i.candidate&&A.props.socket.send({type:"candidate",candidate:i.candidate})},this.pc.onaddstream=function(i){console.log("onaddstream",i),A.remoteStream=i.stream,A.remoteVideo.srcObject=A.remoteStream=i.stream,A.setState({bridge:"established"})},this.pc.ondatachannel=function(i){A.dc=i.channel,A.setupDataHandlers(),A.sendData({peerMediaStream:{video:A.localStream.getVideoTracks()[0].enabled}})},this.localStream.getTracks().forEach((function(i){return A.pc.addTrack(i,A.localStream)})),"host"===this.state.user&&this.props.getUserMedia.then((function(){A.dc=A.pc.createDataChannel("chat"),A.setupDataHandlers(),console.log("attachMediaIfReady"),A.pc.createOffer().then(A.setDescription).then(A.sendDescription).catch(A.handleError)}))}},{key:"render",value:function(){var A=this;return n.a.createElement("div",{className:"media-bridge ".concat(this.state.bridge)},n.a.createElement("video",{className:"remote-video",ref:function(i){return A.remoteVideo=i},autoPlay:!0}),n.a.createElement("video",{className:"local-video",ref:function(i){return A.localVideo=i},autoPlay:!0,muted:!0}))}}])&&mi(i.prototype,e),t&&mi(i,t),h}(C.Component);fi.propTypes={socket:l.PropTypes.object.isRequired,getUserMedia:l.PropTypes.object.isRequired,media:l.PropTypes.func.isRequired};var pi=fi,vi=document.documentElement;document.fullscreenEnabled=document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled,document.exitFullscreen=document.exitFullscreen||document.webkitExitFullscreen||document.mozCancelFullScreen||document.msExitFullscreen,vi.requestFullscreen=vi.requestFullscreen||vi.webkitRequestFullscreen||vi.mozRequestFullScreen||vi.msRequestFullScreen;var Hi=function(){document.fullscreenEnabled&&(document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement?document.exitFullscreen():vi.requestFullscreen())},Ii=function(A){return n.a.createElement("div",{className:"auth"},n.a.createElement("div",{className:"media-controls"},n.a.createElement(ni,{className:"call-exit-button",to:"/"},n.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 36 36",className:"svg"},n.a.createElement("path",{d:"M30 16.5h-18.26l8.38-8.38-2.12-2.12-12 12 12 12 2.12-2.12-8.38-8.38h18.26v-3z",fill:"white"}))),n.a.createElement("button",{onClick:A.toggleAudio,className:"audio-button-"+A.audio},n.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50 50",className:"svg"},n.a.createElement("path",{className:"on",d:"M38 22h-3.4c0 1.49-.31 2.87-.87 4.1l2.46 2.46C37.33 26.61 38 24.38 38 22zm-8.03.33c0-.11.03-.22.03-.33V10c0-3.32-2.69-6-6-6s-6 2.68-6 6v.37l11.97 11.96zM8.55 6L6 8.55l12.02 12.02v1.44c0 3.31 2.67 6 5.98 6 .45 0 .88-.06 1.3-.15l3.32 3.32c-1.43.66-3 1.03-4.62 1.03-5.52 0-10.6-4.2-10.6-10.2H10c0 6.83 5.44 12.47 12 13.44V42h4v-6.56c1.81-.27 3.53-.9 5.08-1.81L39.45 42 42 39.46 8.55 6z",fill:"white"}),n.a.createElement("path",{className:"off",d:"M24 28c3.31 0 5.98-2.69 5.98-6L30 10c0-3.32-2.68-6-6-6-3.31 0-6 2.68-6 6v12c0 3.31 2.69 6 6 6zm10.6-6c0 6-5.07 10.2-10.6 10.2-5.52 0-10.6-4.2-10.6-10.2H10c0 6.83 5.44 12.47 12 13.44V42h4v-6.56c6.56-.97 12-6.61 12-13.44h-3.4z",fill:"white"}))),n.a.createElement("button",{onClick:A.toggleVideo,className:"video-button-"+A.video},n.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50 50",className:"svg"},n.a.createElement("path",{className:"on",d:"M40 8H15.64l8 8H28v4.36l1.13 1.13L36 16v12.36l7.97 7.97L44 36V12c0-2.21-1.79-4-4-4zM4.55 2L2 4.55l4.01 4.01C4.81 9.24 4 10.52 4 12v24c0 2.21 1.79 4 4 4h29.45l4 4L44 41.46 4.55 2zM12 16h1.45L28 30.55V32H12V16z",fill:"white"}),n.a.createElement("path",{className:"off",d:"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm-4 24l-8-6.4V32H12V16h16v6.4l8-6.4v16z",fill:"white"}))),n.a.createElement("button",{onClick:Hi,className:"fullscreen-button"},n.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50 50",className:"svg"},n.a.createElement("path",{className:"on",d:"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z",fill:"white"}),n.a.createElement("path",{className:"off",d:"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z",fill:"white"}))),n.a.createElement("button",{onClick:A.handleHangup,className:"hangup-button"},n.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50 50",className:"svg"},n.a.createElement("path",{d:"M24 18c-3.21 0-6.3.5-9.2 1.44v6.21c0 .79-.46 1.47-1.12 1.8-1.95.98-3.74 2.23-5.33 3.7-.36.35-.85.57-1.4.57-.55 0-1.05-.22-1.41-.59L.59 26.18c-.37-.37-.59-.87-.59-1.42 0-.55.22-1.05.59-1.42C6.68 17.55 14.93 14 24 14s17.32 3.55 23.41 9.34c.37.36.59.87.59 1.42 0 .55-.22 1.05-.59 1.41l-4.95 4.95c-.36.36-.86.59-1.41.59-.54 0-1.04-.22-1.4-.57-1.59-1.47-3.38-2.72-5.33-3.7-.66-.33-1.12-1.01-1.12-1.8v-6.21C30.3 18.5 27.21 18 24 18z",fill:"white"})))),n.a.createElement("div",{className:"request-access"},n.a.createElement("p",null,n.a.createElement("span",{className:"you-left"},"You hung up. "),"Send an invitation to join the room."),n.a.createElement("form",{onSubmit:A.send},n.a.createElement("input",{type:"text",autoFocus:!0,onChange:A.handleInput,"data-ref":"message",maxLength:"30",required:!0,placeholder:"Hi, I'm John Doe."}),n.a.createElement("button",{className:"primary-button"},"Send"))),n.a.createElement("div",{className:"grant-access"},n.a.createElement("p",null,"A peer has sent you a message to join the room:"),n.a.createElement("div",null,A.message),n.a.createElement("button",{onClick:A.handleInvitation,"data-ref":"reject",className:"primary-button"},"Reject"),n.a.createElement("button",{onClick:A.handleInvitation,"data-ref":"accept",className:"primary-button"},"Accept")),n.a.createElement("div",{className:"room-occupied"},n.a.createElement("p",null,"Please, try another room!"),n.a.createElement(ni,{className:"primary-button",to:"/"},"OK")),n.a.createElement("div",{className:"waiting"},n.a.createElement("p",null,n.a.createElement("span",null,"Waiting for someone to join this room: "),n.a.createElement("a",{href:window.location.href},window.location.href),n.a.createElement("br",null),n.a.createElement("span",{className:"remote-left"},"The remote side hung up."))))};Ii.propTypes={message:l.PropTypes.string.isRequired,audio:l.PropTypes.bool.isRequired,video:l.PropTypes.bool.isRequired,toggleVideo:l.PropTypes.func.isRequired,toggleAudio:l.PropTypes.func.isRequired,send:l.PropTypes.func.isRequired,handleHangup:l.PropTypes.func.isRequired,handleInput:l.PropTypes.func.isRequired,handleInvitation:l.PropTypes.func.isRequired};var yi=Ii;function bi(A){return(bi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A})(A)}function Mi(){return(Mi=Object.assign||function(A){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(A[t]=e[t])}return A}).apply(this,arguments)}function xi(A,i){for(var e=0;e<i.length;e++){var t=i[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(A,t.key,t)}}function wi(A,i){return(wi=Object.setPrototypeOf||function(A,i){return A.__proto__=i,A})(A,i)}function Si(A){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(A){return!1}}();return function(){var e,t=Ri(A);if(i){var C=Ri(this).constructor;e=Reflect.construct(t,arguments,C)}else e=t.apply(this,arguments);return Ti(this,e)}}function Ti(A,i){return!i||"object"!==bi(i)&&"function"!=typeof i?Li(A):i}function Li(A){if(void 0===A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return A}function Ri(A){return(Ri=Object.setPrototypeOf?Object.getPrototypeOf:function(A){return A.__proto__||Object.getPrototypeOf(A)})(A)}var Pi=function(A){!function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,writable:!0,configurable:!0}}),i&&wi(A,i)}(h,A);var i,e,t,C=Si(h);function h(A){var i;return function(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}(this,h),(i=C.call(this,A)).state={sid:"",message:"",audio:!0,video:!0},i.handleInvitation=i.handleInvitation.bind(Li(i)),i.handleHangup=i.handleHangup.bind(Li(i)),i.handleInput=i.handleInput.bind(Li(i)),i.toggleVideo=i.toggleVideo.bind(Li(i)),i.toggleAudio=i.toggleAudio.bind(Li(i)),i.send=i.send.bind(Li(i)),i}return i=h,(e=[{key:"hideAuth",value:function(){this.props.media.setState({bridge:"connecting"})}},{key:"full",value:function(){this.props.media.setState({bridge:"full"})}},{key:"componentDidMount",value:function(){var A=this,i=this.props.socket;this.setState({video:this.props.video,audio:this.props.audio}),i.on("create",(function(){return A.props.media.setState({user:"host",bridge:"create"})})),i.on("full",this.full),i.on("bridge",(function(i){return A.props.media.init()})),i.on("join",(function(){return A.props.media.setState({user:"guest",bridge:"join"})})),i.on("approve",(function(i){var e=i.message,t=i.sid;A.props.media.setState({bridge:"approve"}),A.setState({message:e,sid:t})})),i.emit("find"),this.props.getUserMedia.then((function(i){A.localStream=i,A.localStream.getVideoTracks()[0].enabled=A.state.video,A.localStream.getAudioTracks()[0].enabled=A.state.audio}))}},{key:"handleInput",value:function(A){var i,e,t;this.setState((i={},e=A.target.dataset.ref,t=A.target.value,e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i))}},{key:"send",value:function(A){A.preventDefault(),this.props.socket.emit("auth",this.state),this.hideAuth()}},{key:"handleInvitation",value:function(A){A.preventDefault(),this.props.socket.emit([A.target.dataset.ref],this.state.sid),this.hideAuth()}},{key:"toggleVideo",value:function(){var A=this.localStream.getVideoTracks()[0].enabled=!this.state.video;this.setState({video:A}),this.props.setVideo(A)}},{key:"toggleAudio",value:function(){var A=this.localStream.getAudioTracks()[0].enabled=!this.state.audio;this.setState({audio:A}),this.props.setAudio(A)}},{key:"handleHangup",value:function(){this.props.media.hangup()}},{key:"render",value:function(){return n.a.createElement(yi,Mi({},this.state,{toggleVideo:this.toggleVideo,toggleAudio:this.toggleAudio,send:this.send,handleHangup:this.handleHangup,handleInput:this.handleInput,handleInvitation:this.handleInvitation}))}}])&&xi(i.prototype,e),t&&xi(i,t),h}(n.a.Component);Pi.propTypes={socket:l.PropTypes.object.isRequired,getUserMedia:l.PropTypes.object.isRequired,audio:l.PropTypes.bool.isRequired,video:l.PropTypes.bool.isRequired,setVideo:l.PropTypes.func.isRequired,setAudio:l.PropTypes.func.isRequired,media:l.PropTypes.instanceOf(pi)};var Oi=EA((function(A){return{video:A.video,audio:A.audio}}),(function(A){return{setVideo:function(A){return gA.dispatch({type:"SET_VIDEO",video:A})},setAudio:function(A){return gA.dispatch({type:"SET_AUDIO",audio:A})}}}))(Pi),Ni=e(38),Ji=e.n(Ni);const Ki="126",Ui={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Vi={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Wi=0,zi=1,qi=2,Qi=3,Yi=0,Xi=1,Zi=2,_i=3,$i=0,Ae=1,ie=2,ee=1,te=2,Ce=0,ne=1,he=2,re=3,Ee=4,le=5,oe=100,ke=101,ge=102,De=103,ae=104,se=200,Be=201,je=202,me=203,ce=204,ue=205,Fe=206,Ge=207,de=208,fe=209,pe=210,ve=0,He=1,Ie=2,ye=3,be=4,Me=5,xe=6,we=7,Se=0,Te=1,Le=2,Re=0,Pe=1,Oe=2,Ne=3,Je=4,Ke=5,Ue=300,Ve=301,We=302,ze=303,qe=304,Qe=306,Ye=307,Xe=1e3,Ze=1001,_e=1002,$e=1003,At=1004,it=1004,et=1005,tt=1005,Ct=1006,nt=1007,ht=1007,rt=1008,Et=1008,lt=1009,ot=1010,kt=1011,gt=1012,Dt=1013,at=1014,st=1015,Bt=1016,jt=1017,mt=1018,ct=1019,ut=1020,Ft=1021,Gt=1022,dt=1023,ft=1024,pt=1025,vt=dt,Ht=1026,It=1027,yt=1028,bt=1029,Mt=1030,xt=1031,wt=1032,St=1033,Tt=33776,Lt=33777,Rt=33778,Pt=33779,Ot=35840,Nt=35841,Jt=35842,Kt=35843,Ut=36196,Vt=37492,Wt=37496,zt=37808,qt=37809,Qt=37810,Yt=37811,Xt=37812,Zt=37813,_t=37814,$t=37815,AC=37816,iC=37817,eC=37818,tC=37819,CC=37820,nC=37821,hC=36492,rC=37840,EC=37841,lC=37842,oC=37843,kC=37844,gC=37845,DC=37846,aC=37847,sC=37848,BC=37849,jC=37850,mC=37851,cC=37852,uC=37853,FC=2200,GC=2201,dC=2202,fC=2300,pC=2301,vC=2302,HC=2400,IC=2401,yC=2402,bC=2500,MC=2501,xC=0,wC=1,SC=2,TC=3e3,LC=3001,RC=3007,PC=3002,OC=3003,NC=3004,JC=3005,KC=3006,UC=3200,VC=3201,WC=0,zC=1,qC=0,QC=7680,YC=7681,XC=7682,ZC=7683,_C=34055,$C=34056,An=5386,en=512,tn=513,Cn=514,nn=515,hn=516,rn=517,En=518,ln=519,on=35044,kn=35048,gn=35040,Dn=35045,an=35049,sn=35041,Bn=35046,jn=35050,mn=35042,cn="100",un="300 es";function Fn(){}Object.assign(Fn.prototype,{addEventListener:function(A,i){void 0===this._listeners&&(this._listeners={});const e=this._listeners;void 0===e[A]&&(e[A]=[]),-1===e[A].indexOf(i)&&e[A].push(i)},hasEventListener:function(A,i){if(void 0===this._listeners)return!1;const e=this._listeners;return void 0!==e[A]&&-1!==e[A].indexOf(i)},removeEventListener:function(A,i){if(void 0===this._listeners)return;const e=this._listeners[A];if(void 0!==e){const A=e.indexOf(i);-1!==A&&e.splice(A,1)}},dispatchEvent:function(A){if(void 0===this._listeners)return;const i=this._listeners[A.type];if(void 0!==i){A.target=this;const e=i.slice(0);for(let i=0,t=e.length;i<t;i++)e[i].call(this,A)}}});const Gn=[];for(let A=0;A<256;A++)Gn[A]=(A<16?"0":"")+A.toString(16);let dn=1234567;const fn={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const A=4294967295*Math.random()|0,i=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0;return(Gn[255&A]+Gn[A>>8&255]+Gn[A>>16&255]+Gn[A>>24&255]+"-"+Gn[255&i]+Gn[i>>8&255]+"-"+Gn[i>>16&15|64]+Gn[i>>24&255]+"-"+Gn[63&e|128]+Gn[e>>8&255]+"-"+Gn[e>>16&255]+Gn[e>>24&255]+Gn[255&t]+Gn[t>>8&255]+Gn[t>>16&255]+Gn[t>>24&255]).toUpperCase()},clamp:function(A,i,e){return Math.max(i,Math.min(e,A))},euclideanModulo:function(A,i){return(A%i+i)%i},mapLinear:function(A,i,e,t,C){return t+(A-i)*(C-t)/(e-i)},lerp:function(A,i,e){return(1-e)*A+e*i},damp:function(A,i,e,t){return fn.lerp(A,i,1-Math.exp(-e*t))},pingpong:function(A,i=1){return i-Math.abs(fn.euclideanModulo(A,2*i)-i)},smoothstep:function(A,i,e){return A<=i?0:A>=e?1:(A=(A-i)/(e-i))*A*(3-2*A)},smootherstep:function(A,i,e){return A<=i?0:A>=e?1:(A=(A-i)/(e-i))*A*A*(A*(6*A-15)+10)},randInt:function(A,i){return A+Math.floor(Math.random()*(i-A+1))},randFloat:function(A,i){return A+Math.random()*(i-A)},randFloatSpread:function(A){return A*(.5-Math.random())},seededRandom:function(A){return void 0!==A&&(dn=A%2147483647),dn=16807*dn%2147483647,(dn-1)/2147483646},degToRad:function(A){return A*fn.DEG2RAD},radToDeg:function(A){return A*fn.RAD2DEG},isPowerOfTwo:function(A){return 0==(A&A-1)&&0!==A},ceilPowerOfTwo:function(A){return Math.pow(2,Math.ceil(Math.log(A)/Math.LN2))},floorPowerOfTwo:function(A){return Math.pow(2,Math.floor(Math.log(A)/Math.LN2))},setQuaternionFromProperEuler:function(A,i,e,t,C){const n=Math.cos,h=Math.sin,r=n(e/2),E=h(e/2),l=n((i+t)/2),o=h((i+t)/2),k=n((i-t)/2),g=h((i-t)/2),D=n((t-i)/2),a=h((t-i)/2);switch(C){case"XYX":A.set(r*o,E*k,E*g,r*l);break;case"YZY":A.set(E*g,r*o,E*k,r*l);break;case"ZXZ":A.set(E*k,E*g,r*o,r*l);break;case"XZX":A.set(r*o,E*a,E*D,r*l);break;case"YXY":A.set(E*D,r*o,E*a,r*l);break;case"ZYZ":A.set(E*a,E*D,r*o,r*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+C)}}};class pn{constructor(A=0,i=0){this.x=A,this.y=i}get width(){return this.x}set width(A){this.x=A}get height(){return this.y}set height(A){this.y=A}set(A,i){return this.x=A,this.y=i,this}setScalar(A){return this.x=A,this.y=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setComponent(A,i){switch(A){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y)}copy(A){return this.x=A.x,this.y=A.y,this}add(A,i){return void 0!==i?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(A,i)):(this.x+=A.x,this.y+=A.y,this)}addScalar(A){return this.x+=A,this.y+=A,this}addVectors(A,i){return this.x=A.x+i.x,this.y=A.y+i.y,this}addScaledVector(A,i){return this.x+=A.x*i,this.y+=A.y*i,this}sub(A,i){return void 0!==i?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(A,i)):(this.x-=A.x,this.y-=A.y,this)}subScalar(A){return this.x-=A,this.y-=A,this}subVectors(A,i){return this.x=A.x-i.x,this.y=A.y-i.y,this}multiply(A){return this.x*=A.x,this.y*=A.y,this}multiplyScalar(A){return this.x*=A,this.y*=A,this}divide(A){return this.x/=A.x,this.y/=A.y,this}divideScalar(A){return this.multiplyScalar(1/A)}applyMatrix3(A){const i=this.x,e=this.y,t=A.elements;return this.x=t[0]*i+t[3]*e+t[6],this.y=t[1]*i+t[4]*e+t[7],this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this}clamp(A,i){return this.x=Math.max(A.x,Math.min(i.x,this.x)),this.y=Math.max(A.y,Math.min(i.y,this.y)),this}clampScalar(A,i){return this.x=Math.max(A,Math.min(i,this.x)),this.y=Math.max(A,Math.min(i,this.y)),this}clampLength(A,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(A,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(A){return this.x*A.x+this.y*A.y}cross(A){return this.x*A.y-this.y*A.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const i=this.x-A.x,e=this.y-A.y;return i*i+e*e}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,i){return this.x+=(A.x-this.x)*i,this.y+=(A.y-this.y)*i,this}lerpVectors(A,i,e){return this.x=A.x+(i.x-A.x)*e,this.y=A.y+(i.y-A.y)*e,this}equals(A){return A.x===this.x&&A.y===this.y}fromArray(A,i=0){return this.x=A[i],this.y=A[i+1],this}toArray(A=[],i=0){return A[i]=this.x,A[i+1]=this.y,A}fromBufferAttribute(A,i,e){return void 0!==e&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=A.getX(i),this.y=A.getY(i),this}rotateAround(A,i){const e=Math.cos(i),t=Math.sin(i),C=this.x-A.x,n=this.y-A.y;return this.x=C*e-n*t+A.x,this.y=C*t+n*e+A.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}pn.prototype.isVector2=!0;class vn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(A,i,e,t,C,n,h,r,E){const l=this.elements;return l[0]=A,l[1]=t,l[2]=h,l[3]=i,l[4]=C,l[5]=r,l[6]=e,l[7]=n,l[8]=E,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(A){const i=this.elements,e=A.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],this}extractBasis(A,i,e){return A.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(A){const i=A.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,i){const e=A.elements,t=i.elements,C=this.elements,n=e[0],h=e[3],r=e[6],E=e[1],l=e[4],o=e[7],k=e[2],g=e[5],D=e[8],a=t[0],s=t[3],B=t[6],j=t[1],m=t[4],c=t[7],u=t[2],F=t[5],G=t[8];return C[0]=n*a+h*j+r*u,C[3]=n*s+h*m+r*F,C[6]=n*B+h*c+r*G,C[1]=E*a+l*j+o*u,C[4]=E*s+l*m+o*F,C[7]=E*B+l*c+o*G,C[2]=k*a+g*j+D*u,C[5]=k*s+g*m+D*F,C[8]=k*B+g*c+D*G,this}multiplyScalar(A){const i=this.elements;return i[0]*=A,i[3]*=A,i[6]*=A,i[1]*=A,i[4]*=A,i[7]*=A,i[2]*=A,i[5]*=A,i[8]*=A,this}determinant(){const A=this.elements,i=A[0],e=A[1],t=A[2],C=A[3],n=A[4],h=A[5],r=A[6],E=A[7],l=A[8];return i*n*l-i*h*E-e*C*l+e*h*r+t*C*E-t*n*r}invert(){const A=this.elements,i=A[0],e=A[1],t=A[2],C=A[3],n=A[4],h=A[5],r=A[6],E=A[7],l=A[8],o=l*n-h*E,k=h*r-l*C,g=E*C-n*r,D=i*o+e*k+t*g;if(0===D)return this.set(0,0,0,0,0,0,0,0,0);const a=1/D;return A[0]=o*a,A[1]=(t*E-l*e)*a,A[2]=(h*e-t*n)*a,A[3]=k*a,A[4]=(l*i-t*r)*a,A[5]=(t*C-h*i)*a,A[6]=g*a,A[7]=(e*r-E*i)*a,A[8]=(n*i-e*C)*a,this}transpose(){let A;const i=this.elements;return A=i[1],i[1]=i[3],i[3]=A,A=i[2],i[2]=i[6],i[6]=A,A=i[5],i[5]=i[7],i[7]=A,this}getNormalMatrix(A){return this.setFromMatrix4(A).invert().transpose()}transposeIntoArray(A){const i=this.elements;return A[0]=i[0],A[1]=i[3],A[2]=i[6],A[3]=i[1],A[4]=i[4],A[5]=i[7],A[6]=i[2],A[7]=i[5],A[8]=i[8],this}setUvTransform(A,i,e,t,C,n,h){const r=Math.cos(C),E=Math.sin(C);return this.set(e*r,e*E,-e*(r*n+E*h)+n+A,-t*E,t*r,-t*(-E*n+r*h)+h+i,0,0,1),this}scale(A,i){const e=this.elements;return e[0]*=A,e[3]*=A,e[6]*=A,e[1]*=i,e[4]*=i,e[7]*=i,this}rotate(A){const i=Math.cos(A),e=Math.sin(A),t=this.elements,C=t[0],n=t[3],h=t[6],r=t[1],E=t[4],l=t[7];return t[0]=i*C+e*r,t[3]=i*n+e*E,t[6]=i*h+e*l,t[1]=-e*C+i*r,t[4]=-e*n+i*E,t[7]=-e*h+i*l,this}translate(A,i){const e=this.elements;return e[0]+=A*e[2],e[3]+=A*e[5],e[6]+=A*e[8],e[1]+=i*e[2],e[4]+=i*e[5],e[7]+=i*e[8],this}equals(A){const i=this.elements,e=A.elements;for(let A=0;A<9;A++)if(i[A]!==e[A])return!1;return!0}fromArray(A,i=0){for(let e=0;e<9;e++)this.elements[e]=A[e+i];return this}toArray(A=[],i=0){const e=this.elements;return A[i]=e[0],A[i+1]=e[1],A[i+2]=e[2],A[i+3]=e[3],A[i+4]=e[4],A[i+5]=e[5],A[i+6]=e[6],A[i+7]=e[7],A[i+8]=e[8],A}clone(){return(new this.constructor).fromArray(this.elements)}}let Hn;vn.prototype.isMatrix3=!0;const In={getDataURL:function(A){if(/^data:/i.test(A.src))return A.src;if("undefined"==typeof HTMLCanvasElement)return A.src;let i;if(A instanceof HTMLCanvasElement)i=A;else{void 0===Hn&&(Hn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Hn.width=A.width,Hn.height=A.height;const e=Hn.getContext("2d");A instanceof ImageData?e.putImageData(A,0,0):e.drawImage(A,0,0,A.width,A.height),i=Hn}return i.width>2048||i.height>2048?i.toDataURL("image/jpeg",.6):i.toDataURL("image/png")}};let yn=0;class bn extends Fn{constructor(A=bn.DEFAULT_IMAGE,i=bn.DEFAULT_MAPPING,e=Ze,t=Ze,C=Ct,n=rt,h=dt,r=lt,E=1,l=TC){super(),Object.defineProperty(this,"id",{value:yn++}),this.uuid=fn.generateUUID(),this.name="",this.image=A,this.mipmaps=[],this.mapping=i,this.wrapS=e,this.wrapT=t,this.magFilter=C,this.minFilter=n,this.anisotropy=E,this.format=h,this.internalFormat=null,this.type=r,this.offset=new pn(0,0),this.repeat=new pn(1,1),this.center=new pn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(A){return this.name=A.name,this.image=A.image,this.mipmaps=A.mipmaps.slice(0),this.mapping=A.mapping,this.wrapS=A.wrapS,this.wrapT=A.wrapT,this.magFilter=A.magFilter,this.minFilter=A.minFilter,this.anisotropy=A.anisotropy,this.format=A.format,this.internalFormat=A.internalFormat,this.type=A.type,this.offset.copy(A.offset),this.repeat.copy(A.repeat),this.center.copy(A.center),this.rotation=A.rotation,this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrix.copy(A.matrix),this.generateMipmaps=A.generateMipmaps,this.premultiplyAlpha=A.premultiplyAlpha,this.flipY=A.flipY,this.unpackAlignment=A.unpackAlignment,this.encoding=A.encoding,this}toJSON(A){const i=void 0===A||"string"==typeof A;if(!i&&void 0!==A.textures[this.uuid])return A.textures[this.uuid];const e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const t=this.image;if(void 0===t.uuid&&(t.uuid=fn.generateUUID()),!i&&void 0===A.images[t.uuid]){let i;if(Array.isArray(t)){i=[];for(let A=0,e=t.length;A<e;A++)t[A].isDataTexture?i.push(Mn(t[A].image)):i.push(Mn(t[A]))}else i=Mn(t);A.images[t.uuid]={uuid:t.uuid,url:i}}e.image=t.uuid}return i||(A.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(A){if(this.mapping!==Ue)return A;if(A.applyMatrix3(this.matrix),A.x<0||A.x>1)switch(this.wrapS){case Xe:A.x=A.x-Math.floor(A.x);break;case Ze:A.x=A.x<0?0:1;break;case _e:1===Math.abs(Math.floor(A.x)%2)?A.x=Math.ceil(A.x)-A.x:A.x=A.x-Math.floor(A.x)}if(A.y<0||A.y>1)switch(this.wrapT){case Xe:A.y=A.y-Math.floor(A.y);break;case Ze:A.y=A.y<0?0:1;break;case _e:1===Math.abs(Math.floor(A.y)%2)?A.y=Math.ceil(A.y)-A.y:A.y=A.y-Math.floor(A.y)}return this.flipY&&(A.y=1-A.y),A}set needsUpdate(A){!0===A&&this.version++}}function Mn(A){return"undefined"!=typeof HTMLImageElement&&A instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&A instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&A instanceof ImageBitmap?In.getDataURL(A):A.data?{data:Array.prototype.slice.call(A.data),width:A.width,height:A.height,type:A.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}bn.DEFAULT_IMAGE=void 0,bn.DEFAULT_MAPPING=Ue,bn.prototype.isTexture=!0;class xn{constructor(A=0,i=0,e=0,t=1){this.x=A,this.y=i,this.z=e,this.w=t}get width(){return this.z}set width(A){this.z=A}get height(){return this.w}set height(A){this.w=A}set(A,i,e,t){return this.x=A,this.y=i,this.z=e,this.w=t,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this.w=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setW(A){return this.w=A,this}setComponent(A,i){switch(A){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;case 3:this.w=i;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this.w=void 0!==A.w?A.w:1,this}add(A,i){return void 0!==i?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(A,i)):(this.x+=A.x,this.y+=A.y,this.z+=A.z,this.w+=A.w,this)}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this.w+=A,this}addVectors(A,i){return this.x=A.x+i.x,this.y=A.y+i.y,this.z=A.z+i.z,this.w=A.w+i.w,this}addScaledVector(A,i){return this.x+=A.x*i,this.y+=A.y*i,this.z+=A.z*i,this.w+=A.w*i,this}sub(A,i){return void 0!==i?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(A,i)):(this.x-=A.x,this.y-=A.y,this.z-=A.z,this.w-=A.w,this)}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this.w-=A,this}subVectors(A,i){return this.x=A.x-i.x,this.y=A.y-i.y,this.z=A.z-i.z,this.w=A.w-i.w,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this.w*=A.w,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this.w*=A,this}applyMatrix4(A){const i=this.x,e=this.y,t=this.z,C=this.w,n=A.elements;return this.x=n[0]*i+n[4]*e+n[8]*t+n[12]*C,this.y=n[1]*i+n[5]*e+n[9]*t+n[13]*C,this.z=n[2]*i+n[6]*e+n[10]*t+n[14]*C,this.w=n[3]*i+n[7]*e+n[11]*t+n[15]*C,this}divideScalar(A){return this.multiplyScalar(1/A)}setAxisAngleFromQuaternion(A){this.w=2*Math.acos(A.w);const i=Math.sqrt(1-A.w*A.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=A.x/i,this.y=A.y/i,this.z=A.z/i),this}setAxisAngleFromRotationMatrix(A){let i,e,t,C;const n=A.elements,h=n[0],r=n[4],E=n[8],l=n[1],o=n[5],k=n[9],g=n[2],D=n[6],a=n[10];if(Math.abs(r-l)<.01&&Math.abs(E-g)<.01&&Math.abs(k-D)<.01){if(Math.abs(r+l)<.1&&Math.abs(E+g)<.1&&Math.abs(k+D)<.1&&Math.abs(h+o+a-3)<.1)return this.set(1,0,0,0),this;i=Math.PI;const A=(h+1)/2,n=(o+1)/2,s=(a+1)/2,B=(r+l)/4,j=(E+g)/4,m=(k+D)/4;return A>n&&A>s?A<.01?(e=0,t=.707106781,C=.707106781):(e=Math.sqrt(A),t=B/e,C=j/e):n>s?n<.01?(e=.707106781,t=0,C=.707106781):(t=Math.sqrt(n),e=B/t,C=m/t):s<.01?(e=.707106781,t=.707106781,C=0):(C=Math.sqrt(s),e=j/C,t=m/C),this.set(e,t,C,i),this}let s=Math.sqrt((D-k)*(D-k)+(E-g)*(E-g)+(l-r)*(l-r));return Math.abs(s)<.001&&(s=1),this.x=(D-k)/s,this.y=(E-g)/s,this.z=(l-r)/s,this.w=Math.acos((h+o+a-1)/2),this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this.w=Math.min(this.w,A.w),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this.w=Math.max(this.w,A.w),this}clamp(A,i){return this.x=Math.max(A.x,Math.min(i.x,this.x)),this.y=Math.max(A.y,Math.min(i.y,this.y)),this.z=Math.max(A.z,Math.min(i.z,this.z)),this.w=Math.max(A.w,Math.min(i.w,this.w)),this}clampScalar(A,i){return this.x=Math.max(A,Math.min(i,this.x)),this.y=Math.max(A,Math.min(i,this.y)),this.z=Math.max(A,Math.min(i,this.z)),this.w=Math.max(A,Math.min(i,this.w)),this}clampLength(A,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(A,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z+this.w*A.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,i){return this.x+=(A.x-this.x)*i,this.y+=(A.y-this.y)*i,this.z+=(A.z-this.z)*i,this.w+=(A.w-this.w)*i,this}lerpVectors(A,i,e){return this.x=A.x+(i.x-A.x)*e,this.y=A.y+(i.y-A.y)*e,this.z=A.z+(i.z-A.z)*e,this.w=A.w+(i.w-A.w)*e,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z&&A.w===this.w}fromArray(A,i=0){return this.x=A[i],this.y=A[i+1],this.z=A[i+2],this.w=A[i+3],this}toArray(A=[],i=0){return A[i]=this.x,A[i+1]=this.y,A[i+2]=this.z,A[i+3]=this.w,A}fromBufferAttribute(A,i,e){return void 0!==e&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=A.getX(i),this.y=A.getY(i),this.z=A.getZ(i),this.w=A.getW(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}xn.prototype.isVector4=!0;class wn extends Fn{constructor(A,i,e){super(),this.width=A,this.height=i,this.depth=1,this.scissor=new xn(0,0,A,i),this.scissorTest=!1,this.viewport=new xn(0,0,A,i),e=e||{},this.texture=new bn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.image={},this.texture.image.width=A,this.texture.image.height=i,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Ct,this.depthBuffer=void 0===e.depthBuffer||e.depthBuffer,this.stencilBuffer=void 0!==e.stencilBuffer&&e.stencilBuffer,this.depthTexture=void 0!==e.depthTexture?e.depthTexture:null}setTexture(A){A.image={width:this.width,height:this.height,depth:this.depth},this.texture=A}setSize(A,i,e=1){this.width===A&&this.height===i&&this.depth===e||(this.width=A,this.height=i,this.depth=e,this.texture.image.width=A,this.texture.image.height=i,this.texture.image.depth=e,this.dispose()),this.viewport.set(0,0,A,i),this.scissor.set(0,0,A,i)}clone(){return(new this.constructor).copy(this)}copy(A){return this.width=A.width,this.height=A.height,this.depth=A.depth,this.viewport.copy(A.viewport),this.texture=A.texture.clone(),this.depthBuffer=A.depthBuffer,this.stencilBuffer=A.stencilBuffer,this.depthTexture=A.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}wn.prototype.isWebGLRenderTarget=!0;class Sn extends wn{constructor(A,i,e){super(A,i,e),this.samples=4}copy(A){return super.copy.call(this,A),this.samples=A.samples,this}}Sn.prototype.isWebGLMultisampleRenderTarget=!0;class Tn{constructor(A=0,i=0,e=0,t=1){this._x=A,this._y=i,this._z=e,this._w=t}static slerp(A,i,e,t){return e.copy(A).slerp(i,t)}static slerpFlat(A,i,e,t,C,n,h){let r=e[t+0],E=e[t+1],l=e[t+2],o=e[t+3];const k=C[n+0],g=C[n+1],D=C[n+2],a=C[n+3];if(0===h)return A[i+0]=r,A[i+1]=E,A[i+2]=l,void(A[i+3]=o);if(1===h)return A[i+0]=k,A[i+1]=g,A[i+2]=D,void(A[i+3]=a);if(o!==a||r!==k||E!==g||l!==D){let A=1-h;const i=r*k+E*g+l*D+o*a,e=i>=0?1:-1,t=1-i*i;if(t>Number.EPSILON){const C=Math.sqrt(t),n=Math.atan2(C,i*e);A=Math.sin(A*n)/C,h=Math.sin(h*n)/C}const C=h*e;if(r=r*A+k*C,E=E*A+g*C,l=l*A+D*C,o=o*A+a*C,A===1-h){const A=1/Math.sqrt(r*r+E*E+l*l+o*o);r*=A,E*=A,l*=A,o*=A}}A[i]=r,A[i+1]=E,A[i+2]=l,A[i+3]=o}static multiplyQuaternionsFlat(A,i,e,t,C,n){const h=e[t],r=e[t+1],E=e[t+2],l=e[t+3],o=C[n],k=C[n+1],g=C[n+2],D=C[n+3];return A[i]=h*D+l*o+r*g-E*k,A[i+1]=r*D+l*k+E*o-h*g,A[i+2]=E*D+l*g+h*k-r*o,A[i+3]=l*D-h*o-r*k-E*g,A}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get w(){return this._w}set w(A){this._w=A,this._onChangeCallback()}set(A,i,e,t){return this._x=A,this._y=i,this._z=e,this._w=t,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(A){return this._x=A.x,this._y=A.y,this._z=A.z,this._w=A.w,this._onChangeCallback(),this}setFromEuler(A,i){if(!A||!A.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const e=A._x,t=A._y,C=A._z,n=A._order,h=Math.cos,r=Math.sin,E=h(e/2),l=h(t/2),o=h(C/2),k=r(e/2),g=r(t/2),D=r(C/2);switch(n){case"XYZ":this._x=k*l*o+E*g*D,this._y=E*g*o-k*l*D,this._z=E*l*D+k*g*o,this._w=E*l*o-k*g*D;break;case"YXZ":this._x=k*l*o+E*g*D,this._y=E*g*o-k*l*D,this._z=E*l*D-k*g*o,this._w=E*l*o+k*g*D;break;case"ZXY":this._x=k*l*o-E*g*D,this._y=E*g*o+k*l*D,this._z=E*l*D+k*g*o,this._w=E*l*o-k*g*D;break;case"ZYX":this._x=k*l*o-E*g*D,this._y=E*g*o+k*l*D,this._z=E*l*D-k*g*o,this._w=E*l*o+k*g*D;break;case"YZX":this._x=k*l*o+E*g*D,this._y=E*g*o+k*l*D,this._z=E*l*D-k*g*o,this._w=E*l*o-k*g*D;break;case"XZY":this._x=k*l*o-E*g*D,this._y=E*g*o-k*l*D,this._z=E*l*D+k*g*o,this._w=E*l*o+k*g*D;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return!1!==i&&this._onChangeCallback(),this}setFromAxisAngle(A,i){const e=i/2,t=Math.sin(e);return this._x=A.x*t,this._y=A.y*t,this._z=A.z*t,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(A){const i=A.elements,e=i[0],t=i[4],C=i[8],n=i[1],h=i[5],r=i[9],E=i[2],l=i[6],o=i[10],k=e+h+o;if(k>0){const A=.5/Math.sqrt(k+1);this._w=.25/A,this._x=(l-r)*A,this._y=(C-E)*A,this._z=(n-t)*A}else if(e>h&&e>o){const A=2*Math.sqrt(1+e-h-o);this._w=(l-r)/A,this._x=.25*A,this._y=(t+n)/A,this._z=(C+E)/A}else if(h>o){const A=2*Math.sqrt(1+h-e-o);this._w=(C-E)/A,this._x=(t+n)/A,this._y=.25*A,this._z=(r+l)/A}else{const A=2*Math.sqrt(1+o-e-h);this._w=(n-t)/A,this._x=(C+E)/A,this._y=(r+l)/A,this._z=.25*A}return this._onChangeCallback(),this}setFromUnitVectors(A,i){let e=A.dot(i)+1;return e<1e-6?(e=0,Math.abs(A.x)>Math.abs(A.z)?(this._x=-A.y,this._y=A.x,this._z=0,this._w=e):(this._x=0,this._y=-A.z,this._z=A.y,this._w=e)):(this._x=A.y*i.z-A.z*i.y,this._y=A.z*i.x-A.x*i.z,this._z=A.x*i.y-A.y*i.x,this._w=e),this.normalize()}angleTo(A){return 2*Math.acos(Math.abs(fn.clamp(this.dot(A),-1,1)))}rotateTowards(A,i){const e=this.angleTo(A);if(0===e)return this;const t=Math.min(1,i/e);return this.slerp(A,t),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(A){return this._x*A._x+this._y*A._y+this._z*A._z+this._w*A._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let A=this.length();return 0===A?(this._x=0,this._y=0,this._z=0,this._w=1):(A=1/A,this._x=this._x*A,this._y=this._y*A,this._z=this._z*A,this._w=this._w*A),this._onChangeCallback(),this}multiply(A,i){return void 0!==i?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(A,i)):this.multiplyQuaternions(this,A)}premultiply(A){return this.multiplyQuaternions(A,this)}multiplyQuaternions(A,i){const e=A._x,t=A._y,C=A._z,n=A._w,h=i._x,r=i._y,E=i._z,l=i._w;return this._x=e*l+n*h+t*E-C*r,this._y=t*l+n*r+C*h-e*E,this._z=C*l+n*E+e*r-t*h,this._w=n*l-e*h-t*r-C*E,this._onChangeCallback(),this}slerp(A,i){if(0===i)return this;if(1===i)return this.copy(A);const e=this._x,t=this._y,C=this._z,n=this._w;let h=n*A._w+e*A._x+t*A._y+C*A._z;if(h<0?(this._w=-A._w,this._x=-A._x,this._y=-A._y,this._z=-A._z,h=-h):this.copy(A),h>=1)return this._w=n,this._x=e,this._y=t,this._z=C,this;const r=1-h*h;if(r<=Number.EPSILON){const A=1-i;return this._w=A*n+i*this._w,this._x=A*e+i*this._x,this._y=A*t+i*this._y,this._z=A*C+i*this._z,this.normalize(),this._onChangeCallback(),this}const E=Math.sqrt(r),l=Math.atan2(E,h),o=Math.sin((1-i)*l)/E,k=Math.sin(i*l)/E;return this._w=n*o+this._w*k,this._x=e*o+this._x*k,this._y=t*o+this._y*k,this._z=C*o+this._z*k,this._onChangeCallback(),this}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._w===this._w}fromArray(A,i=0){return this._x=A[i],this._y=A[i+1],this._z=A[i+2],this._w=A[i+3],this._onChangeCallback(),this}toArray(A=[],i=0){return A[i]=this._x,A[i+1]=this._y,A[i+2]=this._z,A[i+3]=this._w,A}fromBufferAttribute(A,i){return this._x=A.getX(i),this._y=A.getY(i),this._z=A.getZ(i),this._w=A.getW(i),this}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}}Tn.prototype.isQuaternion=!0;class Ln{constructor(A=0,i=0,e=0){this.x=A,this.y=i,this.z=e}set(A,i,e){return void 0===e&&(e=this.z),this.x=A,this.y=i,this.z=e,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setComponent(A,i){switch(A){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this}add(A,i){return void 0!==i?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(A,i)):(this.x+=A.x,this.y+=A.y,this.z+=A.z,this)}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this}addVectors(A,i){return this.x=A.x+i.x,this.y=A.y+i.y,this.z=A.z+i.z,this}addScaledVector(A,i){return this.x+=A.x*i,this.y+=A.y*i,this.z+=A.z*i,this}sub(A,i){return void 0!==i?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(A,i)):(this.x-=A.x,this.y-=A.y,this.z-=A.z,this)}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this}subVectors(A,i){return this.x=A.x-i.x,this.y=A.y-i.y,this.z=A.z-i.z,this}multiply(A,i){return void 0!==i?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(A,i)):(this.x*=A.x,this.y*=A.y,this.z*=A.z,this)}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this}multiplyVectors(A,i){return this.x=A.x*i.x,this.y=A.y*i.y,this.z=A.z*i.z,this}applyEuler(A){return A&&A.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Pn.setFromEuler(A))}applyAxisAngle(A,i){return this.applyQuaternion(Pn.setFromAxisAngle(A,i))}applyMatrix3(A){const i=this.x,e=this.y,t=this.z,C=A.elements;return this.x=C[0]*i+C[3]*e+C[6]*t,this.y=C[1]*i+C[4]*e+C[7]*t,this.z=C[2]*i+C[5]*e+C[8]*t,this}applyNormalMatrix(A){return this.applyMatrix3(A).normalize()}applyMatrix4(A){const i=this.x,e=this.y,t=this.z,C=A.elements,n=1/(C[3]*i+C[7]*e+C[11]*t+C[15]);return this.x=(C[0]*i+C[4]*e+C[8]*t+C[12])*n,this.y=(C[1]*i+C[5]*e+C[9]*t+C[13])*n,this.z=(C[2]*i+C[6]*e+C[10]*t+C[14])*n,this}applyQuaternion(A){const i=this.x,e=this.y,t=this.z,C=A.x,n=A.y,h=A.z,r=A.w,E=r*i+n*t-h*e,l=r*e+h*i-C*t,o=r*t+C*e-n*i,k=-C*i-n*e-h*t;return this.x=E*r+k*-C+l*-h-o*-n,this.y=l*r+k*-n+o*-C-E*-h,this.z=o*r+k*-h+E*-n-l*-C,this}project(A){return this.applyMatrix4(A.matrixWorldInverse).applyMatrix4(A.projectionMatrix)}unproject(A){return this.applyMatrix4(A.projectionMatrixInverse).applyMatrix4(A.matrixWorld)}transformDirection(A){const i=this.x,e=this.y,t=this.z,C=A.elements;return this.x=C[0]*i+C[4]*e+C[8]*t,this.y=C[1]*i+C[5]*e+C[9]*t,this.z=C[2]*i+C[6]*e+C[10]*t,this.normalize()}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this}divideScalar(A){return this.multiplyScalar(1/A)}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this}clamp(A,i){return this.x=Math.max(A.x,Math.min(i.x,this.x)),this.y=Math.max(A.y,Math.min(i.y,this.y)),this.z=Math.max(A.z,Math.min(i.z,this.z)),this}clampScalar(A,i){return this.x=Math.max(A,Math.min(i,this.x)),this.y=Math.max(A,Math.min(i,this.y)),this.z=Math.max(A,Math.min(i,this.z)),this}clampLength(A,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(A,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,i){return this.x+=(A.x-this.x)*i,this.y+=(A.y-this.y)*i,this.z+=(A.z-this.z)*i,this}lerpVectors(A,i,e){return this.x=A.x+(i.x-A.x)*e,this.y=A.y+(i.y-A.y)*e,this.z=A.z+(i.z-A.z)*e,this}cross(A,i){return void 0!==i?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(A,i)):this.crossVectors(this,A)}crossVectors(A,i){const e=A.x,t=A.y,C=A.z,n=i.x,h=i.y,r=i.z;return this.x=t*r-C*h,this.y=C*n-e*r,this.z=e*h-t*n,this}projectOnVector(A){const i=A.lengthSq();if(0===i)return this.set(0,0,0);const e=A.dot(this)/i;return this.copy(A).multiplyScalar(e)}projectOnPlane(A){return Rn.copy(this).projectOnVector(A),this.sub(Rn)}reflect(A){return this.sub(Rn.copy(A).multiplyScalar(2*this.dot(A)))}angleTo(A){const i=Math.sqrt(this.lengthSq()*A.lengthSq());if(0===i)return Math.PI/2;const e=this.dot(A)/i;return Math.acos(fn.clamp(e,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const i=this.x-A.x,e=this.y-A.y,t=this.z-A.z;return i*i+e*e+t*t}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)+Math.abs(this.z-A.z)}setFromSpherical(A){return this.setFromSphericalCoords(A.radius,A.phi,A.theta)}setFromSphericalCoords(A,i,e){const t=Math.sin(i)*A;return this.x=t*Math.sin(e),this.y=Math.cos(i)*A,this.z=t*Math.cos(e),this}setFromCylindrical(A){return this.setFromCylindricalCoords(A.radius,A.theta,A.y)}setFromCylindricalCoords(A,i,e){return this.x=A*Math.sin(i),this.y=e,this.z=A*Math.cos(i),this}setFromMatrixPosition(A){const i=A.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(A){const i=this.setFromMatrixColumn(A,0).length(),e=this.setFromMatrixColumn(A,1).length(),t=this.setFromMatrixColumn(A,2).length();return this.x=i,this.y=e,this.z=t,this}setFromMatrixColumn(A,i){return this.fromArray(A.elements,4*i)}setFromMatrix3Column(A,i){return this.fromArray(A.elements,3*i)}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z}fromArray(A,i=0){return this.x=A[i],this.y=A[i+1],this.z=A[i+2],this}toArray(A=[],i=0){return A[i]=this.x,A[i+1]=this.y,A[i+2]=this.z,A}fromBufferAttribute(A,i,e){return void 0!==e&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=A.getX(i),this.y=A.getY(i),this.z=A.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}Ln.prototype.isVector3=!0;const Rn=new Ln,Pn=new Tn;class On{constructor(A=new Ln(1/0,1/0,1/0),i=new Ln(-1/0,-1/0,-1/0)){this.min=A,this.max=i}set(A,i){return this.min.copy(A),this.max.copy(i),this}setFromArray(A){let i=1/0,e=1/0,t=1/0,C=-1/0,n=-1/0,h=-1/0;for(let r=0,E=A.length;r<E;r+=3){const E=A[r],l=A[r+1],o=A[r+2];E<i&&(i=E),l<e&&(e=l),o<t&&(t=o),E>C&&(C=E),l>n&&(n=l),o>h&&(h=o)}return this.min.set(i,e,t),this.max.set(C,n,h),this}setFromBufferAttribute(A){let i=1/0,e=1/0,t=1/0,C=-1/0,n=-1/0,h=-1/0;for(let r=0,E=A.count;r<E;r++){const E=A.getX(r),l=A.getY(r),o=A.getZ(r);E<i&&(i=E),l<e&&(e=l),o<t&&(t=o),E>C&&(C=E),l>n&&(n=l),o>h&&(h=o)}return this.min.set(i,e,t),this.max.set(C,n,h),this}setFromPoints(A){this.makeEmpty();for(let i=0,e=A.length;i<e;i++)this.expandByPoint(A[i]);return this}setFromCenterAndSize(A,i){const e=Jn.copy(i).multiplyScalar(.5);return this.min.copy(A).sub(e),this.max.copy(A).add(e),this}setFromObject(A){return this.makeEmpty(),this.expandByObject(A)}clone(){return(new this.constructor).copy(this)}copy(A){return this.min.copy(A.min),this.max.copy(A.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(A){return void 0===A&&(console.warn("THREE.Box3: .getCenter() target is now required"),A=new Ln),this.isEmpty()?A.set(0,0,0):A.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(A){return void 0===A&&(console.warn("THREE.Box3: .getSize() target is now required"),A=new Ln),this.isEmpty()?A.set(0,0,0):A.subVectors(this.max,this.min)}expandByPoint(A){return this.min.min(A),this.max.max(A),this}expandByVector(A){return this.min.sub(A),this.max.add(A),this}expandByScalar(A){return this.min.addScalar(-A),this.max.addScalar(A),this}expandByObject(A){A.updateWorldMatrix(!1,!1);const i=A.geometry;void 0!==i&&(null===i.boundingBox&&i.computeBoundingBox(),Kn.copy(i.boundingBox),Kn.applyMatrix4(A.matrixWorld),this.union(Kn));const e=A.children;for(let A=0,i=e.length;A<i;A++)this.expandByObject(e[A]);return this}containsPoint(A){return!(A.x<this.min.x||A.x>this.max.x||A.y<this.min.y||A.y>this.max.y||A.z<this.min.z||A.z>this.max.z)}containsBox(A){return this.min.x<=A.min.x&&A.max.x<=this.max.x&&this.min.y<=A.min.y&&A.max.y<=this.max.y&&this.min.z<=A.min.z&&A.max.z<=this.max.z}getParameter(A,i){return void 0===i&&(console.warn("THREE.Box3: .getParameter() target is now required"),i=new Ln),i.set((A.x-this.min.x)/(this.max.x-this.min.x),(A.y-this.min.y)/(this.max.y-this.min.y),(A.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(A){return!(A.max.x<this.min.x||A.min.x>this.max.x||A.max.y<this.min.y||A.min.y>this.max.y||A.max.z<this.min.z||A.min.z>this.max.z)}intersectsSphere(A){return this.clampPoint(A.center,Jn),Jn.distanceToSquared(A.center)<=A.radius*A.radius}intersectsPlane(A){let i,e;return A.normal.x>0?(i=A.normal.x*this.min.x,e=A.normal.x*this.max.x):(i=A.normal.x*this.max.x,e=A.normal.x*this.min.x),A.normal.y>0?(i+=A.normal.y*this.min.y,e+=A.normal.y*this.max.y):(i+=A.normal.y*this.max.y,e+=A.normal.y*this.min.y),A.normal.z>0?(i+=A.normal.z*this.min.z,e+=A.normal.z*this.max.z):(i+=A.normal.z*this.max.z,e+=A.normal.z*this.min.z),i<=-A.constant&&e>=-A.constant}intersectsTriangle(A){if(this.isEmpty())return!1;this.getCenter(Yn),Xn.subVectors(this.max,Yn),Un.subVectors(A.a,Yn),Vn.subVectors(A.b,Yn),Wn.subVectors(A.c,Yn),zn.subVectors(Vn,Un),qn.subVectors(Wn,Vn),Qn.subVectors(Un,Wn);let i=[0,-zn.z,zn.y,0,-qn.z,qn.y,0,-Qn.z,Qn.y,zn.z,0,-zn.x,qn.z,0,-qn.x,Qn.z,0,-Qn.x,-zn.y,zn.x,0,-qn.y,qn.x,0,-Qn.y,Qn.x,0];return!!$n(i,Un,Vn,Wn,Xn)&&(i=[1,0,0,0,1,0,0,0,1],!!$n(i,Un,Vn,Wn,Xn)&&(Zn.crossVectors(zn,qn),i=[Zn.x,Zn.y,Zn.z],$n(i,Un,Vn,Wn,Xn)))}clampPoint(A,i){return void 0===i&&(console.warn("THREE.Box3: .clampPoint() target is now required"),i=new Ln),i.copy(A).clamp(this.min,this.max)}distanceToPoint(A){return Jn.copy(A).clamp(this.min,this.max).sub(A).length()}getBoundingSphere(A){return void 0===A&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(A.center),A.radius=.5*this.getSize(Jn).length(),A}intersect(A){return this.min.max(A.min),this.max.min(A.max),this.isEmpty()&&this.makeEmpty(),this}union(A){return this.min.min(A.min),this.max.max(A.max),this}applyMatrix4(A){return this.isEmpty()||(Nn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(A),Nn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(A),Nn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(A),Nn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(A),Nn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(A),Nn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(A),Nn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(A),Nn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(A),this.setFromPoints(Nn)),this}translate(A){return this.min.add(A),this.max.add(A),this}equals(A){return A.min.equals(this.min)&&A.max.equals(this.max)}}On.prototype.isBox3=!0;const Nn=[new Ln,new Ln,new Ln,new Ln,new Ln,new Ln,new Ln,new Ln],Jn=new Ln,Kn=new On,Un=new Ln,Vn=new Ln,Wn=new Ln,zn=new Ln,qn=new Ln,Qn=new Ln,Yn=new Ln,Xn=new Ln,Zn=new Ln,_n=new Ln;function $n(A,i,e,t,C){for(let n=0,h=A.length-3;n<=h;n+=3){_n.fromArray(A,n);const h=C.x*Math.abs(_n.x)+C.y*Math.abs(_n.y)+C.z*Math.abs(_n.z),r=i.dot(_n),E=e.dot(_n),l=t.dot(_n);if(Math.max(-Math.max(r,E,l),Math.min(r,E,l))>h)return!1}return!0}const Ah=new On;class ih{constructor(A=new Ln,i=-1){this.center=A,this.radius=i}set(A,i){return this.center.copy(A),this.radius=i,this}setFromPoints(A,i){const e=this.center;void 0!==i?e.copy(i):Ah.setFromPoints(A).getCenter(e);let t=0;for(let i=0,C=A.length;i<C;i++)t=Math.max(t,e.distanceToSquared(A[i]));return this.radius=Math.sqrt(t),this}copy(A){return this.center.copy(A.center),this.radius=A.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(A){return A.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(A){return A.distanceTo(this.center)-this.radius}intersectsSphere(A){const i=this.radius+A.radius;return A.center.distanceToSquared(this.center)<=i*i}intersectsBox(A){return A.intersectsSphere(this)}intersectsPlane(A){return Math.abs(A.distanceToPoint(this.center))<=this.radius}clampPoint(A,i){const e=this.center.distanceToSquared(A);return void 0===i&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),i=new Ln),i.copy(A),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(A){return void 0===A&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),A=new On),this.isEmpty()?(A.makeEmpty(),A):(A.set(this.center,this.center),A.expandByScalar(this.radius),A)}applyMatrix4(A){return this.center.applyMatrix4(A),this.radius=this.radius*A.getMaxScaleOnAxis(),this}translate(A){return this.center.add(A),this}equals(A){return A.center.equals(this.center)&&A.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const eh=new Ln,th=new Ln,Ch=new Ln,nh=new Ln,hh=new Ln,rh=new Ln,Eh=new Ln;class lh{constructor(A=new Ln,i=new Ln(0,0,-1)){this.origin=A,this.direction=i}set(A,i){return this.origin.copy(A),this.direction.copy(i),this}copy(A){return this.origin.copy(A.origin),this.direction.copy(A.direction),this}at(A,i){return void 0===i&&(console.warn("THREE.Ray: .at() target is now required"),i=new Ln),i.copy(this.direction).multiplyScalar(A).add(this.origin)}lookAt(A){return this.direction.copy(A).sub(this.origin).normalize(),this}recast(A){return this.origin.copy(this.at(A,eh)),this}closestPointToPoint(A,i){void 0===i&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),i=new Ln),i.subVectors(A,this.origin);const e=i.dot(this.direction);return e<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(A){return Math.sqrt(this.distanceSqToPoint(A))}distanceSqToPoint(A){const i=eh.subVectors(A,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(A):(eh.copy(this.direction).multiplyScalar(i).add(this.origin),eh.distanceToSquared(A))}distanceSqToSegment(A,i,e,t){th.copy(A).add(i).multiplyScalar(.5),Ch.copy(i).sub(A).normalize(),nh.copy(this.origin).sub(th);const C=.5*A.distanceTo(i),n=-this.direction.dot(Ch),h=nh.dot(this.direction),r=-nh.dot(Ch),E=nh.lengthSq(),l=Math.abs(1-n*n);let o,k,g,D;if(l>0)if(o=n*r-h,k=n*h-r,D=C*l,o>=0)if(k>=-D)if(k<=D){const A=1/l;o*=A,k*=A,g=o*(o+n*k+2*h)+k*(n*o+k+2*r)+E}else k=C,o=Math.max(0,-(n*k+h)),g=-o*o+k*(k+2*r)+E;else k=-C,o=Math.max(0,-(n*k+h)),g=-o*o+k*(k+2*r)+E;else k<=-D?(o=Math.max(0,-(-n*C+h)),k=o>0?-C:Math.min(Math.max(-C,-r),C),g=-o*o+k*(k+2*r)+E):k<=D?(o=0,k=Math.min(Math.max(-C,-r),C),g=k*(k+2*r)+E):(o=Math.max(0,-(n*C+h)),k=o>0?C:Math.min(Math.max(-C,-r),C),g=-o*o+k*(k+2*r)+E);else k=n>0?-C:C,o=Math.max(0,-(n*k+h)),g=-o*o+k*(k+2*r)+E;return e&&e.copy(this.direction).multiplyScalar(o).add(this.origin),t&&t.copy(Ch).multiplyScalar(k).add(th),g}intersectSphere(A,i){eh.subVectors(A.center,this.origin);const e=eh.dot(this.direction),t=eh.dot(eh)-e*e,C=A.radius*A.radius;if(t>C)return null;const n=Math.sqrt(C-t),h=e-n,r=e+n;return h<0&&r<0?null:h<0?this.at(r,i):this.at(h,i)}intersectsSphere(A){return this.distanceSqToPoint(A.center)<=A.radius*A.radius}distanceToPlane(A){const i=A.normal.dot(this.direction);if(0===i)return 0===A.distanceToPoint(this.origin)?0:null;const e=-(this.origin.dot(A.normal)+A.constant)/i;return e>=0?e:null}intersectPlane(A,i){const e=this.distanceToPlane(A);return null===e?null:this.at(e,i)}intersectsPlane(A){const i=A.distanceToPoint(this.origin);if(0===i)return!0;return A.normal.dot(this.direction)*i<0}intersectBox(A,i){let e,t,C,n,h,r;const E=1/this.direction.x,l=1/this.direction.y,o=1/this.direction.z,k=this.origin;return E>=0?(e=(A.min.x-k.x)*E,t=(A.max.x-k.x)*E):(e=(A.max.x-k.x)*E,t=(A.min.x-k.x)*E),l>=0?(C=(A.min.y-k.y)*l,n=(A.max.y-k.y)*l):(C=(A.max.y-k.y)*l,n=(A.min.y-k.y)*l),e>n||C>t?null:((C>e||e!=e)&&(e=C),(n<t||t!=t)&&(t=n),o>=0?(h=(A.min.z-k.z)*o,r=(A.max.z-k.z)*o):(h=(A.max.z-k.z)*o,r=(A.min.z-k.z)*o),e>r||h>t?null:((h>e||e!=e)&&(e=h),(r<t||t!=t)&&(t=r),t<0?null:this.at(e>=0?e:t,i)))}intersectsBox(A){return null!==this.intersectBox(A,eh)}intersectTriangle(A,i,e,t,C){hh.subVectors(i,A),rh.subVectors(e,A),Eh.crossVectors(hh,rh);let n,h=this.direction.dot(Eh);if(h>0){if(t)return null;n=1}else{if(!(h<0))return null;n=-1,h=-h}nh.subVectors(this.origin,A);const r=n*this.direction.dot(rh.crossVectors(nh,rh));if(r<0)return null;const E=n*this.direction.dot(hh.cross(nh));if(E<0)return null;if(r+E>h)return null;const l=-n*nh.dot(Eh);return l<0?null:this.at(l/h,C)}applyMatrix4(A){return this.origin.applyMatrix4(A),this.direction.transformDirection(A),this}equals(A){return A.origin.equals(this.origin)&&A.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class oh{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(A,i,e,t,C,n,h,r,E,l,o,k,g,D,a,s){const B=this.elements;return B[0]=A,B[4]=i,B[8]=e,B[12]=t,B[1]=C,B[5]=n,B[9]=h,B[13]=r,B[2]=E,B[6]=l,B[10]=o,B[14]=k,B[3]=g,B[7]=D,B[11]=a,B[15]=s,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new oh).fromArray(this.elements)}copy(A){const i=this.elements,e=A.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],this}copyPosition(A){const i=this.elements,e=A.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}setFromMatrix3(A){const i=A.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(A,i,e){return A.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(A,i,e){return this.set(A.x,i.x,e.x,0,A.y,i.y,e.y,0,A.z,i.z,e.z,0,0,0,0,1),this}extractRotation(A){const i=this.elements,e=A.elements,t=1/kh.setFromMatrixColumn(A,0).length(),C=1/kh.setFromMatrixColumn(A,1).length(),n=1/kh.setFromMatrixColumn(A,2).length();return i[0]=e[0]*t,i[1]=e[1]*t,i[2]=e[2]*t,i[3]=0,i[4]=e[4]*C,i[5]=e[5]*C,i[6]=e[6]*C,i[7]=0,i[8]=e[8]*n,i[9]=e[9]*n,i[10]=e[10]*n,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(A){A&&A.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const i=this.elements,e=A.x,t=A.y,C=A.z,n=Math.cos(e),h=Math.sin(e),r=Math.cos(t),E=Math.sin(t),l=Math.cos(C),o=Math.sin(C);if("XYZ"===A.order){const A=n*l,e=n*o,t=h*l,C=h*o;i[0]=r*l,i[4]=-r*o,i[8]=E,i[1]=e+t*E,i[5]=A-C*E,i[9]=-h*r,i[2]=C-A*E,i[6]=t+e*E,i[10]=n*r}else if("YXZ"===A.order){const A=r*l,e=r*o,t=E*l,C=E*o;i[0]=A+C*h,i[4]=t*h-e,i[8]=n*E,i[1]=n*o,i[5]=n*l,i[9]=-h,i[2]=e*h-t,i[6]=C+A*h,i[10]=n*r}else if("ZXY"===A.order){const A=r*l,e=r*o,t=E*l,C=E*o;i[0]=A-C*h,i[4]=-n*o,i[8]=t+e*h,i[1]=e+t*h,i[5]=n*l,i[9]=C-A*h,i[2]=-n*E,i[6]=h,i[10]=n*r}else if("ZYX"===A.order){const A=n*l,e=n*o,t=h*l,C=h*o;i[0]=r*l,i[4]=t*E-e,i[8]=A*E+C,i[1]=r*o,i[5]=C*E+A,i[9]=e*E-t,i[2]=-E,i[6]=h*r,i[10]=n*r}else if("YZX"===A.order){const A=n*r,e=n*E,t=h*r,C=h*E;i[0]=r*l,i[4]=C-A*o,i[8]=t*o+e,i[1]=o,i[5]=n*l,i[9]=-h*l,i[2]=-E*l,i[6]=e*o+t,i[10]=A-C*o}else if("XZY"===A.order){const A=n*r,e=n*E,t=h*r,C=h*E;i[0]=r*l,i[4]=-o,i[8]=E*l,i[1]=A*o+C,i[5]=n*l,i[9]=e*o-t,i[2]=t*o-e,i[6]=h*l,i[10]=C*o+A}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(A){return this.compose(Dh,A,ah)}lookAt(A,i,e){const t=this.elements;return jh.subVectors(A,i),0===jh.lengthSq()&&(jh.z=1),jh.normalize(),sh.crossVectors(e,jh),0===sh.lengthSq()&&(1===Math.abs(e.z)?jh.x+=1e-4:jh.z+=1e-4,jh.normalize(),sh.crossVectors(e,jh)),sh.normalize(),Bh.crossVectors(jh,sh),t[0]=sh.x,t[4]=Bh.x,t[8]=jh.x,t[1]=sh.y,t[5]=Bh.y,t[9]=jh.y,t[2]=sh.z,t[6]=Bh.z,t[10]=jh.z,this}multiply(A,i){return void 0!==i?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(A,i)):this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,i){const e=A.elements,t=i.elements,C=this.elements,n=e[0],h=e[4],r=e[8],E=e[12],l=e[1],o=e[5],k=e[9],g=e[13],D=e[2],a=e[6],s=e[10],B=e[14],j=e[3],m=e[7],c=e[11],u=e[15],F=t[0],G=t[4],d=t[8],f=t[12],p=t[1],v=t[5],H=t[9],I=t[13],y=t[2],b=t[6],M=t[10],x=t[14],w=t[3],S=t[7],T=t[11],L=t[15];return C[0]=n*F+h*p+r*y+E*w,C[4]=n*G+h*v+r*b+E*S,C[8]=n*d+h*H+r*M+E*T,C[12]=n*f+h*I+r*x+E*L,C[1]=l*F+o*p+k*y+g*w,C[5]=l*G+o*v+k*b+g*S,C[9]=l*d+o*H+k*M+g*T,C[13]=l*f+o*I+k*x+g*L,C[2]=D*F+a*p+s*y+B*w,C[6]=D*G+a*v+s*b+B*S,C[10]=D*d+a*H+s*M+B*T,C[14]=D*f+a*I+s*x+B*L,C[3]=j*F+m*p+c*y+u*w,C[7]=j*G+m*v+c*b+u*S,C[11]=j*d+m*H+c*M+u*T,C[15]=j*f+m*I+c*x+u*L,this}multiplyScalar(A){const i=this.elements;return i[0]*=A,i[4]*=A,i[8]*=A,i[12]*=A,i[1]*=A,i[5]*=A,i[9]*=A,i[13]*=A,i[2]*=A,i[6]*=A,i[10]*=A,i[14]*=A,i[3]*=A,i[7]*=A,i[11]*=A,i[15]*=A,this}determinant(){const A=this.elements,i=A[0],e=A[4],t=A[8],C=A[12],n=A[1],h=A[5],r=A[9],E=A[13],l=A[2],o=A[6],k=A[10],g=A[14];return A[3]*(+C*r*o-t*E*o-C*h*k+e*E*k+t*h*g-e*r*g)+A[7]*(+i*r*g-i*E*k+C*n*k-t*n*g+t*E*l-C*r*l)+A[11]*(+i*E*o-i*h*g-C*n*o+e*n*g+C*h*l-e*E*l)+A[15]*(-t*h*l-i*r*o+i*h*k+t*n*o-e*n*k+e*r*l)}transpose(){const A=this.elements;let i;return i=A[1],A[1]=A[4],A[4]=i,i=A[2],A[2]=A[8],A[8]=i,i=A[6],A[6]=A[9],A[9]=i,i=A[3],A[3]=A[12],A[12]=i,i=A[7],A[7]=A[13],A[13]=i,i=A[11],A[11]=A[14],A[14]=i,this}setPosition(A,i,e){const t=this.elements;return A.isVector3?(t[12]=A.x,t[13]=A.y,t[14]=A.z):(t[12]=A,t[13]=i,t[14]=e),this}invert(){const A=this.elements,i=A[0],e=A[1],t=A[2],C=A[3],n=A[4],h=A[5],r=A[6],E=A[7],l=A[8],o=A[9],k=A[10],g=A[11],D=A[12],a=A[13],s=A[14],B=A[15],j=o*s*E-a*k*E+a*r*g-h*s*g-o*r*B+h*k*B,m=D*k*E-l*s*E-D*r*g+n*s*g+l*r*B-n*k*B,c=l*a*E-D*o*E+D*h*g-n*a*g-l*h*B+n*o*B,u=D*o*r-l*a*r-D*h*k+n*a*k+l*h*s-n*o*s,F=i*j+e*m+t*c+C*u;if(0===F)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const G=1/F;return A[0]=j*G,A[1]=(a*k*C-o*s*C-a*t*g+e*s*g+o*t*B-e*k*B)*G,A[2]=(h*s*C-a*r*C+a*t*E-e*s*E-h*t*B+e*r*B)*G,A[3]=(o*r*C-h*k*C-o*t*E+e*k*E+h*t*g-e*r*g)*G,A[4]=m*G,A[5]=(l*s*C-D*k*C+D*t*g-i*s*g-l*t*B+i*k*B)*G,A[6]=(D*r*C-n*s*C-D*t*E+i*s*E+n*t*B-i*r*B)*G,A[7]=(n*k*C-l*r*C+l*t*E-i*k*E-n*t*g+i*r*g)*G,A[8]=c*G,A[9]=(D*o*C-l*a*C-D*e*g+i*a*g+l*e*B-i*o*B)*G,A[10]=(n*a*C-D*h*C+D*e*E-i*a*E-n*e*B+i*h*B)*G,A[11]=(l*h*C-n*o*C-l*e*E+i*o*E+n*e*g-i*h*g)*G,A[12]=u*G,A[13]=(l*a*t-D*o*t+D*e*k-i*a*k-l*e*s+i*o*s)*G,A[14]=(D*h*t-n*a*t-D*e*r+i*a*r+n*e*s-i*h*s)*G,A[15]=(n*o*t-l*h*t+l*e*r-i*o*r-n*e*k+i*h*k)*G,this}scale(A){const i=this.elements,e=A.x,t=A.y,C=A.z;return i[0]*=e,i[4]*=t,i[8]*=C,i[1]*=e,i[5]*=t,i[9]*=C,i[2]*=e,i[6]*=t,i[10]*=C,i[3]*=e,i[7]*=t,i[11]*=C,this}getMaxScaleOnAxis(){const A=this.elements,i=A[0]*A[0]+A[1]*A[1]+A[2]*A[2],e=A[4]*A[4]+A[5]*A[5]+A[6]*A[6],t=A[8]*A[8]+A[9]*A[9]+A[10]*A[10];return Math.sqrt(Math.max(i,e,t))}makeTranslation(A,i,e){return this.set(1,0,0,A,0,1,0,i,0,0,1,e,0,0,0,1),this}makeRotationX(A){const i=Math.cos(A),e=Math.sin(A);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}makeRotationY(A){const i=Math.cos(A),e=Math.sin(A);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}makeRotationZ(A){const i=Math.cos(A),e=Math.sin(A);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(A,i){const e=Math.cos(i),t=Math.sin(i),C=1-e,n=A.x,h=A.y,r=A.z,E=C*n,l=C*h;return this.set(E*n+e,E*h-t*r,E*r+t*h,0,E*h+t*r,l*h+e,l*r-t*n,0,E*r-t*h,l*r+t*n,C*r*r+e,0,0,0,0,1),this}makeScale(A,i,e){return this.set(A,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}makeShear(A,i,e){return this.set(1,i,e,0,A,1,e,0,A,i,1,0,0,0,0,1),this}compose(A,i,e){const t=this.elements,C=i._x,n=i._y,h=i._z,r=i._w,E=C+C,l=n+n,o=h+h,k=C*E,g=C*l,D=C*o,a=n*l,s=n*o,B=h*o,j=r*E,m=r*l,c=r*o,u=e.x,F=e.y,G=e.z;return t[0]=(1-(a+B))*u,t[1]=(g+c)*u,t[2]=(D-m)*u,t[3]=0,t[4]=(g-c)*F,t[5]=(1-(k+B))*F,t[6]=(s+j)*F,t[7]=0,t[8]=(D+m)*G,t[9]=(s-j)*G,t[10]=(1-(k+a))*G,t[11]=0,t[12]=A.x,t[13]=A.y,t[14]=A.z,t[15]=1,this}decompose(A,i,e){const t=this.elements;let C=kh.set(t[0],t[1],t[2]).length();const n=kh.set(t[4],t[5],t[6]).length(),h=kh.set(t[8],t[9],t[10]).length();this.determinant()<0&&(C=-C),A.x=t[12],A.y=t[13],A.z=t[14],gh.copy(this);const r=1/C,E=1/n,l=1/h;return gh.elements[0]*=r,gh.elements[1]*=r,gh.elements[2]*=r,gh.elements[4]*=E,gh.elements[5]*=E,gh.elements[6]*=E,gh.elements[8]*=l,gh.elements[9]*=l,gh.elements[10]*=l,i.setFromRotationMatrix(gh),e.x=C,e.y=n,e.z=h,this}makePerspective(A,i,e,t,C,n){void 0===n&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const h=this.elements,r=2*C/(i-A),E=2*C/(e-t),l=(i+A)/(i-A),o=(e+t)/(e-t),k=-(n+C)/(n-C),g=-2*n*C/(n-C);return h[0]=r,h[4]=0,h[8]=l,h[12]=0,h[1]=0,h[5]=E,h[9]=o,h[13]=0,h[2]=0,h[6]=0,h[10]=k,h[14]=g,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(A,i,e,t,C,n){const h=this.elements,r=1/(i-A),E=1/(e-t),l=1/(n-C),o=(i+A)*r,k=(e+t)*E,g=(n+C)*l;return h[0]=2*r,h[4]=0,h[8]=0,h[12]=-o,h[1]=0,h[5]=2*E,h[9]=0,h[13]=-k,h[2]=0,h[6]=0,h[10]=-2*l,h[14]=-g,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(A){const i=this.elements,e=A.elements;for(let A=0;A<16;A++)if(i[A]!==e[A])return!1;return!0}fromArray(A,i=0){for(let e=0;e<16;e++)this.elements[e]=A[e+i];return this}toArray(A=[],i=0){const e=this.elements;return A[i]=e[0],A[i+1]=e[1],A[i+2]=e[2],A[i+3]=e[3],A[i+4]=e[4],A[i+5]=e[5],A[i+6]=e[6],A[i+7]=e[7],A[i+8]=e[8],A[i+9]=e[9],A[i+10]=e[10],A[i+11]=e[11],A[i+12]=e[12],A[i+13]=e[13],A[i+14]=e[14],A[i+15]=e[15],A}}oh.prototype.isMatrix4=!0;const kh=new Ln,gh=new oh,Dh=new Ln(0,0,0),ah=new Ln(1,1,1),sh=new Ln,Bh=new Ln,jh=new Ln,mh=new oh,ch=new Tn;class uh{constructor(A=0,i=0,e=0,t=uh.DefaultOrder){this._x=A,this._y=i,this._z=e,this._order=t}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get order(){return this._order}set order(A){this._order=A,this._onChangeCallback()}set(A,i,e,t){return this._x=A,this._y=i,this._z=e,this._order=t||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(A){return this._x=A._x,this._y=A._y,this._z=A._z,this._order=A._order,this._onChangeCallback(),this}setFromRotationMatrix(A,i,e){const t=fn.clamp,C=A.elements,n=C[0],h=C[4],r=C[8],E=C[1],l=C[5],o=C[9],k=C[2],g=C[6],D=C[10];switch(i=i||this._order){case"XYZ":this._y=Math.asin(t(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-o,D),this._z=Math.atan2(-h,n)):(this._x=Math.atan2(g,l),this._z=0);break;case"YXZ":this._x=Math.asin(-t(o,-1,1)),Math.abs(o)<.9999999?(this._y=Math.atan2(r,D),this._z=Math.atan2(E,l)):(this._y=Math.atan2(-k,n),this._z=0);break;case"ZXY":this._x=Math.asin(t(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-k,D),this._z=Math.atan2(-h,l)):(this._y=0,this._z=Math.atan2(E,n));break;case"ZYX":this._y=Math.asin(-t(k,-1,1)),Math.abs(k)<.9999999?(this._x=Math.atan2(g,D),this._z=Math.atan2(E,n)):(this._x=0,this._z=Math.atan2(-h,l));break;case"YZX":this._z=Math.asin(t(E,-1,1)),Math.abs(E)<.9999999?(this._x=Math.atan2(-o,l),this._y=Math.atan2(-k,n)):(this._x=0,this._y=Math.atan2(r,D));break;case"XZY":this._z=Math.asin(-t(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(g,l),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-o,D),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,!1!==e&&this._onChangeCallback(),this}setFromQuaternion(A,i,e){return mh.makeRotationFromQuaternion(A),this.setFromRotationMatrix(mh,i,e)}setFromVector3(A,i){return this.set(A.x,A.y,A.z,i||this._order)}reorder(A){return ch.setFromEuler(this),this.setFromQuaternion(ch,A)}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._order===this._order}fromArray(A){return this._x=A[0],this._y=A[1],this._z=A[2],void 0!==A[3]&&(this._order=A[3]),this._onChangeCallback(),this}toArray(A=[],i=0){return A[i]=this._x,A[i+1]=this._y,A[i+2]=this._z,A[i+3]=this._order,A}toVector3(A){return A?A.set(this._x,this._y,this._z):new Ln(this._x,this._y,this._z)}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}}uh.prototype.isEuler=!0,uh.DefaultOrder="XYZ",uh.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Fh{constructor(){this.mask=1}set(A){this.mask=1<<A|0}enable(A){this.mask|=1<<A|0}enableAll(){this.mask=-1}toggle(A){this.mask^=1<<A|0}disable(A){this.mask&=~(1<<A|0)}disableAll(){this.mask=0}test(A){return 0!=(this.mask&A.mask)}}let Gh=0;const dh=new Ln,fh=new Tn,ph=new oh,vh=new Ln,Hh=new Ln,Ih=new Ln,yh=new Tn,bh=new Ln(1,0,0),Mh=new Ln(0,1,0),xh=new Ln(0,0,1),wh={type:"added"},Sh={type:"removed"};function Th(){Object.defineProperty(this,"id",{value:Gh++}),this.uuid=fn.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Th.DefaultUp.clone();const A=new Ln,i=new uh,e=new Tn,t=new Ln(1,1,1);i._onChange((function(){e.setFromEuler(i,!1)})),e._onChange((function(){i.setFromQuaternion(e,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:A},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:t},modelViewMatrix:{value:new oh},normalMatrix:{value:new vn}}),this.matrix=new oh,this.matrixWorld=new oh,this.matrixAutoUpdate=Th.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Fh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Th.DefaultUp=new Ln(0,1,0),Th.DefaultMatrixAutoUpdate=!0,Th.prototype=Object.assign(Object.create(Fn.prototype),{constructor:Th,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(A){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(A),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(A){return this.quaternion.premultiply(A),this},setRotationFromAxisAngle:function(A,i){this.quaternion.setFromAxisAngle(A,i)},setRotationFromEuler:function(A){this.quaternion.setFromEuler(A,!0)},setRotationFromMatrix:function(A){this.quaternion.setFromRotationMatrix(A)},setRotationFromQuaternion:function(A){this.quaternion.copy(A)},rotateOnAxis:function(A,i){return fh.setFromAxisAngle(A,i),this.quaternion.multiply(fh),this},rotateOnWorldAxis:function(A,i){return fh.setFromAxisAngle(A,i),this.quaternion.premultiply(fh),this},rotateX:function(A){return this.rotateOnAxis(bh,A)},rotateY:function(A){return this.rotateOnAxis(Mh,A)},rotateZ:function(A){return this.rotateOnAxis(xh,A)},translateOnAxis:function(A,i){return dh.copy(A).applyQuaternion(this.quaternion),this.position.add(dh.multiplyScalar(i)),this},translateX:function(A){return this.translateOnAxis(bh,A)},translateY:function(A){return this.translateOnAxis(Mh,A)},translateZ:function(A){return this.translateOnAxis(xh,A)},localToWorld:function(A){return A.applyMatrix4(this.matrixWorld)},worldToLocal:function(A){return A.applyMatrix4(ph.copy(this.matrixWorld).invert())},lookAt:function(A,i,e){A.isVector3?vh.copy(A):vh.set(A,i,e);const t=this.parent;this.updateWorldMatrix(!0,!1),Hh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ph.lookAt(Hh,vh,this.up):ph.lookAt(vh,Hh,this.up),this.quaternion.setFromRotationMatrix(ph),t&&(ph.extractRotation(t.matrixWorld),fh.setFromRotationMatrix(ph),this.quaternion.premultiply(fh.invert()))},add:function(A){if(arguments.length>1){for(let A=0;A<arguments.length;A++)this.add(arguments[A]);return this}return A===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",A),this):(A&&A.isObject3D?(null!==A.parent&&A.parent.remove(A),A.parent=this,this.children.push(A),A.dispatchEvent(wh)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",A),this)},remove:function(A){if(arguments.length>1){for(let A=0;A<arguments.length;A++)this.remove(arguments[A]);return this}const i=this.children.indexOf(A);return-1!==i&&(A.parent=null,this.children.splice(i,1),A.dispatchEvent(Sh)),this},clear:function(){for(let A=0;A<this.children.length;A++){const i=this.children[A];i.parent=null,i.dispatchEvent(Sh)}return this.children.length=0,this},attach:function(A){return this.updateWorldMatrix(!0,!1),ph.copy(this.matrixWorld).invert(),null!==A.parent&&(A.parent.updateWorldMatrix(!0,!1),ph.multiply(A.parent.matrixWorld)),A.applyMatrix4(ph),this.add(A),A.updateWorldMatrix(!1,!0),this},getObjectById:function(A){return this.getObjectByProperty("id",A)},getObjectByName:function(A){return this.getObjectByProperty("name",A)},getObjectByProperty:function(A,i){if(this[A]===i)return this;for(let e=0,t=this.children.length;e<t;e++){const t=this.children[e].getObjectByProperty(A,i);if(void 0!==t)return t}},getWorldPosition:function(A){return void 0===A&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),A=new Ln),this.updateWorldMatrix(!0,!1),A.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(A){return void 0===A&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),A=new Tn),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,A,Ih),A},getWorldScale:function(A){return void 0===A&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),A=new Ln),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,yh,A),A},getWorldDirection:function(A){void 0===A&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),A=new Ln),this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return A.set(i[8],i[9],i[10]).normalize()},raycast:function(){},traverse:function(A){A(this);const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverse(A)},traverseVisible:function(A){if(!1===this.visible)return;A(this);const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverseVisible(A)},traverseAncestors:function(A){const i=this.parent;null!==i&&(A(i),i.traverseAncestors(A))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(A){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||A)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,A=!0);const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(A)},updateWorldMatrix:function(A,i){const e=this.parent;if(!0===A&&null!==e&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===i){const A=this.children;for(let i=0,e=A.length;i<e;i++)A[i].updateWorldMatrix(!1,!0)}},toJSON:function(A){const i=void 0===A||"string"==typeof A,e={};i&&(A={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const t={};function C(i,e){return void 0===i[e.uuid]&&(i[e.uuid]=e.toJSON(A)),e.uuid}if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),!0===this.castShadow&&(t.castShadow=!0),!0===this.receiveShadow&&(t.receiveShadow=!0),!1===this.visible&&(t.visible=!1),!1===this.frustumCulled&&(t.frustumCulled=!1),0!==this.renderOrder&&(t.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),t.layers=this.layers.mask,t.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(t.matrixAutoUpdate=!1),this.isInstancedMesh&&(t.type="InstancedMesh",t.count=this.count,t.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){t.geometry=C(A.geometries,this.geometry);const i=this.geometry.parameters;if(void 0!==i&&void 0!==i.shapes){const e=i.shapes;if(Array.isArray(e))for(let i=0,t=e.length;i<t;i++){const t=e[i];C(A.shapes,t)}else C(A.shapes,e)}}if(this.isSkinnedMesh&&(t.bindMode=this.bindMode,t.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(C(A.skeletons,this.skeleton),t.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const i=[];for(let e=0,t=this.material.length;e<t;e++)i.push(C(A.materials,this.material[e]));t.material=i}else t.material=C(A.materials,this.material);if(this.children.length>0){t.children=[];for(let i=0;i<this.children.length;i++)t.children.push(this.children[i].toJSON(A).object)}if(this.animations.length>0){t.animations=[];for(let i=0;i<this.animations.length;i++){const e=this.animations[i];t.animations.push(C(A.animations,e))}}if(i){const i=n(A.geometries),t=n(A.materials),C=n(A.textures),h=n(A.images),r=n(A.shapes),E=n(A.skeletons),l=n(A.animations);i.length>0&&(e.geometries=i),t.length>0&&(e.materials=t),C.length>0&&(e.textures=C),h.length>0&&(e.images=h),r.length>0&&(e.shapes=r),E.length>0&&(e.skeletons=E),l.length>0&&(e.animations=l)}return e.object=t,e;function n(A){const i=[];for(const e in A){const t=A[e];delete t.metadata,i.push(t)}return i}},clone:function(A){return(new this.constructor).copy(this,A)},copy:function(A,i=!0){if(this.name=A.name,this.up.copy(A.up),this.position.copy(A.position),this.rotation.order=A.rotation.order,this.quaternion.copy(A.quaternion),this.scale.copy(A.scale),this.matrix.copy(A.matrix),this.matrixWorld.copy(A.matrixWorld),this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrixWorldNeedsUpdate=A.matrixWorldNeedsUpdate,this.layers.mask=A.layers.mask,this.visible=A.visible,this.castShadow=A.castShadow,this.receiveShadow=A.receiveShadow,this.frustumCulled=A.frustumCulled,this.renderOrder=A.renderOrder,this.userData=JSON.parse(JSON.stringify(A.userData)),!0===i)for(let i=0;i<A.children.length;i++){const e=A.children[i];this.add(e.clone())}return this}});const Lh=new Ln,Rh=new Ln,Ph=new vn;class Oh{constructor(A=new Ln(1,0,0),i=0){this.normal=A,this.constant=i}set(A,i){return this.normal.copy(A),this.constant=i,this}setComponents(A,i,e,t){return this.normal.set(A,i,e),this.constant=t,this}setFromNormalAndCoplanarPoint(A,i){return this.normal.copy(A),this.constant=-i.dot(this.normal),this}setFromCoplanarPoints(A,i,e){const t=Lh.subVectors(e,i).cross(Rh.subVectors(A,i)).normalize();return this.setFromNormalAndCoplanarPoint(t,A),this}copy(A){return this.normal.copy(A.normal),this.constant=A.constant,this}normalize(){const A=1/this.normal.length();return this.normal.multiplyScalar(A),this.constant*=A,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(A){return this.normal.dot(A)+this.constant}distanceToSphere(A){return this.distanceToPoint(A.center)-A.radius}projectPoint(A,i){return void 0===i&&(console.warn("THREE.Plane: .projectPoint() target is now required"),i=new Ln),i.copy(this.normal).multiplyScalar(-this.distanceToPoint(A)).add(A)}intersectLine(A,i){void 0===i&&(console.warn("THREE.Plane: .intersectLine() target is now required"),i=new Ln);const e=A.delta(Lh),t=this.normal.dot(e);if(0===t)return 0===this.distanceToPoint(A.start)?i.copy(A.start):void 0;const C=-(A.start.dot(this.normal)+this.constant)/t;return C<0||C>1?void 0:i.copy(e).multiplyScalar(C).add(A.start)}intersectsLine(A){const i=this.distanceToPoint(A.start),e=this.distanceToPoint(A.end);return i<0&&e>0||e<0&&i>0}intersectsBox(A){return A.intersectsPlane(this)}intersectsSphere(A){return A.intersectsPlane(this)}coplanarPoint(A){return void 0===A&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),A=new Ln),A.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(A,i){const e=i||Ph.getNormalMatrix(A),t=this.coplanarPoint(Lh).applyMatrix4(A),C=this.normal.applyMatrix3(e).normalize();return this.constant=-t.dot(C),this}translate(A){return this.constant-=A.dot(this.normal),this}equals(A){return A.normal.equals(this.normal)&&A.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Oh.prototype.isPlane=!0;const Nh=new Ln,Jh=new Ln,Kh=new Ln,Uh=new Ln,Vh=new Ln,Wh=new Ln,zh=new Ln,qh=new Ln,Qh=new Ln,Yh=new Ln;class Xh{constructor(A=new Ln,i=new Ln,e=new Ln){this.a=A,this.b=i,this.c=e}static getNormal(A,i,e,t){void 0===t&&(console.warn("THREE.Triangle: .getNormal() target is now required"),t=new Ln),t.subVectors(e,i),Nh.subVectors(A,i),t.cross(Nh);const C=t.lengthSq();return C>0?t.multiplyScalar(1/Math.sqrt(C)):t.set(0,0,0)}static getBarycoord(A,i,e,t,C){Nh.subVectors(t,i),Jh.subVectors(e,i),Kh.subVectors(A,i);const n=Nh.dot(Nh),h=Nh.dot(Jh),r=Nh.dot(Kh),E=Jh.dot(Jh),l=Jh.dot(Kh),o=n*E-h*h;if(void 0===C&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),C=new Ln),0===o)return C.set(-2,-1,-1);const k=1/o,g=(E*r-h*l)*k,D=(n*l-h*r)*k;return C.set(1-g-D,D,g)}static containsPoint(A,i,e,t){return this.getBarycoord(A,i,e,t,Uh),Uh.x>=0&&Uh.y>=0&&Uh.x+Uh.y<=1}static getUV(A,i,e,t,C,n,h,r){return this.getBarycoord(A,i,e,t,Uh),r.set(0,0),r.addScaledVector(C,Uh.x),r.addScaledVector(n,Uh.y),r.addScaledVector(h,Uh.z),r}static isFrontFacing(A,i,e,t){return Nh.subVectors(e,i),Jh.subVectors(A,i),Nh.cross(Jh).dot(t)<0}set(A,i,e){return this.a.copy(A),this.b.copy(i),this.c.copy(e),this}setFromPointsAndIndices(A,i,e,t){return this.a.copy(A[i]),this.b.copy(A[e]),this.c.copy(A[t]),this}clone(){return(new this.constructor).copy(this)}copy(A){return this.a.copy(A.a),this.b.copy(A.b),this.c.copy(A.c),this}getArea(){return Nh.subVectors(this.c,this.b),Jh.subVectors(this.a,this.b),.5*Nh.cross(Jh).length()}getMidpoint(A){return void 0===A&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),A=new Ln),A.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(A){return Xh.getNormal(this.a,this.b,this.c,A)}getPlane(A){return void 0===A&&(console.warn("THREE.Triangle: .getPlane() target is now required"),A=new Oh),A.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(A,i){return Xh.getBarycoord(A,this.a,this.b,this.c,i)}getUV(A,i,e,t,C){return Xh.getUV(A,this.a,this.b,this.c,i,e,t,C)}containsPoint(A){return Xh.containsPoint(A,this.a,this.b,this.c)}isFrontFacing(A){return Xh.isFrontFacing(this.a,this.b,this.c,A)}intersectsBox(A){return A.intersectsTriangle(this)}closestPointToPoint(A,i){void 0===i&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),i=new Ln);const e=this.a,t=this.b,C=this.c;let n,h;Vh.subVectors(t,e),Wh.subVectors(C,e),qh.subVectors(A,e);const r=Vh.dot(qh),E=Wh.dot(qh);if(r<=0&&E<=0)return i.copy(e);Qh.subVectors(A,t);const l=Vh.dot(Qh),o=Wh.dot(Qh);if(l>=0&&o<=l)return i.copy(t);const k=r*o-l*E;if(k<=0&&r>=0&&l<=0)return n=r/(r-l),i.copy(e).addScaledVector(Vh,n);Yh.subVectors(A,C);const g=Vh.dot(Yh),D=Wh.dot(Yh);if(D>=0&&g<=D)return i.copy(C);const a=g*E-r*D;if(a<=0&&E>=0&&D<=0)return h=E/(E-D),i.copy(e).addScaledVector(Wh,h);const s=l*D-g*o;if(s<=0&&o-l>=0&&g-D>=0)return zh.subVectors(C,t),h=(o-l)/(o-l+(g-D)),i.copy(t).addScaledVector(zh,h);const B=1/(s+a+k);return n=a*B,h=k*B,i.copy(e).addScaledVector(Vh,n).addScaledVector(Wh,h)}equals(A){return A.a.equals(this.a)&&A.b.equals(this.b)&&A.c.equals(this.c)}}let Zh=0;function _h(){Object.defineProperty(this,"id",{value:Zh++}),this.uuid=fn.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=ne,this.side=$i,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ce,this.blendDst=ue,this.blendEquation=oe,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ye,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ln,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=QC,this.stencilZFail=QC,this.stencilZPass=QC,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}_h.prototype=Object.assign(Object.create(Fn.prototype),{constructor:_h,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(A){if(void 0!==A)for(const i in A){const e=A[i];if(void 0===e){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}if("shading"===i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===ee;continue}const t=this[i];void 0!==t?t&&t.isColor?t.set(e):t&&t.isVector3&&e&&e.isVector3?t.copy(e):this[i]=e:console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.")}},toJSON:function(A){const i=void 0===A||"string"==typeof A;i&&(A={textures:{},images:{}});const e={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function t(A){const i=[];for(const e in A){const t=A[e];delete t.metadata,i.push(t)}return i}if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),void 0!==this.roughness&&(e.roughness=this.roughness),void 0!==this.metalness&&(e.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(e.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),void 0!==this.shininess&&(e.shininess=this.shininess),void 0!==this.clearcoat&&(e.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(A).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(A).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(A).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(A).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(A).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(A).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(A).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(A).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(A).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(A).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(A).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(A).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(A).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(A).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(A).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(A).uuid,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,void 0!==this.combine&&(e.combine=this.combine),void 0!==this.envMapIntensity&&(e.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(A).uuid),void 0!==this.size&&(e.size=this.size),void 0!==this.sizeAttenuation&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==ne&&(e.blending=this.blending),this.side!==$i&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),!0===this.transparent&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(e.rotation=this.rotation),!0===this.polygonOffset&&(e.polygonOffset=!0),0!==this.polygonOffsetFactor&&(e.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(e.linewidth=this.linewidth),void 0!==this.dashSize&&(e.dashSize=this.dashSize),void 0!==this.gapSize&&(e.gapSize=this.gapSize),void 0!==this.scale&&(e.scale=this.scale),!0===this.dithering&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(e.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(e.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(e.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(e.morphTargets=!0),!0===this.morphNormals&&(e.morphNormals=!0),!0===this.skinning&&(e.skinning=!0),!0===this.flatShading&&(e.flatShading=this.flatShading),!1===this.visible&&(e.visible=!1),!1===this.toneMapped&&(e.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),i){const i=t(A.textures),C=t(A.images);i.length>0&&(e.textures=i),C.length>0&&(e.images=C)}return e},clone:function(){return(new this.constructor).copy(this)},copy:function(A){this.name=A.name,this.fog=A.fog,this.blending=A.blending,this.side=A.side,this.vertexColors=A.vertexColors,this.opacity=A.opacity,this.transparent=A.transparent,this.blendSrc=A.blendSrc,this.blendDst=A.blendDst,this.blendEquation=A.blendEquation,this.blendSrcAlpha=A.blendSrcAlpha,this.blendDstAlpha=A.blendDstAlpha,this.blendEquationAlpha=A.blendEquationAlpha,this.depthFunc=A.depthFunc,this.depthTest=A.depthTest,this.depthWrite=A.depthWrite,this.stencilWriteMask=A.stencilWriteMask,this.stencilFunc=A.stencilFunc,this.stencilRef=A.stencilRef,this.stencilFuncMask=A.stencilFuncMask,this.stencilFail=A.stencilFail,this.stencilZFail=A.stencilZFail,this.stencilZPass=A.stencilZPass,this.stencilWrite=A.stencilWrite;const i=A.clippingPlanes;let e=null;if(null!==i){const A=i.length;e=new Array(A);for(let t=0;t!==A;++t)e[t]=i[t].clone()}return this.clippingPlanes=e,this.clipIntersection=A.clipIntersection,this.clipShadows=A.clipShadows,this.shadowSide=A.shadowSide,this.colorWrite=A.colorWrite,this.precision=A.precision,this.polygonOffset=A.polygonOffset,this.polygonOffsetFactor=A.polygonOffsetFactor,this.polygonOffsetUnits=A.polygonOffsetUnits,this.dithering=A.dithering,this.alphaTest=A.alphaTest,this.premultipliedAlpha=A.premultipliedAlpha,this.visible=A.visible,this.toneMapped=A.toneMapped,this.userData=JSON.parse(JSON.stringify(A.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(_h.prototype,"needsUpdate",{set:function(A){!0===A&&this.version++}});const $h={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ar={h:0,s:0,l:0},ir={h:0,s:0,l:0};function er(A,i,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?A+6*(i-A)*e:e<.5?i:e<2/3?A+6*(i-A)*(2/3-e):A}function tr(A){return A<.04045?.0773993808*A:Math.pow(.9478672986*A+.0521327014,2.4)}function Cr(A){return A<.0031308?12.92*A:1.055*Math.pow(A,.41666)-.055}class nr{constructor(A,i,e){return void 0===i&&void 0===e?this.set(A):this.setRGB(A,i,e)}set(A){return A&&A.isColor?this.copy(A):"number"==typeof A?this.setHex(A):"string"==typeof A&&this.setStyle(A),this}setScalar(A){return this.r=A,this.g=A,this.b=A,this}setHex(A){return A=Math.floor(A),this.r=(A>>16&255)/255,this.g=(A>>8&255)/255,this.b=(255&A)/255,this}setRGB(A,i,e){return this.r=A,this.g=i,this.b=e,this}setHSL(A,i,e){if(A=fn.euclideanModulo(A,1),i=fn.clamp(i,0,1),e=fn.clamp(e,0,1),0===i)this.r=this.g=this.b=e;else{const t=e<=.5?e*(1+i):e+i-e*i,C=2*e-t;this.r=er(C,t,A+1/3),this.g=er(C,t,A),this.b=er(C,t,A-1/3)}return this}setStyle(A){function i(i){void 0!==i&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+A+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(A)){let A;const t=e[1],C=e[2];switch(t){case"rgb":case"rgba":if(A=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(C))return this.r=Math.min(255,parseInt(A[1],10))/255,this.g=Math.min(255,parseInt(A[2],10))/255,this.b=Math.min(255,parseInt(A[3],10))/255,i(A[4]),this;if(A=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(C))return this.r=Math.min(100,parseInt(A[1],10))/100,this.g=Math.min(100,parseInt(A[2],10))/100,this.b=Math.min(100,parseInt(A[3],10))/100,i(A[4]),this;break;case"hsl":case"hsla":if(A=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(C)){const e=parseFloat(A[1])/360,t=parseInt(A[2],10)/100,C=parseInt(A[3],10)/100;return i(A[4]),this.setHSL(e,t,C)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(A)){const A=e[1],i=A.length;if(3===i)return this.r=parseInt(A.charAt(0)+A.charAt(0),16)/255,this.g=parseInt(A.charAt(1)+A.charAt(1),16)/255,this.b=parseInt(A.charAt(2)+A.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(A.charAt(0)+A.charAt(1),16)/255,this.g=parseInt(A.charAt(2)+A.charAt(3),16)/255,this.b=parseInt(A.charAt(4)+A.charAt(5),16)/255,this}return A&&A.length>0?this.setColorName(A):this}setColorName(A){const i=$h[A];return void 0!==i?this.setHex(i):console.warn("THREE.Color: Unknown color "+A),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(A){return this.r=A.r,this.g=A.g,this.b=A.b,this}copyGammaToLinear(A,i=2){return this.r=Math.pow(A.r,i),this.g=Math.pow(A.g,i),this.b=Math.pow(A.b,i),this}copyLinearToGamma(A,i=2){const e=i>0?1/i:1;return this.r=Math.pow(A.r,e),this.g=Math.pow(A.g,e),this.b=Math.pow(A.b,e),this}convertGammaToLinear(A){return this.copyGammaToLinear(this,A),this}convertLinearToGamma(A){return this.copyLinearToGamma(this,A),this}copySRGBToLinear(A){return this.r=tr(A.r),this.g=tr(A.g),this.b=tr(A.b),this}copyLinearToSRGB(A){return this.r=Cr(A.r),this.g=Cr(A.g),this.b=Cr(A.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(A){void 0===A&&(console.warn("THREE.Color: .getHSL() target is now required"),A={h:0,s:0,l:0});const i=this.r,e=this.g,t=this.b,C=Math.max(i,e,t),n=Math.min(i,e,t);let h,r;const E=(n+C)/2;if(n===C)h=0,r=0;else{const A=C-n;switch(r=E<=.5?A/(C+n):A/(2-C-n),C){case i:h=(e-t)/A+(e<t?6:0);break;case e:h=(t-i)/A+2;break;case t:h=(i-e)/A+4}h/=6}return A.h=h,A.s=r,A.l=E,A}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(A,i,e){return this.getHSL(Ar),Ar.h+=A,Ar.s+=i,Ar.l+=e,this.setHSL(Ar.h,Ar.s,Ar.l),this}add(A){return this.r+=A.r,this.g+=A.g,this.b+=A.b,this}addColors(A,i){return this.r=A.r+i.r,this.g=A.g+i.g,this.b=A.b+i.b,this}addScalar(A){return this.r+=A,this.g+=A,this.b+=A,this}sub(A){return this.r=Math.max(0,this.r-A.r),this.g=Math.max(0,this.g-A.g),this.b=Math.max(0,this.b-A.b),this}multiply(A){return this.r*=A.r,this.g*=A.g,this.b*=A.b,this}multiplyScalar(A){return this.r*=A,this.g*=A,this.b*=A,this}lerp(A,i){return this.r+=(A.r-this.r)*i,this.g+=(A.g-this.g)*i,this.b+=(A.b-this.b)*i,this}lerpColors(A,i,e){return this.r=A.r+(i.r-A.r)*e,this.g=A.g+(i.g-A.g)*e,this.b=A.b+(i.b-A.b)*e,this}lerpHSL(A,i){this.getHSL(Ar),A.getHSL(ir);const e=fn.lerp(Ar.h,ir.h,i),t=fn.lerp(Ar.s,ir.s,i),C=fn.lerp(Ar.l,ir.l,i);return this.setHSL(e,t,C),this}equals(A){return A.r===this.r&&A.g===this.g&&A.b===this.b}fromArray(A,i=0){return this.r=A[i],this.g=A[i+1],this.b=A[i+2],this}toArray(A=[],i=0){return A[i]=this.r,A[i+1]=this.g,A[i+2]=this.b,A}fromBufferAttribute(A,i){return this.r=A.getX(i),this.g=A.getY(i),this.b=A.getZ(i),!0===A.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}nr.NAMES=$h,nr.prototype.isColor=!0,nr.prototype.r=1,nr.prototype.g=1,nr.prototype.b=1;class hr extends _h{constructor(A){super(),this.type="MeshBasicMaterial",this.color=new nr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Se,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.specularMap=A.specularMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.combine=A.combine,this.reflectivity=A.reflectivity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this}}hr.prototype.isMeshBasicMaterial=!0;const rr=new Ln,Er=new pn;function lr(A,i,e){if(Array.isArray(A))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=A,this.itemSize=i,this.count=void 0!==A?A.length/i:0,this.normalized=!0===e,this.usage=on,this.updateRange={offset:0,count:-1},this.version=0}function or(A,i,e){lr.call(this,new Int8Array(A),i,e)}function kr(A,i,e){lr.call(this,new Uint8Array(A),i,e)}function gr(A,i,e){lr.call(this,new Uint8ClampedArray(A),i,e)}function Dr(A,i,e){lr.call(this,new Int16Array(A),i,e)}function ar(A,i,e){lr.call(this,new Uint16Array(A),i,e)}function sr(A,i,e){lr.call(this,new Int32Array(A),i,e)}function Br(A,i,e){lr.call(this,new Uint32Array(A),i,e)}function jr(A,i,e){lr.call(this,new Uint16Array(A),i,e)}function mr(A,i,e){lr.call(this,new Float32Array(A),i,e)}function cr(A,i,e){lr.call(this,new Float64Array(A),i,e)}function ur(A){if(0===A.length)return-1/0;let i=A[0];for(let e=1,t=A.length;e<t;++e)A[e]>i&&(i=A[e]);return i}Object.defineProperty(lr.prototype,"needsUpdate",{set:function(A){!0===A&&this.version++}}),Object.assign(lr.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(A){return this.usage=A,this},copy:function(A){return this.name=A.name,this.array=new A.array.constructor(A.array),this.itemSize=A.itemSize,this.count=A.count,this.normalized=A.normalized,this.usage=A.usage,this},copyAt:function(A,i,e){A*=this.itemSize,e*=i.itemSize;for(let t=0,C=this.itemSize;t<C;t++)this.array[A+t]=i.array[e+t];return this},copyArray:function(A){return this.array.set(A),this},copyColorsArray:function(A){const i=this.array;let e=0;for(let t=0,C=A.length;t<C;t++){let C=A[t];void 0===C&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),C=new nr),i[e++]=C.r,i[e++]=C.g,i[e++]=C.b}return this},copyVector2sArray:function(A){const i=this.array;let e=0;for(let t=0,C=A.length;t<C;t++){let C=A[t];void 0===C&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),C=new pn),i[e++]=C.x,i[e++]=C.y}return this},copyVector3sArray:function(A){const i=this.array;let e=0;for(let t=0,C=A.length;t<C;t++){let C=A[t];void 0===C&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),C=new Ln),i[e++]=C.x,i[e++]=C.y,i[e++]=C.z}return this},copyVector4sArray:function(A){const i=this.array;let e=0;for(let t=0,C=A.length;t<C;t++){let C=A[t];void 0===C&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),C=new xn),i[e++]=C.x,i[e++]=C.y,i[e++]=C.z,i[e++]=C.w}return this},applyMatrix3:function(A){if(2===this.itemSize)for(let i=0,e=this.count;i<e;i++)Er.fromBufferAttribute(this,i),Er.applyMatrix3(A),this.setXY(i,Er.x,Er.y);else if(3===this.itemSize)for(let i=0,e=this.count;i<e;i++)rr.fromBufferAttribute(this,i),rr.applyMatrix3(A),this.setXYZ(i,rr.x,rr.y,rr.z);return this},applyMatrix4:function(A){for(let i=0,e=this.count;i<e;i++)rr.x=this.getX(i),rr.y=this.getY(i),rr.z=this.getZ(i),rr.applyMatrix4(A),this.setXYZ(i,rr.x,rr.y,rr.z);return this},applyNormalMatrix:function(A){for(let i=0,e=this.count;i<e;i++)rr.x=this.getX(i),rr.y=this.getY(i),rr.z=this.getZ(i),rr.applyNormalMatrix(A),this.setXYZ(i,rr.x,rr.y,rr.z);return this},transformDirection:function(A){for(let i=0,e=this.count;i<e;i++)rr.x=this.getX(i),rr.y=this.getY(i),rr.z=this.getZ(i),rr.transformDirection(A),this.setXYZ(i,rr.x,rr.y,rr.z);return this},set:function(A,i=0){return this.array.set(A,i),this},getX:function(A){return this.array[A*this.itemSize]},setX:function(A,i){return this.array[A*this.itemSize]=i,this},getY:function(A){return this.array[A*this.itemSize+1]},setY:function(A,i){return this.array[A*this.itemSize+1]=i,this},getZ:function(A){return this.array[A*this.itemSize+2]},setZ:function(A,i){return this.array[A*this.itemSize+2]=i,this},getW:function(A){return this.array[A*this.itemSize+3]},setW:function(A,i){return this.array[A*this.itemSize+3]=i,this},setXY:function(A,i,e){return A*=this.itemSize,this.array[A+0]=i,this.array[A+1]=e,this},setXYZ:function(A,i,e,t){return A*=this.itemSize,this.array[A+0]=i,this.array[A+1]=e,this.array[A+2]=t,this},setXYZW:function(A,i,e,t,C){return A*=this.itemSize,this.array[A+0]=i,this.array[A+1]=e,this.array[A+2]=t,this.array[A+3]=C,this},onUpload:function(A){return this.onUploadCallback=A,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),or.prototype=Object.create(lr.prototype),or.prototype.constructor=or,kr.prototype=Object.create(lr.prototype),kr.prototype.constructor=kr,gr.prototype=Object.create(lr.prototype),gr.prototype.constructor=gr,Dr.prototype=Object.create(lr.prototype),Dr.prototype.constructor=Dr,ar.prototype=Object.create(lr.prototype),ar.prototype.constructor=ar,sr.prototype=Object.create(lr.prototype),sr.prototype.constructor=sr,Br.prototype=Object.create(lr.prototype),Br.prototype.constructor=Br,jr.prototype=Object.create(lr.prototype),jr.prototype.constructor=jr,jr.prototype.isFloat16BufferAttribute=!0,mr.prototype=Object.create(lr.prototype),mr.prototype.constructor=mr,cr.prototype=Object.create(lr.prototype),cr.prototype.constructor=cr;const Fr={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Gr(A,i){return new Fr[A](i)}let dr=0;const fr=new oh,pr=new Th,vr=new Ln,Hr=new On,Ir=new On,yr=new Ln;function br(){Object.defineProperty(this,"id",{value:dr++}),this.uuid=fn.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}br.prototype=Object.assign(Object.create(Fn.prototype),{constructor:br,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(A){return Array.isArray(A)?this.index=new(ur(A)>65535?Br:ar)(A,1):this.index=A,this},getAttribute:function(A){return this.attributes[A]},setAttribute:function(A,i){return this.attributes[A]=i,this},deleteAttribute:function(A){return delete this.attributes[A],this},hasAttribute:function(A){return void 0!==this.attributes[A]},addGroup:function(A,i,e=0){this.groups.push({start:A,count:i,materialIndex:e})},clearGroups:function(){this.groups=[]},setDrawRange:function(A,i){this.drawRange.start=A,this.drawRange.count=i},applyMatrix4:function(A){const i=this.attributes.position;void 0!==i&&(i.applyMatrix4(A),i.needsUpdate=!0);const e=this.attributes.normal;if(void 0!==e){const i=(new vn).getNormalMatrix(A);e.applyNormalMatrix(i),e.needsUpdate=!0}const t=this.attributes.tangent;return void 0!==t&&(t.transformDirection(A),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(A){return fr.makeRotationX(A),this.applyMatrix4(fr),this},rotateY:function(A){return fr.makeRotationY(A),this.applyMatrix4(fr),this},rotateZ:function(A){return fr.makeRotationZ(A),this.applyMatrix4(fr),this},translate:function(A,i,e){return fr.makeTranslation(A,i,e),this.applyMatrix4(fr),this},scale:function(A,i,e){return fr.makeScale(A,i,e),this.applyMatrix4(fr),this},lookAt:function(A){return pr.lookAt(A),pr.updateMatrix(),this.applyMatrix4(pr.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(vr).negate(),this.translate(vr.x,vr.y,vr.z),this},setFromPoints:function(A){const i=[];for(let e=0,t=A.length;e<t;e++){const t=A[e];i.push(t.x,t.y,t.z||0)}return this.setAttribute("position",new mr(i,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new On);const A=this.attributes.position,i=this.morphAttributes.position;if(A&&A.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ln(-1/0,-1/0,-1/0),new Ln(1/0,1/0,1/0));if(void 0!==A){if(this.boundingBox.setFromBufferAttribute(A),i)for(let A=0,e=i.length;A<e;A++){const e=i[A];Hr.setFromBufferAttribute(e),this.morphTargetsRelative?(yr.addVectors(this.boundingBox.min,Hr.min),this.boundingBox.expandByPoint(yr),yr.addVectors(this.boundingBox.max,Hr.max),this.boundingBox.expandByPoint(yr)):(this.boundingBox.expandByPoint(Hr.min),this.boundingBox.expandByPoint(Hr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ih);const A=this.attributes.position,i=this.morphAttributes.position;if(A&&A.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ln,1/0);if(A){const e=this.boundingSphere.center;if(Hr.setFromBufferAttribute(A),i)for(let A=0,e=i.length;A<e;A++){const e=i[A];Ir.setFromBufferAttribute(e),this.morphTargetsRelative?(yr.addVectors(Hr.min,Ir.min),Hr.expandByPoint(yr),yr.addVectors(Hr.max,Ir.max),Hr.expandByPoint(yr)):(Hr.expandByPoint(Ir.min),Hr.expandByPoint(Ir.max))}Hr.getCenter(e);let t=0;for(let i=0,C=A.count;i<C;i++)yr.fromBufferAttribute(A,i),t=Math.max(t,e.distanceToSquared(yr));if(i)for(let C=0,n=i.length;C<n;C++){const n=i[C],h=this.morphTargetsRelative;for(let i=0,C=n.count;i<C;i++)yr.fromBufferAttribute(n,i),h&&(vr.fromBufferAttribute(A,i),yr.add(vr)),t=Math.max(t,e.distanceToSquared(yr))}this.boundingSphere.radius=Math.sqrt(t),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const A=this.index,i=this.attributes;if(null===A||void 0===i.position||void 0===i.normal||void 0===i.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const e=A.array,t=i.position.array,C=i.normal.array,n=i.uv.array,h=t.length/3;void 0===i.tangent&&this.setAttribute("tangent",new lr(new Float32Array(4*h),4));const r=i.tangent.array,E=[],l=[];for(let A=0;A<h;A++)E[A]=new Ln,l[A]=new Ln;const o=new Ln,k=new Ln,g=new Ln,D=new pn,a=new pn,s=new pn,B=new Ln,j=new Ln;function m(A,i,e){o.fromArray(t,3*A),k.fromArray(t,3*i),g.fromArray(t,3*e),D.fromArray(n,2*A),a.fromArray(n,2*i),s.fromArray(n,2*e),k.sub(o),g.sub(o),a.sub(D),s.sub(D);const C=1/(a.x*s.y-s.x*a.y);isFinite(C)&&(B.copy(k).multiplyScalar(s.y).addScaledVector(g,-a.y).multiplyScalar(C),j.copy(g).multiplyScalar(a.x).addScaledVector(k,-s.x).multiplyScalar(C),E[A].add(B),E[i].add(B),E[e].add(B),l[A].add(j),l[i].add(j),l[e].add(j))}let c=this.groups;0===c.length&&(c=[{start:0,count:e.length}]);for(let A=0,i=c.length;A<i;++A){const i=c[A],t=i.start;for(let A=t,C=t+i.count;A<C;A+=3)m(e[A+0],e[A+1],e[A+2])}const u=new Ln,F=new Ln,G=new Ln,d=new Ln;function f(A){G.fromArray(C,3*A),d.copy(G);const i=E[A];u.copy(i),u.sub(G.multiplyScalar(G.dot(i))).normalize(),F.crossVectors(d,i);const e=F.dot(l[A])<0?-1:1;r[4*A]=u.x,r[4*A+1]=u.y,r[4*A+2]=u.z,r[4*A+3]=e}for(let A=0,i=c.length;A<i;++A){const i=c[A],t=i.start;for(let A=t,C=t+i.count;A<C;A+=3)f(e[A+0]),f(e[A+1]),f(e[A+2])}},computeVertexNormals:function(){const A=this.index,i=this.getAttribute("position");if(void 0!==i){let e=this.getAttribute("normal");if(void 0===e)e=new lr(new Float32Array(3*i.count),3),this.setAttribute("normal",e);else for(let A=0,i=e.count;A<i;A++)e.setXYZ(A,0,0,0);const t=new Ln,C=new Ln,n=new Ln,h=new Ln,r=new Ln,E=new Ln,l=new Ln,o=new Ln;if(A)for(let k=0,g=A.count;k<g;k+=3){const g=A.getX(k+0),D=A.getX(k+1),a=A.getX(k+2);t.fromBufferAttribute(i,g),C.fromBufferAttribute(i,D),n.fromBufferAttribute(i,a),l.subVectors(n,C),o.subVectors(t,C),l.cross(o),h.fromBufferAttribute(e,g),r.fromBufferAttribute(e,D),E.fromBufferAttribute(e,a),h.add(l),r.add(l),E.add(l),e.setXYZ(g,h.x,h.y,h.z),e.setXYZ(D,r.x,r.y,r.z),e.setXYZ(a,E.x,E.y,E.z)}else for(let A=0,h=i.count;A<h;A+=3)t.fromBufferAttribute(i,A+0),C.fromBufferAttribute(i,A+1),n.fromBufferAttribute(i,A+2),l.subVectors(n,C),o.subVectors(t,C),l.cross(o),e.setXYZ(A+0,l.x,l.y,l.z),e.setXYZ(A+1,l.x,l.y,l.z),e.setXYZ(A+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}},merge:function(A,i){if(!A||!A.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",A);void 0===i&&(i=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const e=this.attributes;for(const t in e){if(void 0===A.attributes[t])continue;const C=e[t].array,n=A.attributes[t],h=n.array,r=n.itemSize*i,E=Math.min(h.length,C.length-r);for(let A=0,i=r;A<E;A++,i++)C[i]=h[A]}return this},normalizeNormals:function(){const A=this.attributes.normal;for(let i=0,e=A.count;i<e;i++)yr.fromBufferAttribute(A,i),yr.normalize(),A.setXYZ(i,yr.x,yr.y,yr.z)},toNonIndexed:function(){function A(A,i){const e=A.array,t=A.itemSize,C=A.normalized,n=new e.constructor(i.length*t);let h=0,r=0;for(let A=0,C=i.length;A<C;A++){h=i[A]*t;for(let A=0;A<t;A++)n[r++]=e[h++]}return new lr(n,t,C)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new br,e=this.index.array,t=this.attributes;for(const C in t){const n=A(t[C],e);i.setAttribute(C,n)}const C=this.morphAttributes;for(const t in C){const n=[],h=C[t];for(let i=0,t=h.length;i<t;i++){const t=A(h[i],e);n.push(t)}i.morphAttributes[t]=n}i.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let A=0,e=n.length;A<e;A++){const e=n[A];i.addGroup(e.start,e.count,e.materialIndex)}return i},toJSON:function(){const A={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(A.uuid=this.uuid,A.type=this.type,""!==this.name&&(A.name=this.name),Object.keys(this.userData).length>0&&(A.userData=this.userData),void 0!==this.parameters){const i=this.parameters;for(const e in i)void 0!==i[e]&&(A[e]=i[e]);return A}A.data={attributes:{}};const i=this.index;null!==i&&(A.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const e=this.attributes;for(const i in e){const t=e[i],C=t.toJSON(A.data);""!==t.name&&(C.name=t.name),A.data.attributes[i]=C}const t={};let C=!1;for(const i in this.morphAttributes){const e=this.morphAttributes[i],n=[];for(let i=0,t=e.length;i<t;i++){const t=e[i],C=t.toJSON(A.data);""!==t.name&&(C.name=t.name),n.push(C)}n.length>0&&(t[i]=n,C=!0)}C&&(A.data.morphAttributes=t,A.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(A.data.groups=JSON.parse(JSON.stringify(n)));const h=this.boundingSphere;return null!==h&&(A.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),A},clone:function(){return(new br).copy(this)},copy:function(A){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=A.name;const e=A.index;null!==e&&this.setIndex(e.clone(i));const t=A.attributes;for(const A in t){const e=t[A];this.setAttribute(A,e.clone(i))}const C=A.morphAttributes;for(const A in C){const e=[],t=C[A];for(let A=0,C=t.length;A<C;A++)e.push(t[A].clone(i));this.morphAttributes[A]=e}this.morphTargetsRelative=A.morphTargetsRelative;const n=A.groups;for(let A=0,i=n.length;A<i;A++){const i=n[A];this.addGroup(i.start,i.count,i.materialIndex)}const h=A.boundingBox;null!==h&&(this.boundingBox=h.clone());const r=A.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=A.drawRange.start,this.drawRange.count=A.drawRange.count,this.userData=A.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Mr=new oh,xr=new lh,wr=new ih,Sr=new Ln,Tr=new Ln,Lr=new Ln,Rr=new Ln,Pr=new Ln,Or=new Ln,Nr=new Ln,Jr=new Ln,Kr=new Ln,Ur=new pn,Vr=new pn,Wr=new pn,zr=new Ln,qr=new Ln;function Qr(A=new br,i=new hr){Th.call(this),this.type="Mesh",this.geometry=A,this.material=i,this.updateMorphTargets()}function Yr(A,i,e,t,C,n,h,r,E,l,o,k){Sr.fromBufferAttribute(C,l),Tr.fromBufferAttribute(C,o),Lr.fromBufferAttribute(C,k);const g=A.morphTargetInfluences;if(i.morphTargets&&n&&g){Nr.set(0,0,0),Jr.set(0,0,0),Kr.set(0,0,0);for(let A=0,i=n.length;A<i;A++){const i=g[A],e=n[A];0!==i&&(Rr.fromBufferAttribute(e,l),Pr.fromBufferAttribute(e,o),Or.fromBufferAttribute(e,k),h?(Nr.addScaledVector(Rr,i),Jr.addScaledVector(Pr,i),Kr.addScaledVector(Or,i)):(Nr.addScaledVector(Rr.sub(Sr),i),Jr.addScaledVector(Pr.sub(Tr),i),Kr.addScaledVector(Or.sub(Lr),i)))}Sr.add(Nr),Tr.add(Jr),Lr.add(Kr)}A.isSkinnedMesh&&i.skinning&&(A.boneTransform(l,Sr),A.boneTransform(o,Tr),A.boneTransform(k,Lr));const D=function(A,i,e,t,C,n,h,r){let E;if(E=i.side===Ae?t.intersectTriangle(h,n,C,!0,r):t.intersectTriangle(C,n,h,i.side!==ie,r),null===E)return null;qr.copy(r),qr.applyMatrix4(A.matrixWorld);const l=e.ray.origin.distanceTo(qr);return l<e.near||l>e.far?null:{distance:l,point:qr.clone(),object:A}}(A,i,e,t,Sr,Tr,Lr,zr);if(D){r&&(Ur.fromBufferAttribute(r,l),Vr.fromBufferAttribute(r,o),Wr.fromBufferAttribute(r,k),D.uv=Xh.getUV(zr,Sr,Tr,Lr,Ur,Vr,Wr,new pn)),E&&(Ur.fromBufferAttribute(E,l),Vr.fromBufferAttribute(E,o),Wr.fromBufferAttribute(E,k),D.uv2=Xh.getUV(zr,Sr,Tr,Lr,Ur,Vr,Wr,new pn));const A={a:l,b:o,c:k,normal:new Ln,materialIndex:0};Xh.getNormal(Sr,Tr,Lr,A.normal),D.face=A}return D}Qr.prototype=Object.assign(Object.create(Th.prototype),{constructor:Qr,isMesh:!0,copy:function(A){return Th.prototype.copy.call(this,A),void 0!==A.morphTargetInfluences&&(this.morphTargetInfluences=A.morphTargetInfluences.slice()),void 0!==A.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},A.morphTargetDictionary)),this.material=A.material,this.geometry=A.geometry,this},updateMorphTargets:function(){const A=this.geometry;if(A.isBufferGeometry){const i=A.morphAttributes,e=Object.keys(i);if(e.length>0){const A=i[e[0]];if(void 0!==A){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,e=A.length;i<e;i++){const e=A[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=i}}}}else{const i=A.morphTargets;void 0!==i&&i.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(A,i){const e=this.geometry,t=this.material,C=this.matrixWorld;if(void 0===t)return;if(null===e.boundingSphere&&e.computeBoundingSphere(),wr.copy(e.boundingSphere),wr.applyMatrix4(C),!1===A.ray.intersectsSphere(wr))return;if(Mr.copy(C).invert(),xr.copy(A.ray).applyMatrix4(Mr),null!==e.boundingBox&&!1===xr.intersectsBox(e.boundingBox))return;let n;if(e.isBufferGeometry){const C=e.index,h=e.attributes.position,r=e.morphAttributes.position,E=e.morphTargetsRelative,l=e.attributes.uv,o=e.attributes.uv2,k=e.groups,g=e.drawRange;if(null!==C)if(Array.isArray(t))for(let e=0,D=k.length;e<D;e++){const D=k[e],a=t[D.materialIndex];for(let e=Math.max(D.start,g.start),t=Math.min(D.start+D.count,g.start+g.count);e<t;e+=3){const t=C.getX(e),k=C.getX(e+1),g=C.getX(e+2);n=Yr(this,a,A,xr,h,r,E,l,o,t,k,g),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=D.materialIndex,i.push(n))}}else{for(let e=Math.max(0,g.start),k=Math.min(C.count,g.start+g.count);e<k;e+=3){const k=C.getX(e),g=C.getX(e+1),D=C.getX(e+2);n=Yr(this,t,A,xr,h,r,E,l,o,k,g,D),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}else if(void 0!==h)if(Array.isArray(t))for(let e=0,C=k.length;e<C;e++){const C=k[e],D=t[C.materialIndex];for(let e=Math.max(C.start,g.start),t=Math.min(C.start+C.count,g.start+g.count);e<t;e+=3){n=Yr(this,D,A,xr,h,r,E,l,o,e,e+1,e+2),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=C.materialIndex,i.push(n))}}else{for(let e=Math.max(0,g.start),C=Math.min(h.count,g.start+g.count);e<C;e+=3){n=Yr(this,t,A,xr,h,r,E,l,o,e,e+1,e+2),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class Xr extends br{constructor(A=1,i=1,e=1,t=1,C=1,n=1){super(),this.type="BoxGeometry",this.parameters={width:A,height:i,depth:e,widthSegments:t,heightSegments:C,depthSegments:n};const h=this;t=Math.floor(t),C=Math.floor(C),n=Math.floor(n);const r=[],E=[],l=[],o=[];let k=0,g=0;function D(A,i,e,t,C,n,D,a,s,B,j){const m=n/s,c=D/B,u=n/2,F=D/2,G=a/2,d=s+1,f=B+1;let p=0,v=0;const H=new Ln;for(let n=0;n<f;n++){const h=n*c-F;for(let r=0;r<d;r++){const k=r*m-u;H[A]=k*t,H[i]=h*C,H[e]=G,E.push(H.x,H.y,H.z),H[A]=0,H[i]=0,H[e]=a>0?1:-1,l.push(H.x,H.y,H.z),o.push(r/s),o.push(1-n/B),p+=1}}for(let A=0;A<B;A++)for(let i=0;i<s;i++){const e=k+i+d*A,t=k+i+d*(A+1),C=k+(i+1)+d*(A+1),n=k+(i+1)+d*A;r.push(e,t,n),r.push(t,C,n),v+=6}h.addGroup(g,v,j),g+=v,k+=p}D("z","y","x",-1,-1,e,i,A,n,C,0),D("z","y","x",1,-1,e,i,-A,n,C,1),D("x","z","y",1,1,A,e,i,t,n,2),D("x","z","y",1,-1,A,e,-i,t,n,3),D("x","y","z",1,-1,A,i,e,t,C,4),D("x","y","z",-1,-1,A,i,-e,t,C,5),this.setIndex(r),this.setAttribute("position",new mr(E,3)),this.setAttribute("normal",new mr(l,3)),this.setAttribute("uv",new mr(o,2))}}function Zr(A){const i={};for(const e in A){i[e]={};for(const t in A[e]){const C=A[e][t];C&&(C.isColor||C.isMatrix3||C.isMatrix4||C.isVector2||C.isVector3||C.isVector4||C.isTexture||C.isQuaternion)?i[e][t]=C.clone():Array.isArray(C)?i[e][t]=C.slice():i[e][t]=C}}return i}function _r(A){const i={};for(let e=0;e<A.length;e++){const t=Zr(A[e]);for(const A in t)i[A]=t[A]}return i}const $r={clone:Zr,merge:_r};function AE(A){_h.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==A&&(void 0!==A.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(A))}function iE(){Th.call(this),this.type="Camera",this.matrixWorldInverse=new oh,this.projectionMatrix=new oh,this.projectionMatrixInverse=new oh}function eE(A=50,i=1,e=.1,t=2e3){iE.call(this),this.type="PerspectiveCamera",this.fov=A,this.zoom=1,this.near=e,this.far=t,this.focus=10,this.aspect=i,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}AE.prototype=Object.create(_h.prototype),AE.prototype.constructor=AE,AE.prototype.isShaderMaterial=!0,AE.prototype.copy=function(A){return _h.prototype.copy.call(this,A),this.fragmentShader=A.fragmentShader,this.vertexShader=A.vertexShader,this.uniforms=Zr(A.uniforms),this.defines=Object.assign({},A.defines),this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.lights=A.lights,this.clipping=A.clipping,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this.extensions=Object.assign({},A.extensions),this.glslVersion=A.glslVersion,this},AE.prototype.toJSON=function(A){const i=_h.prototype.toJSON.call(this,A);i.glslVersion=this.glslVersion,i.uniforms={};for(const e in this.uniforms){const t=this.uniforms[e].value;t&&t.isTexture?i.uniforms[e]={type:"t",value:t.toJSON(A).uuid}:t&&t.isColor?i.uniforms[e]={type:"c",value:t.getHex()}:t&&t.isVector2?i.uniforms[e]={type:"v2",value:t.toArray()}:t&&t.isVector3?i.uniforms[e]={type:"v3",value:t.toArray()}:t&&t.isVector4?i.uniforms[e]={type:"v4",value:t.toArray()}:t&&t.isMatrix3?i.uniforms[e]={type:"m3",value:t.toArray()}:t&&t.isMatrix4?i.uniforms[e]={type:"m4",value:t.toArray()}:i.uniforms[e]={value:t}}Object.keys(this.defines).length>0&&(i.defines=this.defines),i.vertexShader=this.vertexShader,i.fragmentShader=this.fragmentShader;const e={};for(const A in this.extensions)!0===this.extensions[A]&&(e[A]=!0);return Object.keys(e).length>0&&(i.extensions=e),i},iE.prototype=Object.assign(Object.create(Th.prototype),{constructor:iE,isCamera:!0,copy:function(A,i){return Th.prototype.copy.call(this,A,i),this.matrixWorldInverse.copy(A.matrixWorldInverse),this.projectionMatrix.copy(A.projectionMatrix),this.projectionMatrixInverse.copy(A.projectionMatrixInverse),this},getWorldDirection:function(A){void 0===A&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),A=new Ln),this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return A.set(-i[8],-i[9],-i[10]).normalize()},updateMatrixWorld:function(A){Th.prototype.updateMatrixWorld.call(this,A),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(A,i){Th.prototype.updateWorldMatrix.call(this,A,i),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),eE.prototype=Object.assign(Object.create(iE.prototype),{constructor:eE,isPerspectiveCamera:!0,copy:function(A,i){return iE.prototype.copy.call(this,A,i),this.fov=A.fov,this.zoom=A.zoom,this.near=A.near,this.far=A.far,this.focus=A.focus,this.aspect=A.aspect,this.view=null===A.view?null:Object.assign({},A.view),this.filmGauge=A.filmGauge,this.filmOffset=A.filmOffset,this},setFocalLength:function(A){const i=.5*this.getFilmHeight()/A;this.fov=2*fn.RAD2DEG*Math.atan(i),this.updateProjectionMatrix()},getFocalLength:function(){const A=Math.tan(.5*fn.DEG2RAD*this.fov);return.5*this.getFilmHeight()/A},getEffectiveFOV:function(){return 2*fn.RAD2DEG*Math.atan(Math.tan(.5*fn.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(A,i,e,t,C,n){this.aspect=A/i,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=A,this.view.fullHeight=i,this.view.offsetX=e,this.view.offsetY=t,this.view.width=C,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const A=this.near;let i=A*Math.tan(.5*fn.DEG2RAD*this.fov)/this.zoom,e=2*i,t=this.aspect*e,C=-.5*t;const n=this.view;if(null!==this.view&&this.view.enabled){const A=n.fullWidth,h=n.fullHeight;C+=n.offsetX*t/A,i-=n.offsetY*e/h,t*=n.width/A,e*=n.height/h}const h=this.filmOffset;0!==h&&(C+=A*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(C,C+t,i,i-e,A,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(A){const i=Th.prototype.toJSON.call(this,A);return i.object.fov=this.fov,i.object.zoom=this.zoom,i.object.near=this.near,i.object.far=this.far,i.object.focus=this.focus,i.object.aspect=this.aspect,null!==this.view&&(i.object.view=Object.assign({},this.view)),i.object.filmGauge=this.filmGauge,i.object.filmOffset=this.filmOffset,i}});class tE extends Th{constructor(A,i,e){if(super(),this.type="CubeCamera",!0!==e.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=e;const t=new eE(90,1,A,i);t.layers=this.layers,t.up.set(0,-1,0),t.lookAt(new Ln(1,0,0)),this.add(t);const C=new eE(90,1,A,i);C.layers=this.layers,C.up.set(0,-1,0),C.lookAt(new Ln(-1,0,0)),this.add(C);const n=new eE(90,1,A,i);n.layers=this.layers,n.up.set(0,0,1),n.lookAt(new Ln(0,1,0)),this.add(n);const h=new eE(90,1,A,i);h.layers=this.layers,h.up.set(0,0,-1),h.lookAt(new Ln(0,-1,0)),this.add(h);const r=new eE(90,1,A,i);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Ln(0,0,1)),this.add(r);const E=new eE(90,1,A,i);E.layers=this.layers,E.up.set(0,-1,0),E.lookAt(new Ln(0,0,-1)),this.add(E)}update(A,i){null===this.parent&&this.updateMatrixWorld();const e=this.renderTarget,[t,C,n,h,r,E]=this.children,l=A.xr.enabled,o=A.getRenderTarget();A.xr.enabled=!1;const k=e.texture.generateMipmaps;e.texture.generateMipmaps=!1,A.setRenderTarget(e,0),A.render(i,t),A.setRenderTarget(e,1),A.render(i,C),A.setRenderTarget(e,2),A.render(i,n),A.setRenderTarget(e,3),A.render(i,h),A.setRenderTarget(e,4),A.render(i,r),e.texture.generateMipmaps=k,A.setRenderTarget(e,5),A.render(i,E),A.setRenderTarget(o),A.xr.enabled=l}}class CE extends bn{constructor(A,i,e,t,C,n,h,r,E,l){super(A=void 0!==A?A:[],i=void 0!==i?i:Ve,e,t,C,n,h=void 0!==h?h:Gt,r,E,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(A){this.image=A}}CE.prototype.isCubeTexture=!0;class nE extends wn{constructor(A,i,e){Number.isInteger(i)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),i=e),super(A,A,i),i=i||{},this.texture=new CE(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:Ct,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(A,i){this.texture.type=i.type,this.texture.format=dt,this.texture.encoding=i.encoding,this.texture.generateMipmaps=i.generateMipmaps,this.texture.minFilter=i.minFilter,this.texture.magFilter=i.magFilter;const e={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},t=new Xr(5,5,5),C=new AE({name:"CubemapFromEquirect",uniforms:Zr(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,side:Ae,blending:Ce});C.uniforms.tEquirect.value=i;const n=new Qr(t,C),h=i.minFilter;i.minFilter===rt&&(i.minFilter=Ct);return new tE(1,10,this).update(A,n),i.minFilter=h,n.geometry.dispose(),n.material.dispose(),this}clear(A,i,e,t){const C=A.getRenderTarget();for(let C=0;C<6;C++)A.setRenderTarget(this,C),A.clear(i,e,t);A.setRenderTarget(C)}}nE.prototype.isWebGLCubeRenderTarget=!0;class hE extends bn{constructor(A,i,e,t,C,n,h,r,E,l,o,k){super(null,n,h,r,E,l,t,C,o,k),this.image={data:A||null,width:i||1,height:e||1},this.magFilter=void 0!==E?E:$e,this.minFilter=void 0!==l?l:$e,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}hE.prototype.isDataTexture=!0;const rE=new ih,EE=new Ln;class lE{constructor(A=new Oh,i=new Oh,e=new Oh,t=new Oh,C=new Oh,n=new Oh){this.planes=[A,i,e,t,C,n]}set(A,i,e,t,C,n){const h=this.planes;return h[0].copy(A),h[1].copy(i),h[2].copy(e),h[3].copy(t),h[4].copy(C),h[5].copy(n),this}copy(A){const i=this.planes;for(let e=0;e<6;e++)i[e].copy(A.planes[e]);return this}setFromProjectionMatrix(A){const i=this.planes,e=A.elements,t=e[0],C=e[1],n=e[2],h=e[3],r=e[4],E=e[5],l=e[6],o=e[7],k=e[8],g=e[9],D=e[10],a=e[11],s=e[12],B=e[13],j=e[14],m=e[15];return i[0].setComponents(h-t,o-r,a-k,m-s).normalize(),i[1].setComponents(h+t,o+r,a+k,m+s).normalize(),i[2].setComponents(h+C,o+E,a+g,m+B).normalize(),i[3].setComponents(h-C,o-E,a-g,m-B).normalize(),i[4].setComponents(h-n,o-l,a-D,m-j).normalize(),i[5].setComponents(h+n,o+l,a+D,m+j).normalize(),this}intersectsObject(A){const i=A.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),rE.copy(i.boundingSphere).applyMatrix4(A.matrixWorld),this.intersectsSphere(rE)}intersectsSprite(A){return rE.center.set(0,0,0),rE.radius=.7071067811865476,rE.applyMatrix4(A.matrixWorld),this.intersectsSphere(rE)}intersectsSphere(A){const i=this.planes,e=A.center,t=-A.radius;for(let A=0;A<6;A++){if(i[A].distanceToPoint(e)<t)return!1}return!0}intersectsBox(A){const i=this.planes;for(let e=0;e<6;e++){const t=i[e];if(EE.x=t.normal.x>0?A.max.x:A.min.x,EE.y=t.normal.y>0?A.max.y:A.min.y,EE.z=t.normal.z>0?A.max.z:A.min.z,t.distanceToPoint(EE)<0)return!1}return!0}containsPoint(A){const i=this.planes;for(let e=0;e<6;e++)if(i[e].distanceToPoint(A)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function oE(){let A=null,i=!1,e=null,t=null;function C(i,n){e(i,n),t=A.requestAnimationFrame(C)}return{start:function(){!0!==i&&null!==e&&(t=A.requestAnimationFrame(C),i=!0)},stop:function(){A.cancelAnimationFrame(t),i=!1},setAnimationLoop:function(A){e=A},setContext:function(i){A=i}}}function kE(A,i){const e=i.isWebGL2,t=new WeakMap;return{get:function(A){return A.isInterleavedBufferAttribute&&(A=A.data),t.get(A)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const e=t.get(i);e&&(A.deleteBuffer(e.buffer),t.delete(i))},update:function(i,C){if(i.isGLBufferAttribute){const A=t.get(i);return void((!A||A.version<i.version)&&t.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}i.isInterleavedBufferAttribute&&(i=i.data);const n=t.get(i);void 0===n?t.set(i,function(i,t){const C=i.array,n=i.usage,h=A.createBuffer();A.bindBuffer(t,h),A.bufferData(t,C,n),i.onUploadCallback();let r=5126;return C instanceof Float32Array?r=5126:C instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):C instanceof Uint16Array?i.isFloat16BufferAttribute?e?r=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):r=5123:C instanceof Int16Array?r=5122:C instanceof Uint32Array?r=5125:C instanceof Int32Array?r=5124:C instanceof Int8Array?r=5120:C instanceof Uint8Array&&(r=5121),{buffer:h,type:r,bytesPerElement:C.BYTES_PER_ELEMENT,version:i.version}}(i,C)):n.version<i.version&&(!function(i,t,C){const n=t.array,h=t.updateRange;A.bindBuffer(C,i),-1===h.count?A.bufferSubData(C,0,n):(e?A.bufferSubData(C,h.offset*n.BYTES_PER_ELEMENT,n,h.offset,h.count):A.bufferSubData(C,h.offset*n.BYTES_PER_ELEMENT,n.subarray(h.offset,h.offset+h.count)),h.count=-1)}(n.buffer,i,C),n.version=i.version)}}}class gE extends br{constructor(A=1,i=1,e=1,t=1){super(),this.type="PlaneGeometry",this.parameters={width:A,height:i,widthSegments:e,heightSegments:t};const C=A/2,n=i/2,h=Math.floor(e),r=Math.floor(t),E=h+1,l=r+1,o=A/h,k=i/r,g=[],D=[],a=[],s=[];for(let A=0;A<l;A++){const i=A*k-n;for(let e=0;e<E;e++){const t=e*o-C;D.push(t,-i,0),a.push(0,0,1),s.push(e/h),s.push(1-A/r)}}for(let A=0;A<r;A++)for(let i=0;i<h;i++){const e=i+E*A,t=i+E*(A+1),C=i+1+E*(A+1),n=i+1+E*A;g.push(e,t,n),g.push(t,C,n)}this.setIndex(g),this.setAttribute("position",new mr(D,3)),this.setAttribute("normal",new mr(a,3)),this.setAttribute("uv",new mr(s,2))}}const DE={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},aE={common:{diffuse:{value:new nr(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new vn},uv2Transform:{value:new vn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new pn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new nr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new nr(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}},sprite:{diffuse:{value:new nr(15658734)},opacity:{value:1},center:{value:new pn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}}},sE={basic:{uniforms:_r([aE.common,aE.specularmap,aE.envmap,aE.aomap,aE.lightmap,aE.fog]),vertexShader:DE.meshbasic_vert,fragmentShader:DE.meshbasic_frag},lambert:{uniforms:_r([aE.common,aE.specularmap,aE.envmap,aE.aomap,aE.lightmap,aE.emissivemap,aE.fog,aE.lights,{emissive:{value:new nr(0)}}]),vertexShader:DE.meshlambert_vert,fragmentShader:DE.meshlambert_frag},phong:{uniforms:_r([aE.common,aE.specularmap,aE.envmap,aE.aomap,aE.lightmap,aE.emissivemap,aE.bumpmap,aE.normalmap,aE.displacementmap,aE.fog,aE.lights,{emissive:{value:new nr(0)},specular:{value:new nr(1118481)},shininess:{value:30}}]),vertexShader:DE.meshphong_vert,fragmentShader:DE.meshphong_frag},standard:{uniforms:_r([aE.common,aE.envmap,aE.aomap,aE.lightmap,aE.emissivemap,aE.bumpmap,aE.normalmap,aE.displacementmap,aE.roughnessmap,aE.metalnessmap,aE.fog,aE.lights,{emissive:{value:new nr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:DE.meshphysical_vert,fragmentShader:DE.meshphysical_frag},toon:{uniforms:_r([aE.common,aE.aomap,aE.lightmap,aE.emissivemap,aE.bumpmap,aE.normalmap,aE.displacementmap,aE.gradientmap,aE.fog,aE.lights,{emissive:{value:new nr(0)}}]),vertexShader:DE.meshtoon_vert,fragmentShader:DE.meshtoon_frag},matcap:{uniforms:_r([aE.common,aE.bumpmap,aE.normalmap,aE.displacementmap,aE.fog,{matcap:{value:null}}]),vertexShader:DE.meshmatcap_vert,fragmentShader:DE.meshmatcap_frag},points:{uniforms:_r([aE.points,aE.fog]),vertexShader:DE.points_vert,fragmentShader:DE.points_frag},dashed:{uniforms:_r([aE.common,aE.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:DE.linedashed_vert,fragmentShader:DE.linedashed_frag},depth:{uniforms:_r([aE.common,aE.displacementmap]),vertexShader:DE.depth_vert,fragmentShader:DE.depth_frag},normal:{uniforms:_r([aE.common,aE.bumpmap,aE.normalmap,aE.displacementmap,{opacity:{value:1}}]),vertexShader:DE.normal_vert,fragmentShader:DE.normal_frag},sprite:{uniforms:_r([aE.sprite,aE.fog]),vertexShader:DE.sprite_vert,fragmentShader:DE.sprite_frag},background:{uniforms:{uvTransform:{value:new vn},t2D:{value:null}},vertexShader:DE.background_vert,fragmentShader:DE.background_frag},cube:{uniforms:_r([aE.envmap,{opacity:{value:1}}]),vertexShader:DE.cube_vert,fragmentShader:DE.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:DE.equirect_vert,fragmentShader:DE.equirect_frag},distanceRGBA:{uniforms:_r([aE.common,aE.displacementmap,{referencePosition:{value:new Ln},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:DE.distanceRGBA_vert,fragmentShader:DE.distanceRGBA_frag},shadow:{uniforms:_r([aE.lights,aE.fog,{color:{value:new nr(0)},opacity:{value:1}}]),vertexShader:DE.shadow_vert,fragmentShader:DE.shadow_frag}};function BE(A,i,e,t,C){const n=new nr(0);let h,r,E=0,l=null,o=0,k=null;function g(A,i){e.buffers.color.setClear(A.r,A.g,A.b,i,C)}return{getClearColor:function(){return n},setClearColor:function(A,i=1){n.set(A),E=i,g(n,E)},getClearAlpha:function(){return E},setClearAlpha:function(A){E=A,g(n,E)},render:function(e,C,D,a){let s=!0===C.isScene?C.background:null;s&&s.isTexture&&(s=i.get(s));const B=A.xr,j=B.getSession&&B.getSession();j&&"additive"===j.environmentBlendMode&&(s=null),null===s?g(n,E):s&&s.isColor&&(g(s,1),a=!0),(A.autoClear||a)&&A.clear(A.autoClearColor,A.autoClearDepth,A.autoClearStencil),s&&(s.isCubeTexture||s.isWebGLCubeRenderTarget||s.mapping===Qe)?(void 0===r&&(r=new Qr(new Xr(1,1,1),new AE({name:"BackgroundCubeMaterial",uniforms:Zr(sE.cube.uniforms),vertexShader:sE.cube.vertexShader,fragmentShader:sE.cube.fragmentShader,side:Ae,depthTest:!1,depthWrite:!1,fog:!1})),r.geometry.deleteAttribute("normal"),r.geometry.deleteAttribute("uv"),r.onBeforeRender=function(A,i,e){this.matrixWorld.copyPosition(e.matrixWorld)},Object.defineProperty(r.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),t.update(r)),s.isWebGLCubeRenderTarget&&(s=s.texture),r.material.uniforms.envMap.value=s,r.material.uniforms.flipEnvMap.value=s.isCubeTexture&&s._needsFlipEnvMap?-1:1,l===s&&o===s.version&&k===A.toneMapping||(r.material.needsUpdate=!0,l=s,o=s.version,k=A.toneMapping),e.unshift(r,r.geometry,r.material,0,0,null)):s&&s.isTexture&&(void 0===h&&(h=new Qr(new gE(2,2),new AE({name:"BackgroundMaterial",uniforms:Zr(sE.background.uniforms),vertexShader:sE.background.vertexShader,fragmentShader:sE.background.fragmentShader,side:$i,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),t.update(h)),h.material.uniforms.t2D.value=s,!0===s.matrixAutoUpdate&&s.updateMatrix(),h.material.uniforms.uvTransform.value.copy(s.matrix),l===s&&o===s.version&&k===A.toneMapping||(h.material.needsUpdate=!0,l=s,o=s.version,k=A.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null))}}}function jE(A,i,e,t){const C=A.getParameter(34921),n=t.isWebGL2?null:i.get("OES_vertex_array_object"),h=t.isWebGL2||null!==n,r={},E=g(null);let l=E;function o(i){return t.isWebGL2?A.bindVertexArray(i):n.bindVertexArrayOES(i)}function k(i){return t.isWebGL2?A.deleteVertexArray(i):n.deleteVertexArrayOES(i)}function g(A){const i=[],e=[],t=[];for(let A=0;A<C;A++)i[A]=0,e[A]=0,t[A]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:i,enabledAttributes:e,attributeDivisors:t,object:A,attributes:{},index:null}}function D(){const A=l.newAttributes;for(let i=0,e=A.length;i<e;i++)A[i]=0}function a(A){s(A,0)}function s(e,C){const n=l.newAttributes,h=l.enabledAttributes,r=l.attributeDivisors;if(n[e]=1,0===h[e]&&(A.enableVertexAttribArray(e),h[e]=1),r[e]!==C){(t.isWebGL2?A:i.get("ANGLE_instanced_arrays"))[t.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,C),r[e]=C}}function B(){const i=l.newAttributes,e=l.enabledAttributes;for(let t=0,C=e.length;t<C;t++)e[t]!==i[t]&&(A.disableVertexAttribArray(t),e[t]=0)}function j(i,e,C,n,h,r){!0!==t.isWebGL2||5124!==C&&5125!==C?A.vertexAttribPointer(i,e,C,n,h,r):A.vertexAttribIPointer(i,e,C,h,r)}function m(){c(),l!==E&&(l=E,o(l.object))}function c(){E.geometry=null,E.program=null,E.wireframe=!1}return{setup:function(C,E,k,m,c){let u=!1;if(h){const i=function(i,e,C){const h=!0===C.wireframe;let E=r[i.id];void 0===E&&(E={},r[i.id]=E);let l=E[e.id];void 0===l&&(l={},E[e.id]=l);let o=l[h];void 0===o&&(o=g(t.isWebGL2?A.createVertexArray():n.createVertexArrayOES()),l[h]=o);return o}(m,k,E);l!==i&&(l=i,o(l.object)),u=function(A,i){const e=l.attributes,t=A.attributes;let C=0;for(const A in t){const i=e[A],n=t[A];if(void 0===i)return!0;if(i.attribute!==n)return!0;if(i.data!==n.data)return!0;C++}return l.attributesNum!==C||l.index!==i}(m,c),u&&function(A,i){const e={},t=A.attributes;let C=0;for(const A in t){const i=t[A],n={};n.attribute=i,i.data&&(n.data=i.data),e[A]=n,C++}l.attributes=e,l.attributesNum=C,l.index=i}(m,c)}else{const A=!0===E.wireframe;l.geometry===m.id&&l.program===k.id&&l.wireframe===A||(l.geometry=m.id,l.program=k.id,l.wireframe=A,u=!0)}!0===C.isInstancedMesh&&(u=!0),null!==c&&e.update(c,34963),u&&(!function(C,n,h,r){if(!1===t.isWebGL2&&(C.isInstancedMesh||r.isInstancedBufferGeometry)&&null===i.get("ANGLE_instanced_arrays"))return;D();const E=r.attributes,l=h.getAttributes(),o=n.defaultAttributeValues;for(const i in l){const t=l[i];if(t>=0){const n=E[i];if(void 0!==n){const i=n.normalized,C=n.itemSize,h=e.get(n);if(void 0===h)continue;const E=h.buffer,l=h.type,o=h.bytesPerElement;if(n.isInterleavedBufferAttribute){const e=n.data,h=e.stride,k=n.offset;e&&e.isInstancedInterleavedBuffer?(s(t,e.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=e.meshPerAttribute*e.count)):a(t),A.bindBuffer(34962,E),j(t,C,l,i,h*o,k*o)}else n.isInstancedBufferAttribute?(s(t,n.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=n.meshPerAttribute*n.count)):a(t),A.bindBuffer(34962,E),j(t,C,l,i,0,0)}else if("instanceMatrix"===i){const i=e.get(C.instanceMatrix);if(void 0===i)continue;const n=i.buffer,h=i.type;s(t+0,1),s(t+1,1),s(t+2,1),s(t+3,1),A.bindBuffer(34962,n),A.vertexAttribPointer(t+0,4,h,!1,64,0),A.vertexAttribPointer(t+1,4,h,!1,64,16),A.vertexAttribPointer(t+2,4,h,!1,64,32),A.vertexAttribPointer(t+3,4,h,!1,64,48)}else if("instanceColor"===i){const i=e.get(C.instanceColor);if(void 0===i)continue;const n=i.buffer,h=i.type;s(t,1),A.bindBuffer(34962,n),A.vertexAttribPointer(t,3,h,!1,12,0)}else if(void 0!==o){const e=o[i];if(void 0!==e)switch(e.length){case 2:A.vertexAttrib2fv(t,e);break;case 3:A.vertexAttrib3fv(t,e);break;case 4:A.vertexAttrib4fv(t,e);break;default:A.vertexAttrib1fv(t,e)}}}}B()}(C,E,k,m),null!==c&&A.bindBuffer(34963,e.get(c).buffer))},reset:m,resetDefaultState:c,dispose:function(){m();for(const A in r){const i=r[A];for(const A in i){const e=i[A];for(const A in e)k(e[A].object),delete e[A];delete i[A]}delete r[A]}},releaseStatesOfGeometry:function(A){if(void 0===r[A.id])return;const i=r[A.id];for(const A in i){const e=i[A];for(const A in e)k(e[A].object),delete e[A];delete i[A]}delete r[A.id]},releaseStatesOfProgram:function(A){for(const i in r){const e=r[i];if(void 0===e[A.id])continue;const t=e[A.id];for(const A in t)k(t[A].object),delete t[A];delete e[A.id]}},initAttributes:D,enableAttribute:a,disableUnusedAttributes:B}}function mE(A,i,e,t){const C=t.isWebGL2;let n;this.setMode=function(A){n=A},this.render=function(i,t){A.drawArrays(n,i,t),e.update(t,n,1)},this.renderInstances=function(t,h,r){if(0===r)return;let E,l;if(C)E=A,l="drawArraysInstanced";else if(E=i.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===E)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");E[l](n,t,h,r),e.update(h,n,r)}}function cE(A,i,e){let t;function C(i){if("highp"===i){if(A.getShaderPrecisionFormat(35633,36338).precision>0&&A.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";i="mediump"}return"mediump"===i&&A.getShaderPrecisionFormat(35633,36337).precision>0&&A.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const n="undefined"!=typeof WebGL2RenderingContext&&A instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&A instanceof WebGL2ComputeRenderingContext;let h=void 0!==e.precision?e.precision:"highp";const r=C(h);r!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",r,"instead."),h=r);const E=!0===e.logarithmicDepthBuffer,l=A.getParameter(34930),o=A.getParameter(35660),k=A.getParameter(3379),g=A.getParameter(34076),D=A.getParameter(34921),a=A.getParameter(36347),s=A.getParameter(36348),B=A.getParameter(36349),j=o>0,m=n||i.has("OES_texture_float");return{isWebGL2:n,getMaxAnisotropy:function(){if(void 0!==t)return t;if(!0===i.has("EXT_texture_filter_anisotropic")){const e=i.get("EXT_texture_filter_anisotropic");t=A.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else t=0;return t},getMaxPrecision:C,precision:h,logarithmicDepthBuffer:E,maxTextures:l,maxVertexTextures:o,maxTextureSize:k,maxCubemapSize:g,maxAttributes:D,maxVertexUniforms:a,maxVaryings:s,maxFragmentUniforms:B,vertexTextures:j,floatFragmentTextures:m,floatVertexTextures:j&&m,maxSamples:n?A.getParameter(36183):0}}function uE(A){const i=this;let e=null,t=0,C=!1,n=!1;const h=new Oh,r=new vn,E={value:null,needsUpdate:!1};function l(){E.value!==e&&(E.value=e,E.needsUpdate=t>0),i.numPlanes=t,i.numIntersection=0}function o(A,e,t,C){const n=null!==A?A.length:0;let l=null;if(0!==n){if(l=E.value,!0!==C||null===l){const i=t+4*n,C=e.matrixWorldInverse;r.getNormalMatrix(C),(null===l||l.length<i)&&(l=new Float32Array(i));for(let i=0,e=t;i!==n;++i,e+=4)h.copy(A[i]).applyMatrix4(C,r),h.normal.toArray(l,e),l[e+3]=h.constant}E.value=l,E.needsUpdate=!0}return i.numPlanes=n,i.numIntersection=0,l}this.uniform=E,this.numPlanes=0,this.numIntersection=0,this.init=function(A,i,n){const h=0!==A.length||i||0!==t||C;return C=i,e=o(A,n,0),t=A.length,h},this.beginShadows=function(){n=!0,o(null)},this.endShadows=function(){n=!1,l()},this.setState=function(i,h,r){const k=i.clippingPlanes,g=i.clipIntersection,D=i.clipShadows,a=A.get(i);if(!C||null===k||0===k.length||n&&!D)n?o(null):l();else{const A=n?0:t,i=4*A;let C=a.clippingState||null;E.value=C,C=o(k,h,i,r);for(let A=0;A!==i;++A)C[A]=e[A];a.clippingState=C,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=A}}}function FE(A){let i=new WeakMap;function e(A,i){return i===ze?A.mapping=Ve:i===qe&&(A.mapping=We),A}function t(A){const e=A.target;e.removeEventListener("dispose",t);const C=i.get(e);void 0!==C&&(i.delete(e),C.dispose())}return{get:function(C){if(C&&C.isTexture){const n=C.mapping;if(n===ze||n===qe){if(i.has(C)){return e(i.get(C).texture,C.mapping)}{const n=C.image;if(n&&n.height>0){const h=A.getRenderTarget(),r=new nE(n.height/2);return r.fromEquirectangularTexture(A,C),i.set(C,r),A.setRenderTarget(h),C.addEventListener("dispose",t),e(r.texture,C.mapping)}return null}}}return C},dispose:function(){i=new WeakMap}}}function GE(A){const i={};function e(e){if(void 0!==i[e])return i[e];let t;switch(e){case"WEBGL_depth_texture":t=A.getExtension("WEBGL_depth_texture")||A.getExtension("MOZ_WEBGL_depth_texture")||A.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=A.getExtension("EXT_texture_filter_anisotropic")||A.getExtension("MOZ_EXT_texture_filter_anisotropic")||A.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=A.getExtension("WEBGL_compressed_texture_s3tc")||A.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||A.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=A.getExtension("WEBGL_compressed_texture_pvrtc")||A.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=A.getExtension(e)}return i[e]=t,t}return{has:function(A){return null!==e(A)},init:function(A){A.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float")},get:function(A){const i=e(A);return null===i&&console.warn("THREE.WebGLRenderer: "+A+" extension not supported."),i}}}function dE(A,i,e,t){const C={},n=new WeakMap;function h(A){const r=A.target;null!==r.index&&i.remove(r.index);for(const A in r.attributes)i.remove(r.attributes[A]);r.removeEventListener("dispose",h),delete C[r.id];const E=n.get(r);E&&(i.remove(E),n.delete(r)),t.releaseStatesOfGeometry(r),!0===r.isInstancedBufferGeometry&&delete r._maxInstanceCount,e.memory.geometries--}function r(A){const e=[],t=A.index,C=A.attributes.position;let h=0;if(null!==t){const A=t.array;h=t.version;for(let i=0,t=A.length;i<t;i+=3){const t=A[i+0],C=A[i+1],n=A[i+2];e.push(t,C,C,n,n,t)}}else{const A=C.array;h=C.version;for(let i=0,t=A.length/3-1;i<t;i+=3){const A=i+0,t=i+1,C=i+2;e.push(A,t,t,C,C,A)}}const r=new(ur(e)>65535?Br:ar)(e,1);r.version=h;const E=n.get(A);E&&i.remove(E),n.set(A,r)}return{get:function(A,i){return!0===C[i.id]||(i.addEventListener("dispose",h),C[i.id]=!0,e.memory.geometries++),i},update:function(A){const e=A.attributes;for(const A in e)i.update(e[A],34962);const t=A.morphAttributes;for(const A in t){const e=t[A];for(let A=0,t=e.length;A<t;A++)i.update(e[A],34962)}},getWireframeAttribute:function(A){const i=n.get(A);if(i){const e=A.index;null!==e&&i.version<e.version&&r(A)}else r(A);return n.get(A)}}}function fE(A,i,e,t){const C=t.isWebGL2;let n,h,r;this.setMode=function(A){n=A},this.setIndex=function(A){h=A.type,r=A.bytesPerElement},this.render=function(i,t){A.drawElements(n,t,h,i*r),e.update(t,n,1)},this.renderInstances=function(t,E,l){if(0===l)return;let o,k;if(C)o=A,k="drawElementsInstanced";else if(o=i.get("ANGLE_instanced_arrays"),k="drawElementsInstancedANGLE",null===o)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[k](n,E,h,t*r,l),e.update(E,n,l)}}function pE(A){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(A,e,t){switch(i.calls++,e){case 4:i.triangles+=t*(A/3);break;case 1:i.lines+=t*(A/2);break;case 3:i.lines+=t*(A-1);break;case 2:i.lines+=t*A;break;case 0:i.points+=t*A;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e)}}}}function vE(A,i){return A[0]-i[0]}function HE(A,i){return Math.abs(i[1])-Math.abs(A[1])}function IE(A){const i={},e=new Float32Array(8),t=[];for(let A=0;A<8;A++)t[A]=[A,0];return{update:function(C,n,h,r){const E=C.morphTargetInfluences,l=void 0===E?0:E.length;let o=i[n.id];if(void 0===o){o=[];for(let A=0;A<l;A++)o[A]=[A,0];i[n.id]=o}for(let A=0;A<l;A++){const i=o[A];i[0]=A,i[1]=E[A]}o.sort(HE);for(let A=0;A<8;A++)A<l&&o[A][1]?(t[A][0]=o[A][0],t[A][1]=o[A][1]):(t[A][0]=Number.MAX_SAFE_INTEGER,t[A][1]=0);t.sort(vE);const k=h.morphTargets&&n.morphAttributes.position,g=h.morphNormals&&n.morphAttributes.normal;let D=0;for(let A=0;A<8;A++){const i=t[A],C=i[0],h=i[1];C!==Number.MAX_SAFE_INTEGER&&h?(k&&n.getAttribute("morphTarget"+A)!==k[C]&&n.setAttribute("morphTarget"+A,k[C]),g&&n.getAttribute("morphNormal"+A)!==g[C]&&n.setAttribute("morphNormal"+A,g[C]),e[A]=h,D+=h):(k&&!0===n.hasAttribute("morphTarget"+A)&&n.deleteAttribute("morphTarget"+A),g&&!0===n.hasAttribute("morphNormal"+A)&&n.deleteAttribute("morphNormal"+A),e[A]=0)}const a=n.morphTargetsRelative?1:1-D;r.getUniforms().setValue(A,"morphTargetBaseInfluence",a),r.getUniforms().setValue(A,"morphTargetInfluences",e)}}}function yE(A,i,e,t){let C=new WeakMap;function n(A){const i=A.target;i.removeEventListener("dispose",n),e.remove(i.instanceMatrix),null!==i.instanceColor&&e.remove(i.instanceColor)}return{update:function(A){const h=t.render.frame,r=A.geometry,E=i.get(A,r);return C.get(E)!==h&&(i.update(E),C.set(E,h)),A.isInstancedMesh&&(!1===A.hasEventListener("dispose",n)&&A.addEventListener("dispose",n),e.update(A.instanceMatrix,34962),null!==A.instanceColor&&e.update(A.instanceColor,34962)),E},dispose:function(){C=new WeakMap}}}sE.physical={uniforms:_r([sE.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new pn(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new nr(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:DE.meshphysical_vert,fragmentShader:DE.meshphysical_frag};class bE extends bn{constructor(A=null,i=1,e=1,t=1){super(null),this.image={data:A,width:i,height:e,depth:t},this.magFilter=$e,this.minFilter=$e,this.wrapR=Ze,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}bE.prototype.isDataTexture2DArray=!0;class ME extends bn{constructor(A=null,i=1,e=1,t=1){super(null),this.image={data:A,width:i,height:e,depth:t},this.magFilter=$e,this.minFilter=$e,this.wrapR=Ze,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}ME.prototype.isDataTexture3D=!0;const xE=new bn,wE=new bE,SE=new ME,TE=new CE,LE=[],RE=[],PE=new Float32Array(16),OE=new Float32Array(9),NE=new Float32Array(4);function JE(A,i,e){const t=A[0];if(t<=0||t>0)return A;const C=i*e;let n=LE[C];if(void 0===n&&(n=new Float32Array(C),LE[C]=n),0!==i){t.toArray(n,0);for(let t=1,C=0;t!==i;++t)C+=e,A[t].toArray(n,C)}return n}function KE(A,i){if(A.length!==i.length)return!1;for(let e=0,t=A.length;e<t;e++)if(A[e]!==i[e])return!1;return!0}function UE(A,i){for(let e=0,t=i.length;e<t;e++)A[e]=i[e]}function VE(A,i){let e=RE[i];void 0===e&&(e=new Int32Array(i),RE[i]=e);for(let t=0;t!==i;++t)e[t]=A.allocateTextureUnit();return e}function WE(A,i){const e=this.cache;e[0]!==i&&(A.uniform1f(this.addr,i),e[0]=i)}function zE(A,i){const e=this.cache;if(void 0!==i.x)e[0]===i.x&&e[1]===i.y||(A.uniform2f(this.addr,i.x,i.y),e[0]=i.x,e[1]=i.y);else{if(KE(e,i))return;A.uniform2fv(this.addr,i),UE(e,i)}}function qE(A,i){const e=this.cache;if(void 0!==i.x)e[0]===i.x&&e[1]===i.y&&e[2]===i.z||(A.uniform3f(this.addr,i.x,i.y,i.z),e[0]=i.x,e[1]=i.y,e[2]=i.z);else if(void 0!==i.r)e[0]===i.r&&e[1]===i.g&&e[2]===i.b||(A.uniform3f(this.addr,i.r,i.g,i.b),e[0]=i.r,e[1]=i.g,e[2]=i.b);else{if(KE(e,i))return;A.uniform3fv(this.addr,i),UE(e,i)}}function QE(A,i){const e=this.cache;if(void 0!==i.x)e[0]===i.x&&e[1]===i.y&&e[2]===i.z&&e[3]===i.w||(A.uniform4f(this.addr,i.x,i.y,i.z,i.w),e[0]=i.x,e[1]=i.y,e[2]=i.z,e[3]=i.w);else{if(KE(e,i))return;A.uniform4fv(this.addr,i),UE(e,i)}}function YE(A,i){const e=this.cache,t=i.elements;if(void 0===t){if(KE(e,i))return;A.uniformMatrix2fv(this.addr,!1,i),UE(e,i)}else{if(KE(e,t))return;NE.set(t),A.uniformMatrix2fv(this.addr,!1,NE),UE(e,t)}}function XE(A,i){const e=this.cache,t=i.elements;if(void 0===t){if(KE(e,i))return;A.uniformMatrix3fv(this.addr,!1,i),UE(e,i)}else{if(KE(e,t))return;OE.set(t),A.uniformMatrix3fv(this.addr,!1,OE),UE(e,t)}}function ZE(A,i){const e=this.cache,t=i.elements;if(void 0===t){if(KE(e,i))return;A.uniformMatrix4fv(this.addr,!1,i),UE(e,i)}else{if(KE(e,t))return;PE.set(t),A.uniformMatrix4fv(this.addr,!1,PE),UE(e,t)}}function _E(A,i,e){const t=this.cache,C=e.allocateTextureUnit();t[0]!==C&&(A.uniform1i(this.addr,C),t[0]=C),e.safeSetTexture2D(i||xE,C)}function $E(A,i,e){const t=this.cache,C=e.allocateTextureUnit();t[0]!==C&&(A.uniform1i(this.addr,C),t[0]=C),e.setTexture2DArray(i||wE,C)}function Al(A,i,e){const t=this.cache,C=e.allocateTextureUnit();t[0]!==C&&(A.uniform1i(this.addr,C),t[0]=C),e.setTexture3D(i||SE,C)}function il(A,i,e){const t=this.cache,C=e.allocateTextureUnit();t[0]!==C&&(A.uniform1i(this.addr,C),t[0]=C),e.safeSetTextureCube(i||TE,C)}function el(A,i){const e=this.cache;e[0]!==i&&(A.uniform1i(this.addr,i),e[0]=i)}function tl(A,i){const e=this.cache;KE(e,i)||(A.uniform2iv(this.addr,i),UE(e,i))}function Cl(A,i){const e=this.cache;KE(e,i)||(A.uniform3iv(this.addr,i),UE(e,i))}function nl(A,i){const e=this.cache;KE(e,i)||(A.uniform4iv(this.addr,i),UE(e,i))}function hl(A,i){const e=this.cache;e[0]!==i&&(A.uniform1ui(this.addr,i),e[0]=i)}function rl(A,i){A.uniform1fv(this.addr,i)}function El(A,i){A.uniform1iv(this.addr,i)}function ll(A,i){A.uniform2iv(this.addr,i)}function ol(A,i){A.uniform3iv(this.addr,i)}function kl(A,i){A.uniform4iv(this.addr,i)}function gl(A,i){const e=JE(i,this.size,2);A.uniform2fv(this.addr,e)}function Dl(A,i){const e=JE(i,this.size,3);A.uniform3fv(this.addr,e)}function al(A,i){const e=JE(i,this.size,4);A.uniform4fv(this.addr,e)}function sl(A,i){const e=JE(i,this.size,4);A.uniformMatrix2fv(this.addr,!1,e)}function Bl(A,i){const e=JE(i,this.size,9);A.uniformMatrix3fv(this.addr,!1,e)}function jl(A,i){const e=JE(i,this.size,16);A.uniformMatrix4fv(this.addr,!1,e)}function ml(A,i,e){const t=i.length,C=VE(e,t);A.uniform1iv(this.addr,C);for(let A=0;A!==t;++A)e.safeSetTexture2D(i[A]||xE,C[A])}function cl(A,i,e){const t=i.length,C=VE(e,t);A.uniform1iv(this.addr,C);for(let A=0;A!==t;++A)e.safeSetTextureCube(i[A]||TE,C[A])}function ul(A,i,e){this.id=A,this.addr=e,this.cache=[],this.setValue=function(A){switch(A){case 5126:return WE;case 35664:return zE;case 35665:return qE;case 35666:return QE;case 35674:return YE;case 35675:return XE;case 35676:return ZE;case 5124:case 35670:return el;case 35667:case 35671:return tl;case 35668:case 35672:return Cl;case 35669:case 35673:return nl;case 5125:return hl;case 35678:case 36198:case 36298:case 36306:case 35682:return _E;case 35679:case 36299:case 36307:return Al;case 35680:case 36300:case 36308:case 36293:return il;case 36289:case 36303:case 36311:case 36292:return $E}}(i.type)}function Fl(A,i,e){this.id=A,this.addr=e,this.cache=[],this.size=i.size,this.setValue=function(A){switch(A){case 5126:return rl;case 35664:return gl;case 35665:return Dl;case 35666:return al;case 35674:return sl;case 35675:return Bl;case 35676:return jl;case 5124:case 35670:return El;case 35667:case 35671:return ll;case 35668:case 35672:return ol;case 35669:case 35673:return kl;case 35678:case 36198:case 36298:case 36306:case 35682:return ml;case 35680:case 36300:case 36308:case 36293:return cl}}(i.type)}function Gl(A){this.id=A,this.seq=[],this.map={}}Fl.prototype.updateCache=function(A){const i=this.cache;A instanceof Float32Array&&i.length!==A.length&&(this.cache=new Float32Array(A.length)),UE(i,A)},Gl.prototype.setValue=function(A,i,e){const t=this.seq;for(let C=0,n=t.length;C!==n;++C){const n=t[C];n.setValue(A,i[n.id],e)}};const dl=/(\w+)(\])?(\[|\.)?/g;function fl(A,i){A.seq.push(i),A.map[i.id]=i}function pl(A,i,e){const t=A.name,C=t.length;for(dl.lastIndex=0;;){const n=dl.exec(t),h=dl.lastIndex;let r=n[1];const E="]"===n[2],l=n[3];if(E&&(r|=0),void 0===l||"["===l&&h+2===C){fl(e,void 0===l?new ul(r,A,i):new Fl(r,A,i));break}{let A=e.map[r];void 0===A&&(A=new Gl(r),fl(e,A)),e=A}}}function vl(A,i){this.seq=[],this.map={};const e=A.getProgramParameter(i,35718);for(let t=0;t<e;++t){const e=A.getActiveUniform(i,t);pl(e,A.getUniformLocation(i,e.name),this)}}function Hl(A,i,e){const t=A.createShader(i);return A.shaderSource(t,e),A.compileShader(t),t}vl.prototype.setValue=function(A,i,e,t){const C=this.map[i];void 0!==C&&C.setValue(A,e,t)},vl.prototype.setOptional=function(A,i,e){const t=i[e];void 0!==t&&this.setValue(A,e,t)},vl.upload=function(A,i,e,t){for(let C=0,n=i.length;C!==n;++C){const n=i[C],h=e[n.id];!1!==h.needsUpdate&&n.setValue(A,h.value,t)}},vl.seqWithValue=function(A,i){const e=[];for(let t=0,C=A.length;t!==C;++t){const C=A[t];C.id in i&&e.push(C)}return e};let Il=0;function yl(A){switch(A){case TC:return["Linear","( value )"];case LC:return["sRGB","( value )"];case PC:return["RGBE","( value )"];case NC:return["RGBM","( value, 7.0 )"];case JC:return["RGBM","( value, 16.0 )"];case KC:return["RGBD","( value, 256.0 )"];case RC:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case OC:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",A),["Linear","( value )"]}}function bl(A,i,e){const t=A.getShaderParameter(i,35713),C=A.getShaderInfoLog(i).trim();if(t&&""===C)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+e+"\n"+C+function(A){const i=A.split("\n");for(let A=0;A<i.length;A++)i[A]=A+1+": "+i[A];return i.join("\n")}(A.getShaderSource(i))}function Ml(A,i){const e=yl(i);return"vec4 "+A+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function xl(A,i){const e=yl(i);return"vec4 "+A+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function wl(A,i){let e;switch(i){case Pe:e="Linear";break;case Oe:e="Reinhard";break;case Ne:e="OptimizedCineon";break;case Je:e="ACESFilmic";break;case Ke:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",i),e="Linear"}return"vec3 "+A+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function Sl(A){return""!==A}function Tl(A,i){return A.replace(/NUM_DIR_LIGHTS/g,i.numDirLights).replace(/NUM_SPOT_LIGHTS/g,i.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,i.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,i.numPointLights).replace(/NUM_HEMI_LIGHTS/g,i.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,i.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,i.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,i.numPointLightShadows)}function Ll(A,i){return A.replace(/NUM_CLIPPING_PLANES/g,i.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,i.numClippingPlanes-i.numClipIntersection)}const Rl=/^[ \t]*#include +<([\w\d./]+)>/gm;function Pl(A){return A.replace(Rl,Ol)}function Ol(A,i){const e=DE[i];if(void 0===e)throw new Error("Can not resolve #include <"+i+">");return Pl(e)}const Nl=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Jl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Kl(A){return A.replace(Jl,Vl).replace(Nl,Ul)}function Ul(A,i,e,t){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Vl(A,i,e,t)}function Vl(A,i,e,t){let C="";for(let A=parseInt(i);A<parseInt(e);A++)C+=t.replace(/\[\s*i\s*\]/g,"[ "+A+" ]").replace(/UNROLLED_LOOP_INDEX/g,A);return C}function Wl(A){let i="precision "+A.precision+" float;\nprecision "+A.precision+" int;";return"highp"===A.precision?i+="\n#define HIGH_PRECISION":"mediump"===A.precision?i+="\n#define MEDIUM_PRECISION":"lowp"===A.precision&&(i+="\n#define LOW_PRECISION"),i}function zl(A,i,e,t){const C=A.getContext(),n=e.defines;let h=e.vertexShader,r=e.fragmentShader;const E=function(A){let i="SHADOWMAP_TYPE_BASIC";return A.shadowMapType===Xi?i="SHADOWMAP_TYPE_PCF":A.shadowMapType===Zi?i="SHADOWMAP_TYPE_PCF_SOFT":A.shadowMapType===_i&&(i="SHADOWMAP_TYPE_VSM"),i}(e),l=function(A){let i="ENVMAP_TYPE_CUBE";if(A.envMap)switch(A.envMapMode){case Ve:case We:i="ENVMAP_TYPE_CUBE";break;case Qe:case Ye:i="ENVMAP_TYPE_CUBE_UV"}return i}(e),o=function(A){let i="ENVMAP_MODE_REFLECTION";if(A.envMap)switch(A.envMapMode){case We:case Ye:i="ENVMAP_MODE_REFRACTION"}return i}(e),k=function(A){let i="ENVMAP_BLENDING_NONE";if(A.envMap)switch(A.combine){case Se:i="ENVMAP_BLENDING_MULTIPLY";break;case Te:i="ENVMAP_BLENDING_MIX";break;case Le:i="ENVMAP_BLENDING_ADD"}return i}(e),g=A.gammaFactor>0?A.gammaFactor:1,D=e.isWebGL2?"":function(A){return[A.extensionDerivatives||A.envMapCubeUV||A.bumpMap||A.tangentSpaceNormalMap||A.clearcoatNormalMap||A.flatShading||"physical"===A.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(A.extensionFragDepth||A.logarithmicDepthBuffer)&&A.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",A.extensionDrawBuffers&&A.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(A.extensionShaderTextureLOD||A.envMap)&&A.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Sl).join("\n")}(e),a=function(A){const i=[];for(const e in A){const t=A[e];!1!==t&&i.push("#define "+e+" "+t)}return i.join("\n")}(n),s=C.createProgram();let B,j,m=e.glslVersion?"#version "+e.glslVersion+"\n":"";e.isRawShaderMaterial?(B=[a].filter(Sl).join("\n"),B.length>0&&(B+="\n"),j=[D,a].filter(Sl).join("\n"),j.length>0&&(j+="\n")):(B=[Wl(e),"#define SHADER_NAME "+e.shaderName,a,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+o:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&!1===e.flatShading?"#define USE_MORPHNORMALS":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+E:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Sl).join("\n"),j=[D,Wl(e),"#define SHADER_NAME "+e.shaderName,a,e.alphaTest?"#define ALPHATEST "+e.alphaTest+(e.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+o:"",e.envMap?"#define "+k:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.sheen?"#define USE_SHEEN":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+E:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Re?"#define TONE_MAPPING":"",e.toneMapping!==Re?DE.tonemapping_pars_fragment:"",e.toneMapping!==Re?wl("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",DE.encodings_pars_fragment,e.map?Ml("mapTexelToLinear",e.mapEncoding):"",e.matcap?Ml("matcapTexelToLinear",e.matcapEncoding):"",e.envMap?Ml("envMapTexelToLinear",e.envMapEncoding):"",e.emissiveMap?Ml("emissiveMapTexelToLinear",e.emissiveMapEncoding):"",e.lightMap?Ml("lightMapTexelToLinear",e.lightMapEncoding):"",xl("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"","\n"].filter(Sl).join("\n")),h=Pl(h),h=Tl(h,e),h=Ll(h,e),r=Pl(r),r=Tl(r,e),r=Ll(r,e),h=Kl(h),r=Kl(r),e.isWebGL2&&!0!==e.isRawShaderMaterial&&(m="#version 300 es\n",B=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+B,j=["#define varying in",e.glslVersion===un?"":"out highp vec4 pc_fragColor;",e.glslVersion===un?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+j);const c=m+j+r,u=Hl(C,35633,m+B+h),F=Hl(C,35632,c);if(C.attachShader(s,u),C.attachShader(s,F),void 0!==e.index0AttributeName?C.bindAttribLocation(s,0,e.index0AttributeName):!0===e.morphTargets&&C.bindAttribLocation(s,0,"position"),C.linkProgram(s),A.debug.checkShaderErrors){const A=C.getProgramInfoLog(s).trim(),i=C.getShaderInfoLog(u).trim(),e=C.getShaderInfoLog(F).trim();let t=!0,n=!0;if(!1===C.getProgramParameter(s,35714)){t=!1;const i=bl(C,u,"vertex"),e=bl(C,F,"fragment");console.error("THREE.WebGLProgram: shader error: ",C.getError(),"35715",C.getProgramParameter(s,35715),"gl.getProgramInfoLog",A,i,e)}else""!==A?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",A):""!==i&&""!==e||(n=!1);n&&(this.diagnostics={runnable:t,programLog:A,vertexShader:{log:i,prefix:B},fragmentShader:{log:e,prefix:j}})}let G,d;return C.deleteShader(u),C.deleteShader(F),this.getUniforms=function(){return void 0===G&&(G=new vl(C,s)),G},this.getAttributes=function(){return void 0===d&&(d=function(A,i){const e={},t=A.getProgramParameter(i,35721);for(let C=0;C<t;C++){const t=A.getActiveAttrib(i,C).name;e[t]=A.getAttribLocation(i,t)}return e}(C,s)),d},this.destroy=function(){t.releaseStatesOfProgram(this),C.deleteProgram(s),this.program=void 0},this.name=e.shaderName,this.id=Il++,this.cacheKey=i,this.usedTimes=1,this.program=s,this.vertexShader=u,this.fragmentShader=F,this}function ql(A,i,e,t,C,n){const h=[],r=t.isWebGL2,E=t.logarithmicDepthBuffer,l=t.floatVertexTextures,o=t.maxVertexUniforms,k=t.vertexTextures;let g=t.precision;const D={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},a=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function s(A){let i;return A&&A.isTexture?i=A.encoding:A&&A.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=A.texture.encoding):i=TC,i}return{getParameters:function(C,h,a,B,j){const m=B.fog,c=C.isMeshStandardMaterial?B.environment:null,u=i.get(C.envMap||c),F=D[C.type],G=j.isSkinnedMesh?function(A){const i=A.skeleton.bones;if(l)return 1024;{const A=o,e=Math.floor((A-20)/4),t=Math.min(e,i.length);return t<i.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+i.length+" bones. This GPU supports "+t+"."),0):t}}(j):0;let d,f;if(null!==C.precision&&(g=t.getMaxPrecision(C.precision),g!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",g,"instead.")),F){const A=sE[F];d=A.vertexShader,f=A.fragmentShader}else d=C.vertexShader,f=C.fragmentShader;const p=A.getRenderTarget();return{isWebGL2:r,shaderID:F,shaderName:C.type,vertexShader:d,fragmentShader:f,defines:C.defines,isRawShaderMaterial:!0===C.isRawShaderMaterial,glslVersion:C.glslVersion,precision:g,instancing:!0===j.isInstancedMesh,instancingColor:!0===j.isInstancedMesh&&null!==j.instanceColor,supportsVertexTextures:k,outputEncoding:null!==p?s(p.texture):A.outputEncoding,map:!!C.map,mapEncoding:s(C.map),matcap:!!C.matcap,matcapEncoding:s(C.matcap),envMap:!!u,envMapMode:u&&u.mapping,envMapEncoding:s(u),envMapCubeUV:!!u&&(u.mapping===Qe||u.mapping===Ye),lightMap:!!C.lightMap,lightMapEncoding:s(C.lightMap),aoMap:!!C.aoMap,emissiveMap:!!C.emissiveMap,emissiveMapEncoding:s(C.emissiveMap),bumpMap:!!C.bumpMap,normalMap:!!C.normalMap,objectSpaceNormalMap:C.normalMapType===zC,tangentSpaceNormalMap:C.normalMapType===WC,clearcoatMap:!!C.clearcoatMap,clearcoatRoughnessMap:!!C.clearcoatRoughnessMap,clearcoatNormalMap:!!C.clearcoatNormalMap,displacementMap:!!C.displacementMap,roughnessMap:!!C.roughnessMap,metalnessMap:!!C.metalnessMap,specularMap:!!C.specularMap,alphaMap:!!C.alphaMap,gradientMap:!!C.gradientMap,sheen:!!C.sheen,transmissionMap:!!C.transmissionMap,combine:C.combine,vertexTangents:C.normalMap&&C.vertexTangents,vertexColors:C.vertexColors,vertexUvs:!!(C.map||C.bumpMap||C.normalMap||C.specularMap||C.alphaMap||C.emissiveMap||C.roughnessMap||C.metalnessMap||C.clearcoatMap||C.clearcoatRoughnessMap||C.clearcoatNormalMap||C.displacementMap||C.transmissionMap),uvsVertexOnly:!(C.map||C.bumpMap||C.normalMap||C.specularMap||C.alphaMap||C.emissiveMap||C.roughnessMap||C.metalnessMap||C.clearcoatNormalMap||C.transmissionMap||!C.displacementMap),fog:!!m,useFog:C.fog,fogExp2:m&&m.isFogExp2,flatShading:!!C.flatShading,sizeAttenuation:C.sizeAttenuation,logarithmicDepthBuffer:E,skinning:C.skinning&&G>0,maxBones:G,useVertexTexture:l,morphTargets:C.morphTargets,morphNormals:C.morphNormals,maxMorphTargets:A.maxMorphTargets,maxMorphNormals:A.maxMorphNormals,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:n.numPlanes,numClipIntersection:n.numIntersection,dithering:C.dithering,shadowMapEnabled:A.shadowMap.enabled&&a.length>0,shadowMapType:A.shadowMap.type,toneMapping:C.toneMapped?A.toneMapping:Re,physicallyCorrectLights:A.physicallyCorrectLights,premultipliedAlpha:C.premultipliedAlpha,alphaTest:C.alphaTest,doubleSided:C.side===ie,flipSided:C.side===Ae,depthPacking:void 0!==C.depthPacking&&C.depthPacking,index0AttributeName:C.index0AttributeName,extensionDerivatives:C.extensions&&C.extensions.derivatives,extensionFragDepth:C.extensions&&C.extensions.fragDepth,extensionDrawBuffers:C.extensions&&C.extensions.drawBuffers,extensionShaderTextureLOD:C.extensions&&C.extensions.shaderTextureLOD,rendererExtensionFragDepth:r||e.has("EXT_frag_depth"),rendererExtensionDrawBuffers:r||e.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:r||e.has("EXT_shader_texture_lod"),customProgramCacheKey:C.customProgramCacheKey()}},getProgramCacheKey:function(i){const e=[];if(i.shaderID?e.push(i.shaderID):(e.push(i.fragmentShader),e.push(i.vertexShader)),void 0!==i.defines)for(const A in i.defines)e.push(A),e.push(i.defines[A]);if(!1===i.isRawShaderMaterial){for(let A=0;A<a.length;A++)e.push(i[a[A]]);e.push(A.outputEncoding),e.push(A.gammaFactor)}return e.push(i.customProgramCacheKey),e.join()},getUniforms:function(A){const i=D[A.type];let e;if(i){const A=sE[i];e=$r.clone(A.uniforms)}else e=A.uniforms;return e},acquireProgram:function(i,e){let t;for(let A=0,i=h.length;A<i;A++){const i=h[A];if(i.cacheKey===e){t=i,++t.usedTimes;break}}return void 0===t&&(t=new zl(A,e,i,C),h.push(t)),t},releaseProgram:function(A){if(0==--A.usedTimes){const i=h.indexOf(A);h[i]=h[h.length-1],h.pop(),A.destroy()}},programs:h}}function Ql(){let A=new WeakMap;return{get:function(i){let e=A.get(i);return void 0===e&&(e={},A.set(i,e)),e},remove:function(i){A.delete(i)},update:function(i,e,t){A.get(i)[e]=t},dispose:function(){A=new WeakMap}}}function Yl(A,i){return A.groupOrder!==i.groupOrder?A.groupOrder-i.groupOrder:A.renderOrder!==i.renderOrder?A.renderOrder-i.renderOrder:A.program!==i.program?A.program.id-i.program.id:A.material.id!==i.material.id?A.material.id-i.material.id:A.z!==i.z?A.z-i.z:A.id-i.id}function Xl(A,i){return A.groupOrder!==i.groupOrder?A.groupOrder-i.groupOrder:A.renderOrder!==i.renderOrder?A.renderOrder-i.renderOrder:A.z!==i.z?i.z-A.z:A.id-i.id}function Zl(A){const i=[];let e=0;const t=[],C=[],n={id:-1};function h(t,C,h,r,E,l){let o=i[e];const k=A.get(h);return void 0===o?(o={id:t.id,object:t,geometry:C,material:h,program:k.program||n,groupOrder:r,renderOrder:t.renderOrder,z:E,group:l},i[e]=o):(o.id=t.id,o.object=t,o.geometry=C,o.material=h,o.program=k.program||n,o.groupOrder=r,o.renderOrder=t.renderOrder,o.z=E,o.group=l),e++,o}return{opaque:t,transparent:C,init:function(){e=0,t.length=0,C.length=0},push:function(A,i,e,n,r,E){const l=h(A,i,e,n,r,E);(!0===e.transparent?C:t).push(l)},unshift:function(A,i,e,n,r,E){const l=h(A,i,e,n,r,E);(!0===e.transparent?C:t).unshift(l)},finish:function(){for(let A=e,t=i.length;A<t;A++){const e=i[A];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.program=null,e.group=null}},sort:function(A,i){t.length>1&&t.sort(A||Yl),C.length>1&&C.sort(i||Xl)}}}function _l(A){let i=new WeakMap;return{get:function(e,t){let C;return!1===i.has(e)?(C=new Zl(A),i.set(e,[C])):t>=i.get(e).length?(C=new Zl(A),i.get(e).push(C)):C=i.get(e)[t],C},dispose:function(){i=new WeakMap}}}function $l(){const A={};return{get:function(i){if(void 0!==A[i.id])return A[i.id];let e;switch(i.type){case"DirectionalLight":e={direction:new Ln,color:new nr};break;case"SpotLight":e={position:new Ln,direction:new Ln,color:new nr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new Ln,color:new nr,distance:0,decay:0};break;case"HemisphereLight":e={direction:new Ln,skyColor:new nr,groundColor:new nr};break;case"RectAreaLight":e={color:new nr,position:new Ln,halfWidth:new Ln,halfHeight:new Ln}}return A[i.id]=e,e}}}let Ao=0;function io(A,i){return(i.castShadow?1:0)-(A.castShadow?1:0)}function eo(A,i){const e=new $l,t=function(){const A={};return{get:function(i){if(void 0!==A[i.id])return A[i.id];let e;switch(i.type){case"DirectionalLight":case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pn};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pn,shadowCameraNear:1,shadowCameraFar:1e3}}return A[i.id]=e,e}}}(),C={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let A=0;A<9;A++)C.probe.push(new Ln);const n=new Ln,h=new oh,r=new oh;return{setup:function(n){let h=0,r=0,E=0;for(let A=0;A<9;A++)C.probe[A].set(0,0,0);let l=0,o=0,k=0,g=0,D=0,a=0,s=0,B=0;n.sort(io);for(let A=0,i=n.length;A<i;A++){const i=n[A],j=i.color,m=i.intensity,c=i.distance,u=i.shadow&&i.shadow.map?i.shadow.map.texture:null;if(i.isAmbientLight)h+=j.r*m,r+=j.g*m,E+=j.b*m;else if(i.isLightProbe)for(let A=0;A<9;A++)C.probe[A].addScaledVector(i.sh.coefficients[A],m);else if(i.isDirectionalLight){const A=e.get(i);if(A.color.copy(i.color).multiplyScalar(i.intensity),i.castShadow){const A=i.shadow,e=t.get(i);e.shadowBias=A.bias,e.shadowNormalBias=A.normalBias,e.shadowRadius=A.radius,e.shadowMapSize=A.mapSize,C.directionalShadow[l]=e,C.directionalShadowMap[l]=u,C.directionalShadowMatrix[l]=i.shadow.matrix,a++}C.directional[l]=A,l++}else if(i.isSpotLight){const A=e.get(i);if(A.position.setFromMatrixPosition(i.matrixWorld),A.color.copy(j).multiplyScalar(m),A.distance=c,A.coneCos=Math.cos(i.angle),A.penumbraCos=Math.cos(i.angle*(1-i.penumbra)),A.decay=i.decay,i.castShadow){const A=i.shadow,e=t.get(i);e.shadowBias=A.bias,e.shadowNormalBias=A.normalBias,e.shadowRadius=A.radius,e.shadowMapSize=A.mapSize,C.spotShadow[k]=e,C.spotShadowMap[k]=u,C.spotShadowMatrix[k]=i.shadow.matrix,B++}C.spot[k]=A,k++}else if(i.isRectAreaLight){const A=e.get(i);A.color.copy(j).multiplyScalar(m),A.halfWidth.set(.5*i.width,0,0),A.halfHeight.set(0,.5*i.height,0),C.rectArea[g]=A,g++}else if(i.isPointLight){const A=e.get(i);if(A.color.copy(i.color).multiplyScalar(i.intensity),A.distance=i.distance,A.decay=i.decay,i.castShadow){const A=i.shadow,e=t.get(i);e.shadowBias=A.bias,e.shadowNormalBias=A.normalBias,e.shadowRadius=A.radius,e.shadowMapSize=A.mapSize,e.shadowCameraNear=A.camera.near,e.shadowCameraFar=A.camera.far,C.pointShadow[o]=e,C.pointShadowMap[o]=u,C.pointShadowMatrix[o]=i.shadow.matrix,s++}C.point[o]=A,o++}else if(i.isHemisphereLight){const A=e.get(i);A.skyColor.copy(i.color).multiplyScalar(m),A.groundColor.copy(i.groundColor).multiplyScalar(m),C.hemi[D]=A,D++}}g>0&&(i.isWebGL2||!0===A.has("OES_texture_float_linear")?(C.rectAreaLTC1=aE.LTC_FLOAT_1,C.rectAreaLTC2=aE.LTC_FLOAT_2):!0===A.has("OES_texture_half_float_linear")?(C.rectAreaLTC1=aE.LTC_HALF_1,C.rectAreaLTC2=aE.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),C.ambient[0]=h,C.ambient[1]=r,C.ambient[2]=E;const j=C.hash;j.directionalLength===l&&j.pointLength===o&&j.spotLength===k&&j.rectAreaLength===g&&j.hemiLength===D&&j.numDirectionalShadows===a&&j.numPointShadows===s&&j.numSpotShadows===B||(C.directional.length=l,C.spot.length=k,C.rectArea.length=g,C.point.length=o,C.hemi.length=D,C.directionalShadow.length=a,C.directionalShadowMap.length=a,C.pointShadow.length=s,C.pointShadowMap.length=s,C.spotShadow.length=B,C.spotShadowMap.length=B,C.directionalShadowMatrix.length=a,C.pointShadowMatrix.length=s,C.spotShadowMatrix.length=B,j.directionalLength=l,j.pointLength=o,j.spotLength=k,j.rectAreaLength=g,j.hemiLength=D,j.numDirectionalShadows=a,j.numPointShadows=s,j.numSpotShadows=B,C.version=Ao++)},setupView:function(A,i){let e=0,t=0,E=0,l=0,o=0;const k=i.matrixWorldInverse;for(let i=0,g=A.length;i<g;i++){const g=A[i];if(g.isDirectionalLight){const A=C.directional[e];A.direction.setFromMatrixPosition(g.matrixWorld),n.setFromMatrixPosition(g.target.matrixWorld),A.direction.sub(n),A.direction.transformDirection(k),e++}else if(g.isSpotLight){const A=C.spot[E];A.position.setFromMatrixPosition(g.matrixWorld),A.position.applyMatrix4(k),A.direction.setFromMatrixPosition(g.matrixWorld),n.setFromMatrixPosition(g.target.matrixWorld),A.direction.sub(n),A.direction.transformDirection(k),E++}else if(g.isRectAreaLight){const A=C.rectArea[l];A.position.setFromMatrixPosition(g.matrixWorld),A.position.applyMatrix4(k),r.identity(),h.copy(g.matrixWorld),h.premultiply(k),r.extractRotation(h),A.halfWidth.set(.5*g.width,0,0),A.halfHeight.set(0,.5*g.height,0),A.halfWidth.applyMatrix4(r),A.halfHeight.applyMatrix4(r),l++}else if(g.isPointLight){const A=C.point[t];A.position.setFromMatrixPosition(g.matrixWorld),A.position.applyMatrix4(k),t++}else if(g.isHemisphereLight){const A=C.hemi[o];A.direction.setFromMatrixPosition(g.matrixWorld),A.direction.transformDirection(k),A.direction.normalize(),o++}}},state:C}}function to(A,i){const e=new eo(A,i),t=[],C=[];return{init:function(){t.length=0,C.length=0},state:{lightsArray:t,shadowsArray:C,lights:e},setupLights:function(){e.setup(t)},setupLightsView:function(A){e.setupView(t,A)},pushLight:function(A){t.push(A)},pushShadow:function(A){C.push(A)}}}function Co(A,i){let e=new WeakMap;return{get:function(t,C=0){let n;return!1===e.has(t)?(n=new to(A,i),e.set(t,[n])):C>=e.get(t).length?(n=new to(A,i),e.get(t).push(n)):n=e.get(t)[C],n},dispose:function(){e=new WeakMap}}}class no extends _h{constructor(A){super(),this.type="MeshDepthMaterial",this.depthPacking=UC,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(A)}copy(A){return super.copy(A),this.depthPacking=A.depthPacking,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.map=A.map,this.alphaMap=A.alphaMap,this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this}}no.prototype.isMeshDepthMaterial=!0;class ho extends _h{constructor(A){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Ln,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(A)}copy(A){return super.copy(A),this.referencePosition.copy(A.referencePosition),this.nearDistance=A.nearDistance,this.farDistance=A.farDistance,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.map=A.map,this.alphaMap=A.alphaMap,this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this}}ho.prototype.isMeshDistanceMaterial=!0;function ro(A,i,e){let t=new lE;const C=new pn,n=new pn,h=new xn,r=[],E=[],l={},o={0:Ae,1:$i,2:ie},k=new AE({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new pn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=k.clone();g.defines.HORIZONTAL_PASS=1;const D=new br;D.setAttribute("position",new lr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const a=new Qr(D,k),s=this;function B(e,t){const C=i.update(a);k.uniforms.shadow_pass.value=e.map.texture,k.uniforms.resolution.value=e.mapSize,k.uniforms.radius.value=e.radius,A.setRenderTarget(e.mapPass),A.clear(),A.renderBufferDirect(t,null,C,k,a,null),g.uniforms.shadow_pass.value=e.mapPass.texture,g.uniforms.resolution.value=e.mapSize,g.uniforms.radius.value=e.radius,A.setRenderTarget(e.map),A.clear(),A.renderBufferDirect(t,null,C,g,a,null)}function j(A,i,e){const t=A<<0|i<<1|e<<2;let C=r[t];return void 0===C&&(C=new no({depthPacking:VC,morphTargets:A,skinning:i}),r[t]=C),C}function m(A,i,e){const t=A<<0|i<<1|e<<2;let C=E[t];return void 0===C&&(C=new ho({morphTargets:A,skinning:i}),E[t]=C),C}function c(i,e,t,C,n,h,r){let E=null,k=j,g=i.customDepthMaterial;if(!0===C.isPointLight&&(k=m,g=i.customDistanceMaterial),void 0===g){let A=!1;!0===t.morphTargets&&(A=e.morphAttributes&&e.morphAttributes.position&&e.morphAttributes.position.length>0);let C=!1;!0===i.isSkinnedMesh&&(!0===t.skinning?C=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",i));E=k(A,C,!0===i.isInstancedMesh)}else E=g;if(A.localClippingEnabled&&!0===t.clipShadows&&0!==t.clippingPlanes.length){const A=E.uuid,i=t.uuid;let e=l[A];void 0===e&&(e={},l[A]=e);let C=e[i];void 0===C&&(C=E.clone(),e[i]=C),E=C}return E.visible=t.visible,E.wireframe=t.wireframe,E.side=r===_i?null!==t.shadowSide?t.shadowSide:t.side:null!==t.shadowSide?t.shadowSide:o[t.side],E.clipShadows=t.clipShadows,E.clippingPlanes=t.clippingPlanes,E.clipIntersection=t.clipIntersection,E.wireframeLinewidth=t.wireframeLinewidth,E.linewidth=t.linewidth,!0===C.isPointLight&&!0===E.isMeshDistanceMaterial&&(E.referencePosition.setFromMatrixPosition(C.matrixWorld),E.nearDistance=n,E.farDistance=h),E}function u(e,C,n,h,r){if(!1===e.visible)return;if(e.layers.test(C.layers)&&(e.isMesh||e.isLine||e.isPoints)&&(e.castShadow||e.receiveShadow&&r===_i)&&(!e.frustumCulled||t.intersectsObject(e))){e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld);const t=i.update(e),C=e.material;if(Array.isArray(C)){const i=t.groups;for(let E=0,l=i.length;E<l;E++){const l=i[E],o=C[l.materialIndex];if(o&&o.visible){const i=c(e,t,o,h,n.near,n.far,r);A.renderBufferDirect(n,null,t,i,e,l)}}}else if(C.visible){const i=c(e,t,C,h,n.near,n.far,r);A.renderBufferDirect(n,null,t,i,e,null)}}const E=e.children;for(let A=0,i=E.length;A<i;A++)u(E[A],C,n,h,r)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Xi,this.render=function(i,r,E){if(!1===s.enabled)return;if(!1===s.autoUpdate&&!1===s.needsUpdate)return;if(0===i.length)return;const l=A.getRenderTarget(),o=A.getActiveCubeFace(),k=A.getActiveMipmapLevel(),g=A.state;g.setBlending(Ce),g.buffers.color.setClear(1,1,1,1),g.buffers.depth.setTest(!0),g.setScissorTest(!1);for(let l=0,o=i.length;l<o;l++){const o=i[l],k=o.shadow;if(void 0===k){console.warn("THREE.WebGLShadowMap:",o,"has no shadow.");continue}if(!1===k.autoUpdate&&!1===k.needsUpdate)continue;C.copy(k.mapSize);const D=k.getFrameExtents();if(C.multiply(D),n.copy(k.mapSize),(C.x>e||C.y>e)&&(C.x>e&&(n.x=Math.floor(e/D.x),C.x=n.x*D.x,k.mapSize.x=n.x),C.y>e&&(n.y=Math.floor(e/D.y),C.y=n.y*D.y,k.mapSize.y=n.y)),null===k.map&&!k.isPointLightShadow&&this.type===_i){const A={minFilter:Ct,magFilter:Ct,format:dt};k.map=new wn(C.x,C.y,A),k.map.texture.name=o.name+".shadowMap",k.mapPass=new wn(C.x,C.y,A),k.camera.updateProjectionMatrix()}if(null===k.map){const A={minFilter:$e,magFilter:$e,format:dt};k.map=new wn(C.x,C.y,A),k.map.texture.name=o.name+".shadowMap",k.camera.updateProjectionMatrix()}A.setRenderTarget(k.map),A.clear();const a=k.getViewportCount();for(let A=0;A<a;A++){const i=k.getViewport(A);h.set(n.x*i.x,n.y*i.y,n.x*i.z,n.y*i.w),g.viewport(h),k.updateMatrices(o,A),t=k.getFrustum(),u(r,E,k.camera,o,this.type)}k.isPointLightShadow||this.type!==_i||B(k,E),k.needsUpdate=!1}s.needsUpdate=!1,A.setRenderTarget(l,o,k)}}function Eo(A,i,e){const t=e.isWebGL2;const C=new function(){let i=!1;const e=new xn;let t=null;const C=new xn(0,0,0,0);return{setMask:function(e){t===e||i||(A.colorMask(e,e,e,e),t=e)},setLocked:function(A){i=A},setClear:function(i,t,n,h,r){!0===r&&(i*=h,t*=h,n*=h),e.set(i,t,n,h),!1===C.equals(e)&&(A.clearColor(i,t,n,h),C.copy(e))},reset:function(){i=!1,t=null,C.set(-1,0,0,0)}}},n=new function(){let i=!1,e=null,t=null,C=null;return{setTest:function(A){A?w(2929):S(2929)},setMask:function(t){e===t||i||(A.depthMask(t),e=t)},setFunc:function(i){if(t!==i){if(i)switch(i){case ve:A.depthFunc(512);break;case He:A.depthFunc(519);break;case Ie:A.depthFunc(513);break;case ye:A.depthFunc(515);break;case be:A.depthFunc(514);break;case Me:A.depthFunc(518);break;case xe:A.depthFunc(516);break;case we:A.depthFunc(517);break;default:A.depthFunc(515)}else A.depthFunc(515);t=i}},setLocked:function(A){i=A},setClear:function(i){C!==i&&(A.clearDepth(i),C=i)},reset:function(){i=!1,e=null,t=null,C=null}}},h=new function(){let i=!1,e=null,t=null,C=null,n=null,h=null,r=null,E=null,l=null;return{setTest:function(A){i||(A?w(2960):S(2960))},setMask:function(t){e===t||i||(A.stencilMask(t),e=t)},setFunc:function(i,e,h){t===i&&C===e&&n===h||(A.stencilFunc(i,e,h),t=i,C=e,n=h)},setOp:function(i,e,t){h===i&&r===e&&E===t||(A.stencilOp(i,e,t),h=i,r=e,E=t)},setLocked:function(A){i=A},setClear:function(i){l!==i&&(A.clearStencil(i),l=i)},reset:function(){i=!1,e=null,t=null,C=null,n=null,h=null,r=null,E=null,l=null}}};let r={},E=null,l=!1,o=null,k=null,g=null,D=null,a=null,s=null,B=null,j=!1,m=null,c=null,u=null,F=null,G=null;const d=A.getParameter(35661);let f=!1,p=0;const v=A.getParameter(7938);-1!==v.indexOf("WebGL")?(p=parseFloat(/^WebGL (\d)/.exec(v)[1]),f=p>=1):-1!==v.indexOf("OpenGL ES")&&(p=parseFloat(/^OpenGL ES (\d)/.exec(v)[1]),f=p>=2);let H=null,I={};const y=new xn,b=new xn;function M(i,e,t){const C=new Uint8Array(4),n=A.createTexture();A.bindTexture(i,n),A.texParameteri(i,10241,9728),A.texParameteri(i,10240,9728);for(let i=0;i<t;i++)A.texImage2D(e+i,0,6408,1,1,0,6408,5121,C);return n}const x={};function w(i){!0!==r[i]&&(A.enable(i),r[i]=!0)}function S(i){!1!==r[i]&&(A.disable(i),r[i]=!1)}x[3553]=M(3553,3553,1),x[34067]=M(34067,34069,6),C.setClear(0,0,0,1),n.setClear(1),h.setClear(0),w(2929),n.setFunc(ye),P(!1),O(zi),w(2884),R(Ce);const T={[oe]:32774,[ke]:32778,[ge]:32779};if(t)T[De]=32775,T[ae]=32776;else{const A=i.get("EXT_blend_minmax");null!==A&&(T[De]=A.MIN_EXT,T[ae]=A.MAX_EXT)}const L={[se]:0,[Be]:1,[je]:768,[ce]:770,[pe]:776,[de]:774,[Fe]:772,[me]:769,[ue]:771,[fe]:775,[Ge]:773};function R(i,e,t,C,n,h,r,E){if(i!==Ce){if(!1===l&&(w(3042),l=!0),i===le)n=n||e,h=h||t,r=r||C,e===k&&n===a||(A.blendEquationSeparate(T[e],T[n]),k=e,a=n),t===g&&C===D&&h===s&&r===B||(A.blendFuncSeparate(L[t],L[C],L[h],L[r]),g=t,D=C,s=h,B=r),o=i,j=null;else if(i!==o||E!==j){if(k===oe&&a===oe||(A.blendEquation(32774),k=oe,a=oe),E)switch(i){case ne:A.blendFuncSeparate(1,771,1,771);break;case he:A.blendFunc(1,1);break;case re:A.blendFuncSeparate(0,0,769,771);break;case Ee:A.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}else switch(i){case ne:A.blendFuncSeparate(770,771,1,771);break;case he:A.blendFunc(770,1);break;case re:A.blendFunc(0,769);break;case Ee:A.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}g=null,D=null,s=null,B=null,o=i,j=E}}else!0===l&&(S(3042),l=!1)}function P(i){m!==i&&(i?A.frontFace(2304):A.frontFace(2305),m=i)}function O(i){i!==Wi?(w(2884),i!==c&&(i===zi?A.cullFace(1029):i===qi?A.cullFace(1028):A.cullFace(1032))):S(2884),c=i}function N(i,e,t){i?(w(32823),F===e&&G===t||(A.polygonOffset(e,t),F=e,G=t)):S(32823)}function J(i){void 0===i&&(i=33984+d-1),H!==i&&(A.activeTexture(i),H=i)}return{buffers:{color:C,depth:n,stencil:h},enable:w,disable:S,useProgram:function(i){return E!==i&&(A.useProgram(i),E=i,!0)},setBlending:R,setMaterial:function(A,i){A.side===ie?S(2884):w(2884);let e=A.side===Ae;i&&(e=!e),P(e),A.blending===ne&&!1===A.transparent?R(Ce):R(A.blending,A.blendEquation,A.blendSrc,A.blendDst,A.blendEquationAlpha,A.blendSrcAlpha,A.blendDstAlpha,A.premultipliedAlpha),n.setFunc(A.depthFunc),n.setTest(A.depthTest),n.setMask(A.depthWrite),C.setMask(A.colorWrite);const t=A.stencilWrite;h.setTest(t),t&&(h.setMask(A.stencilWriteMask),h.setFunc(A.stencilFunc,A.stencilRef,A.stencilFuncMask),h.setOp(A.stencilFail,A.stencilZFail,A.stencilZPass)),N(A.polygonOffset,A.polygonOffsetFactor,A.polygonOffsetUnits)},setFlipSided:P,setCullFace:O,setLineWidth:function(i){i!==u&&(f&&A.lineWidth(i),u=i)},setPolygonOffset:N,setScissorTest:function(A){A?w(3089):S(3089)},activeTexture:J,bindTexture:function(i,e){null===H&&J();let t=I[H];void 0===t&&(t={type:void 0,texture:void 0},I[H]=t),t.type===i&&t.texture===e||(A.bindTexture(i,e||x[i]),t.type=i,t.texture=e)},unbindTexture:function(){const i=I[H];void 0!==i&&void 0!==i.type&&(A.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)},compressedTexImage2D:function(){try{A.compressedTexImage2D.apply(A,arguments)}catch(A){console.error("THREE.WebGLState:",A)}},texImage2D:function(){try{A.texImage2D.apply(A,arguments)}catch(A){console.error("THREE.WebGLState:",A)}},texImage3D:function(){try{A.texImage3D.apply(A,arguments)}catch(A){console.error("THREE.WebGLState:",A)}},scissor:function(i){!1===y.equals(i)&&(A.scissor(i.x,i.y,i.z,i.w),y.copy(i))},viewport:function(i){!1===b.equals(i)&&(A.viewport(i.x,i.y,i.z,i.w),b.copy(i))},reset:function(){A.disable(3042),A.disable(2884),A.disable(2929),A.disable(32823),A.disable(3089),A.disable(2960),A.blendEquation(32774),A.blendFunc(1,0),A.blendFuncSeparate(1,0,1,0),A.colorMask(!0,!0,!0,!0),A.clearColor(0,0,0,0),A.depthMask(!0),A.depthFunc(513),A.clearDepth(1),A.stencilMask(4294967295),A.stencilFunc(519,0,4294967295),A.stencilOp(7680,7680,7680),A.clearStencil(0),A.cullFace(1029),A.frontFace(2305),A.polygonOffset(0,0),A.activeTexture(33984),A.useProgram(null),A.lineWidth(1),A.scissor(0,0,A.canvas.width,A.canvas.height),A.viewport(0,0,A.canvas.width,A.canvas.height),r={},H=null,I={},E=null,l=!1,o=null,k=null,g=null,D=null,a=null,s=null,B=null,j=!1,m=null,c=null,u=null,F=null,G=null,C.reset(),n.reset(),h.reset()}}}function lo(A,i,e,t,C,n,h){const r=C.isWebGL2,E=C.maxTextures,l=C.maxCubemapSize,o=C.maxTextureSize,k=C.maxSamples,g=new WeakMap;let D,a=!1;try{a="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(A){}function s(A,i){return a?new OffscreenCanvas(A,i):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function B(A,i,e,t){let C=1;if((A.width>t||A.height>t)&&(C=t/Math.max(A.width,A.height)),C<1||!0===i){if("undefined"!=typeof HTMLImageElement&&A instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&A instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&A instanceof ImageBitmap){const t=i?fn.floorPowerOfTwo:Math.floor,n=t(C*A.width),h=t(C*A.height);void 0===D&&(D=s(n,h));const r=e?s(n,h):D;r.width=n,r.height=h;return r.getContext("2d").drawImage(A,0,0,n,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+n+"x"+h+")."),r}return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A}return A}function j(A){return fn.isPowerOfTwo(A.width)&&fn.isPowerOfTwo(A.height)}function m(A,i){return A.generateMipmaps&&i&&A.minFilter!==$e&&A.minFilter!==Ct}function c(i,e,C,n){A.generateMipmap(i);t.get(e).__maxMipLevel=Math.log2(Math.max(C,n))}function u(e,t,C){if(!1===r)return t;if(null!==e){if(void 0!==A[e])return A[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let n=t;return 6403===t&&(5126===C&&(n=33326),5131===C&&(n=33325),5121===C&&(n=33321)),6407===t&&(5126===C&&(n=34837),5131===C&&(n=34843),5121===C&&(n=32849)),6408===t&&(5126===C&&(n=34836),5131===C&&(n=34842),5121===C&&(n=32856)),33325!==n&&33326!==n&&34842!==n&&34836!==n||i.get("EXT_color_buffer_float"),n}function F(A){return A===$e||A===At||A===et?9728:9729}function G(i){const e=i.target;e.removeEventListener("dispose",G),function(i){const e=t.get(i);if(void 0===e.__webglInit)return;A.deleteTexture(e.__webglTexture),t.remove(i)}(e),e.isVideoTexture&&g.delete(e),h.memory.textures--}function d(i){const e=i.target;e.removeEventListener("dispose",d),function(i){const e=i.texture,C=t.get(i),n=t.get(e);if(!i)return;void 0!==n.__webglTexture&&A.deleteTexture(n.__webglTexture);i.depthTexture&&i.depthTexture.dispose();if(i.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)A.deleteFramebuffer(C.__webglFramebuffer[i]),C.__webglDepthbuffer&&A.deleteRenderbuffer(C.__webglDepthbuffer[i]);else A.deleteFramebuffer(C.__webglFramebuffer),C.__webglDepthbuffer&&A.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&A.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer&&A.deleteRenderbuffer(C.__webglColorRenderbuffer),C.__webglDepthRenderbuffer&&A.deleteRenderbuffer(C.__webglDepthRenderbuffer);t.remove(e),t.remove(i)}(e),h.memory.textures--}let f=0;function p(A,i){const C=t.get(A);if(A.isVideoTexture&&function(A){const i=h.render.frame;g.get(A)!==i&&(g.set(A,i),A.update())}(A),A.version>0&&C.__version!==A.version){const e=A.image;if(void 0===e)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==e.complete)return void M(C,A,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}e.activeTexture(33984+i),e.bindTexture(3553,C.__webglTexture)}function v(i,C){const h=t.get(i);i.version>0&&h.__version!==i.version?function(i,t,C){if(6!==t.image.length)return;b(i,t),e.activeTexture(33984+C),e.bindTexture(34067,i.__webglTexture),A.pixelStorei(37440,t.flipY),A.pixelStorei(37441,t.premultiplyAlpha),A.pixelStorei(3317,t.unpackAlignment),A.pixelStorei(37443,0);const h=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),E=t.image[0]&&t.image[0].isDataTexture,o=[];for(let A=0;A<6;A++)o[A]=h||E?E?t.image[A].image:t.image[A]:B(t.image[A],!1,!0,l);const k=o[0],g=j(k)||r,D=n.convert(t.format),a=n.convert(t.type),s=u(t.internalFormat,D,a);let F;if(y(34067,t,g),h){for(let A=0;A<6;A++){F=o[A].mipmaps;for(let i=0;i<F.length;i++){const C=F[i];t.format!==dt&&t.format!==Gt?null!==D?e.compressedTexImage2D(34069+A,i,s,C.width,C.height,0,C.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):e.texImage2D(34069+A,i,s,C.width,C.height,0,D,a,C.data)}}i.__maxMipLevel=F.length-1}else{F=t.mipmaps;for(let A=0;A<6;A++)if(E){e.texImage2D(34069+A,0,s,o[A].width,o[A].height,0,D,a,o[A].data);for(let i=0;i<F.length;i++){const t=F[i].image[A].image;e.texImage2D(34069+A,i+1,s,t.width,t.height,0,D,a,t.data)}}else{e.texImage2D(34069+A,0,s,D,a,o[A]);for(let i=0;i<F.length;i++){const t=F[i];e.texImage2D(34069+A,i+1,s,D,a,t.image[A])}}i.__maxMipLevel=F.length}m(t,g)&&c(34067,t,k.width,k.height);i.__version=t.version,t.onUpdate&&t.onUpdate(t)}(h,i,C):(e.activeTexture(33984+C),e.bindTexture(34067,h.__webglTexture))}const H={[Xe]:10497,[Ze]:33071,[_e]:33648},I={[$e]:9728,[At]:9984,[et]:9986,[Ct]:9729,[nt]:9985,[rt]:9987};function y(e,n,h){if(h?(A.texParameteri(e,10242,H[n.wrapS]),A.texParameteri(e,10243,H[n.wrapT]),32879!==e&&35866!==e||A.texParameteri(e,32882,H[n.wrapR]),A.texParameteri(e,10240,I[n.magFilter]),A.texParameteri(e,10241,I[n.minFilter])):(A.texParameteri(e,10242,33071),A.texParameteri(e,10243,33071),32879!==e&&35866!==e||A.texParameteri(e,32882,33071),n.wrapS===Ze&&n.wrapT===Ze||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),A.texParameteri(e,10240,F(n.magFilter)),A.texParameteri(e,10241,F(n.minFilter)),n.minFilter!==$e&&n.minFilter!==Ct&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===i.has("EXT_texture_filter_anisotropic")){const h=i.get("EXT_texture_filter_anisotropic");if(n.type===st&&!1===i.has("OES_texture_float_linear"))return;if(!1===r&&n.type===Bt&&!1===i.has("OES_texture_half_float_linear"))return;(n.anisotropy>1||t.get(n).__currentAnisotropy)&&(A.texParameterf(e,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(n.anisotropy,C.getMaxAnisotropy())),t.get(n).__currentAnisotropy=n.anisotropy)}}function b(i,e){void 0===i.__webglInit&&(i.__webglInit=!0,e.addEventListener("dispose",G),i.__webglTexture=A.createTexture(),h.memory.textures++)}function M(i,t,C){let h=3553;t.isDataTexture2DArray&&(h=35866),t.isDataTexture3D&&(h=32879),b(i,t),e.activeTexture(33984+C),e.bindTexture(h,i.__webglTexture),A.pixelStorei(37440,t.flipY),A.pixelStorei(37441,t.premultiplyAlpha),A.pixelStorei(3317,t.unpackAlignment),A.pixelStorei(37443,0);const E=function(A){return!r&&(A.wrapS!==Ze||A.wrapT!==Ze||A.minFilter!==$e&&A.minFilter!==Ct)}(t)&&!1===j(t.image),l=B(t.image,E,!1,o),k=j(l)||r,g=n.convert(t.format);let D,a=n.convert(t.type),s=u(t.internalFormat,g,a);y(h,t,k);const F=t.mipmaps;if(t.isDepthTexture)s=6402,r?s=t.type===st?36012:t.type===at?33190:t.type===ut?35056:33189:t.type===st&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),t.format===Ht&&6402===s&&t.type!==gt&&t.type!==at&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),t.type=gt,a=n.convert(t.type)),t.format===It&&6402===s&&(s=34041,t.type!==ut&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),t.type=ut,a=n.convert(t.type))),e.texImage2D(3553,0,s,l.width,l.height,0,g,a,null);else if(t.isDataTexture)if(F.length>0&&k){for(let A=0,i=F.length;A<i;A++)D=F[A],e.texImage2D(3553,A,s,D.width,D.height,0,g,a,D.data);t.generateMipmaps=!1,i.__maxMipLevel=F.length-1}else e.texImage2D(3553,0,s,l.width,l.height,0,g,a,l.data),i.__maxMipLevel=0;else if(t.isCompressedTexture){for(let A=0,i=F.length;A<i;A++)D=F[A],t.format!==dt&&t.format!==Gt?null!==g?e.compressedTexImage2D(3553,A,s,D.width,D.height,0,D.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):e.texImage2D(3553,A,s,D.width,D.height,0,g,a,D.data);i.__maxMipLevel=F.length-1}else if(t.isDataTexture2DArray)e.texImage3D(35866,0,s,l.width,l.height,l.depth,0,g,a,l.data),i.__maxMipLevel=0;else if(t.isDataTexture3D)e.texImage3D(32879,0,s,l.width,l.height,l.depth,0,g,a,l.data),i.__maxMipLevel=0;else if(F.length>0&&k){for(let A=0,i=F.length;A<i;A++)D=F[A],e.texImage2D(3553,A,s,g,a,D);t.generateMipmaps=!1,i.__maxMipLevel=F.length-1}else e.texImage2D(3553,0,s,g,a,l),i.__maxMipLevel=0;m(t,k)&&c(h,t,l.width,l.height),i.__version=t.version,t.onUpdate&&t.onUpdate(t)}function x(i,C,h,r){const E=C.texture,l=n.convert(E.format),o=n.convert(E.type),k=u(E.internalFormat,l,o);32879===r||35866===r?e.texImage3D(r,0,k,C.width,C.height,C.depth,0,l,o,null):e.texImage2D(r,0,k,C.width,C.height,0,l,o,null),A.bindFramebuffer(36160,i),A.framebufferTexture2D(36160,h,r,t.get(E).__webglTexture,0),A.bindFramebuffer(36160,null)}function w(i,e,t){if(A.bindRenderbuffer(36161,i),e.depthBuffer&&!e.stencilBuffer){let C=33189;if(t){const i=e.depthTexture;i&&i.isDepthTexture&&(i.type===st?C=36012:i.type===at&&(C=33190));const t=T(e);A.renderbufferStorageMultisample(36161,t,C,e.width,e.height)}else A.renderbufferStorage(36161,C,e.width,e.height);A.framebufferRenderbuffer(36160,36096,36161,i)}else if(e.depthBuffer&&e.stencilBuffer){if(t){const i=T(e);A.renderbufferStorageMultisample(36161,i,35056,e.width,e.height)}else A.renderbufferStorage(36161,34041,e.width,e.height);A.framebufferRenderbuffer(36160,33306,36161,i)}else{const i=e.texture,C=n.convert(i.format),h=n.convert(i.type),r=u(i.internalFormat,C,h);if(t){const i=T(e);A.renderbufferStorageMultisample(36161,i,r,e.width,e.height)}else A.renderbufferStorage(36161,r,e.width,e.height)}A.bindRenderbuffer(36161,null)}function S(i){const e=t.get(i),C=!0===i.isWebGLCubeRenderTarget;if(i.depthTexture){if(C)throw new Error("target.depthTexture not supported in Cube render targets");!function(i,e){if(e&&e.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(A.bindFramebuffer(36160,i),!e.depthTexture||!e.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");t.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),p(e.depthTexture,0);const C=t.get(e.depthTexture).__webglTexture;if(e.depthTexture.format===Ht)A.framebufferTexture2D(36160,36096,3553,C,0);else{if(e.depthTexture.format!==It)throw new Error("Unknown depthTexture format");A.framebufferTexture2D(36160,33306,3553,C,0)}}(e.__webglFramebuffer,i)}else if(C){e.__webglDepthbuffer=[];for(let t=0;t<6;t++)A.bindFramebuffer(36160,e.__webglFramebuffer[t]),e.__webglDepthbuffer[t]=A.createRenderbuffer(),w(e.__webglDepthbuffer[t],i,!1)}else A.bindFramebuffer(36160,e.__webglFramebuffer),e.__webglDepthbuffer=A.createRenderbuffer(),w(e.__webglDepthbuffer,i,!1);A.bindFramebuffer(36160,null)}function T(A){return r&&A.isWebGLMultisampleRenderTarget?Math.min(k,A.samples):0}let L=!1,R=!1;this.allocateTextureUnit=function(){const A=f;return A>=E&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+E),f+=1,A},this.resetTextureUnits=function(){f=0},this.setTexture2D=p,this.setTexture2DArray=function(A,i){const C=t.get(A);A.version>0&&C.__version!==A.version?M(C,A,i):(e.activeTexture(33984+i),e.bindTexture(35866,C.__webglTexture))},this.setTexture3D=function(A,i){const C=t.get(A);A.version>0&&C.__version!==A.version?M(C,A,i):(e.activeTexture(33984+i),e.bindTexture(32879,C.__webglTexture))},this.setTextureCube=v,this.setupRenderTarget=function(i){const C=i.texture,E=t.get(i),l=t.get(C);i.addEventListener("dispose",d),l.__webglTexture=A.createTexture(),h.memory.textures++;const o=!0===i.isWebGLCubeRenderTarget,k=!0===i.isWebGLMultisampleRenderTarget,g=C.isDataTexture3D||C.isDataTexture2DArray,D=j(i)||r;if(!r||C.format!==Gt||C.type!==st&&C.type!==Bt||(C.format=dt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),o){E.__webglFramebuffer=[];for(let i=0;i<6;i++)E.__webglFramebuffer[i]=A.createFramebuffer()}else if(E.__webglFramebuffer=A.createFramebuffer(),k)if(r){E.__webglMultisampledFramebuffer=A.createFramebuffer(),E.__webglColorRenderbuffer=A.createRenderbuffer(),A.bindRenderbuffer(36161,E.__webglColorRenderbuffer);const e=n.convert(C.format),t=n.convert(C.type),h=u(C.internalFormat,e,t),r=T(i);A.renderbufferStorageMultisample(36161,r,h,i.width,i.height),A.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),A.framebufferRenderbuffer(36160,36064,36161,E.__webglColorRenderbuffer),A.bindRenderbuffer(36161,null),i.depthBuffer&&(E.__webglDepthRenderbuffer=A.createRenderbuffer(),w(E.__webglDepthRenderbuffer,i,!0)),A.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(o){e.bindTexture(34067,l.__webglTexture),y(34067,C,D);for(let A=0;A<6;A++)x(E.__webglFramebuffer[A],i,36064,34069+A);m(C,D)&&c(34067,C,i.width,i.height),e.bindTexture(34067,null)}else{let A=3553;if(g)if(r){A=C.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");e.bindTexture(A,l.__webglTexture),y(A,C,D),x(E.__webglFramebuffer,i,36064,A),m(C,D)&&c(3553,C,i.width,i.height),e.bindTexture(3553,null)}i.depthBuffer&&S(i)},this.updateRenderTargetMipmap=function(A){const i=A.texture;if(m(i,j(A)||r)){const C=A.isWebGLCubeRenderTarget?34067:3553,n=t.get(i).__webglTexture;e.bindTexture(C,n),c(C,i,A.width,A.height),e.bindTexture(C,null)}},this.updateMultisampleRenderTarget=function(i){if(i.isWebGLMultisampleRenderTarget)if(r){const e=t.get(i);A.bindFramebuffer(36008,e.__webglMultisampledFramebuffer),A.bindFramebuffer(36009,e.__webglFramebuffer);const C=i.width,n=i.height;let h=16384;i.depthBuffer&&(h|=256),i.stencilBuffer&&(h|=1024),A.blitFramebuffer(0,0,C,n,0,0,C,n,h,9728),A.bindFramebuffer(36160,e.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(A,i){A&&A.isWebGLRenderTarget&&(!1===L&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),L=!0),A=A.texture),p(A,i)},this.safeSetTextureCube=function(A,i){A&&A.isWebGLCubeRenderTarget&&(!1===R&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),R=!0),A=A.texture),v(A,i)}}function oo(A,i,e){const t=e.isWebGL2;return{convert:function(A){let e;if(A===lt)return 5121;if(A===jt)return 32819;if(A===mt)return 32820;if(A===ct)return 33635;if(A===ot)return 5120;if(A===kt)return 5122;if(A===gt)return 5123;if(A===Dt)return 5124;if(A===at)return 5125;if(A===st)return 5126;if(A===Bt)return t?5131:(e=i.get("OES_texture_half_float"),null!==e?e.HALF_FLOAT_OES:null);if(A===Ft)return 6406;if(A===Gt)return 6407;if(A===dt)return 6408;if(A===ft)return 6409;if(A===pt)return 6410;if(A===Ht)return 6402;if(A===It)return 34041;if(A===yt)return 6403;if(A===bt)return 36244;if(A===Mt)return 33319;if(A===xt)return 33320;if(A===wt)return 36248;if(A===St)return 36249;if(A===Tt||A===Lt||A===Rt||A===Pt){if(e=i.get("WEBGL_compressed_texture_s3tc"),null===e)return null;if(A===Tt)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(A===Lt)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(A===Rt)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(A===Pt)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(A===Ot||A===Nt||A===Jt||A===Kt){if(e=i.get("WEBGL_compressed_texture_pvrtc"),null===e)return null;if(A===Ot)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(A===Nt)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(A===Jt)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(A===Kt)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(A===Ut)return e=i.get("WEBGL_compressed_texture_etc1"),null!==e?e.COMPRESSED_RGB_ETC1_WEBGL:null;if((A===Vt||A===Wt)&&(e=i.get("WEBGL_compressed_texture_etc"),null!==e)){if(A===Vt)return e.COMPRESSED_RGB8_ETC2;if(A===Wt)return e.COMPRESSED_RGBA8_ETC2_EAC}return A===zt||A===qt||A===Qt||A===Yt||A===Xt||A===Zt||A===_t||A===$t||A===AC||A===iC||A===eC||A===tC||A===CC||A===nC||A===rC||A===EC||A===lC||A===oC||A===kC||A===gC||A===DC||A===aC||A===sC||A===BC||A===jC||A===mC||A===cC||A===uC?(e=i.get("WEBGL_compressed_texture_astc"),null!==e?A:null):A===hC?(e=i.get("EXT_texture_compression_bptc"),null!==e?A:null):A===ut?t?34042:(e=i.get("WEBGL_depth_texture"),null!==e?e.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ko(A=[]){eE.call(this),this.cameras=A}ko.prototype=Object.assign(Object.create(eE.prototype),{constructor:ko,isArrayCamera:!0});class go extends Th{constructor(){super(),this.type="Group"}}function Do(){this._targetRay=null,this._grip=null,this._hand=null}function ao(A,i){const e=this;let t=null,C=1,n=null,h="local-floor",r=null;const E=[],l=new Map,o=new eE;o.layers.enable(1),o.viewport=new xn;const k=new eE;k.layers.enable(2),k.viewport=new xn;const g=[o,k],D=new ko;D.layers.enable(1),D.layers.enable(2);let a=null,s=null;function B(A){const i=l.get(A.inputSource);i&&i.dispatchEvent({type:A.type,data:A.inputSource})}function j(){l.forEach((function(A,i){A.disconnect(i)})),l.clear(),a=null,s=null,A.setFramebuffer(null),A.setRenderTarget(A.getRenderTarget()),d.stop(),e.isPresenting=!1,e.dispatchEvent({type:"sessionend"})}function m(A){const i=t.inputSources;for(let A=0;A<E.length;A++)l.set(i[A],E[A]);for(let i=0;i<A.removed.length;i++){const e=A.removed[i],t=l.get(e);t&&(t.dispatchEvent({type:"disconnected",data:e}),l.delete(e))}for(let i=0;i<A.added.length;i++){const e=A.added[i],t=l.get(e);t&&t.dispatchEvent({type:"connected",data:e})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(A){let i=E[A];return void 0===i&&(i=new Do,E[A]=i),i.getTargetRaySpace()},this.getControllerGrip=function(A){let i=E[A];return void 0===i&&(i=new Do,E[A]=i),i.getGripSpace()},this.getHand=function(A){let i=E[A];return void 0===i&&(i=new Do,E[A]=i),i.getHandSpace()},this.setFramebufferScaleFactor=function(A){C=A,!0===e.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(A){h=A,!0===e.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return n},this.getSession=function(){return t},this.setSession=async function(A){if(t=A,null!==t){t.addEventListener("select",B),t.addEventListener("selectstart",B),t.addEventListener("selectend",B),t.addEventListener("squeeze",B),t.addEventListener("squeezestart",B),t.addEventListener("squeezeend",B),t.addEventListener("end",j),t.addEventListener("inputsourceschange",m);const A=i.getContextAttributes();!0!==A.xrCompatible&&await i.makeXRCompatible();const r={antialias:A.antialias,alpha:A.alpha,depth:A.depth,stencil:A.stencil,framebufferScaleFactor:C},E=new XRWebGLLayer(t,i,r);t.updateRenderState({baseLayer:E}),n=await t.requestReferenceSpace(h),d.setContext(t),d.start(),e.isPresenting=!0,e.dispatchEvent({type:"sessionstart"})}};const c=new Ln,u=new Ln;function F(A,i){null===i?A.matrixWorld.copy(A.matrix):A.matrixWorld.multiplyMatrices(i.matrixWorld,A.matrix),A.matrixWorldInverse.copy(A.matrixWorld).invert()}this.getCamera=function(A){D.near=k.near=o.near=A.near,D.far=k.far=o.far=A.far,a===D.near&&s===D.far||(t.updateRenderState({depthNear:D.near,depthFar:D.far}),a=D.near,s=D.far);const i=A.parent,e=D.cameras;F(D,i);for(let A=0;A<e.length;A++)F(e[A],i);A.matrixWorld.copy(D.matrixWorld),A.matrix.copy(D.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale);const C=A.children;for(let A=0,i=C.length;A<i;A++)C[A].updateMatrixWorld(!0);return 2===e.length?function(A,i,e){c.setFromMatrixPosition(i.matrixWorld),u.setFromMatrixPosition(e.matrixWorld);const t=c.distanceTo(u),C=i.projectionMatrix.elements,n=e.projectionMatrix.elements,h=C[14]/(C[10]-1),r=C[14]/(C[10]+1),E=(C[9]+1)/C[5],l=(C[9]-1)/C[5],o=(C[8]-1)/C[0],k=(n[8]+1)/n[0],g=h*o,D=h*k,a=t/(-o+k),s=a*-o;i.matrixWorld.decompose(A.position,A.quaternion,A.scale),A.translateX(s),A.translateZ(a),A.matrixWorld.compose(A.position,A.quaternion,A.scale),A.matrixWorldInverse.copy(A.matrixWorld).invert();const B=h+a,j=r+a,m=g-s,F=D+(t-s),G=E*r/j*B,d=l*r/j*B;A.projectionMatrix.makePerspective(m,F,G,d,B,j)}(D,o,k):D.projectionMatrix.copy(o.projectionMatrix),D};let G=null;const d=new oE;d.setAnimationLoop((function(i,e){if(r=e.getViewerPose(n),null!==r){const i=r.views,e=t.renderState.baseLayer;A.setFramebuffer(e.framebuffer);let C=!1;i.length!==D.cameras.length&&(D.cameras.length=0,C=!0);for(let A=0;A<i.length;A++){const t=i[A],n=e.getViewport(t),h=g[A];h.matrix.fromArray(t.transform.matrix),h.projectionMatrix.fromArray(t.projectionMatrix),h.viewport.set(n.x,n.y,n.width,n.height),0===A&&D.matrix.copy(h.matrix),!0===C&&D.cameras.push(h)}}const C=t.inputSources;for(let A=0;A<E.length;A++){const i=E[A],t=C[A];i.update(t,e,n)}G&&G(i,e)})),this.setAnimationLoop=function(A){G=A},this.dispose=function(){}}function so(A){function i(i,e){i.opacity.value=e.opacity,e.color&&i.diffuse.value.copy(e.color),e.emissive&&i.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(i.map.value=e.map),e.alphaMap&&(i.alphaMap.value=e.alphaMap),e.specularMap&&(i.specularMap.value=e.specularMap);const t=A.get(e).envMap;if(t){i.envMap.value=t,i.flipEnvMap.value=t.isCubeTexture&&t._needsFlipEnvMap?-1:1,i.reflectivity.value=e.reflectivity,i.refractionRatio.value=e.refractionRatio;const C=A.get(t).__maxMipLevel;void 0!==C&&(i.maxMipLevel.value=C)}let C,n;e.lightMap&&(i.lightMap.value=e.lightMap,i.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(i.aoMap.value=e.aoMap,i.aoMapIntensity.value=e.aoMapIntensity),e.map?C=e.map:e.specularMap?C=e.specularMap:e.displacementMap?C=e.displacementMap:e.normalMap?C=e.normalMap:e.bumpMap?C=e.bumpMap:e.roughnessMap?C=e.roughnessMap:e.metalnessMap?C=e.metalnessMap:e.alphaMap?C=e.alphaMap:e.emissiveMap?C=e.emissiveMap:e.clearcoatMap?C=e.clearcoatMap:e.clearcoatNormalMap?C=e.clearcoatNormalMap:e.clearcoatRoughnessMap&&(C=e.clearcoatRoughnessMap),void 0!==C&&(C.isWebGLRenderTarget&&(C=C.texture),!0===C.matrixAutoUpdate&&C.updateMatrix(),i.uvTransform.value.copy(C.matrix)),e.aoMap?n=e.aoMap:e.lightMap&&(n=e.lightMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),i.uv2Transform.value.copy(n.matrix))}function e(i,e){i.roughness.value=e.roughness,i.metalness.value=e.metalness,e.roughnessMap&&(i.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(i.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(i.emissiveMap.value=e.emissiveMap),e.bumpMap&&(i.bumpMap.value=e.bumpMap,i.bumpScale.value=e.bumpScale,e.side===Ae&&(i.bumpScale.value*=-1)),e.normalMap&&(i.normalMap.value=e.normalMap,i.normalScale.value.copy(e.normalScale),e.side===Ae&&i.normalScale.value.negate()),e.displacementMap&&(i.displacementMap.value=e.displacementMap,i.displacementScale.value=e.displacementScale,i.displacementBias.value=e.displacementBias);A.get(e).envMap&&(i.envMapIntensity.value=e.envMapIntensity)}return{refreshFogUniforms:function(A,i){A.fogColor.value.copy(i.color),i.isFog?(A.fogNear.value=i.near,A.fogFar.value=i.far):i.isFogExp2&&(A.fogDensity.value=i.density)},refreshMaterialUniforms:function(A,t,C,n){t.isMeshBasicMaterial?i(A,t):t.isMeshLambertMaterial?(i(A,t),function(A,i){i.emissiveMap&&(A.emissiveMap.value=i.emissiveMap)}(A,t)):t.isMeshToonMaterial?(i(A,t),function(A,i){i.gradientMap&&(A.gradientMap.value=i.gradientMap);i.emissiveMap&&(A.emissiveMap.value=i.emissiveMap);i.bumpMap&&(A.bumpMap.value=i.bumpMap,A.bumpScale.value=i.bumpScale,i.side===Ae&&(A.bumpScale.value*=-1));i.normalMap&&(A.normalMap.value=i.normalMap,A.normalScale.value.copy(i.normalScale),i.side===Ae&&A.normalScale.value.negate());i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias)}(A,t)):t.isMeshPhongMaterial?(i(A,t),function(A,i){A.specular.value.copy(i.specular),A.shininess.value=Math.max(i.shininess,1e-4),i.emissiveMap&&(A.emissiveMap.value=i.emissiveMap);i.bumpMap&&(A.bumpMap.value=i.bumpMap,A.bumpScale.value=i.bumpScale,i.side===Ae&&(A.bumpScale.value*=-1));i.normalMap&&(A.normalMap.value=i.normalMap,A.normalScale.value.copy(i.normalScale),i.side===Ae&&A.normalScale.value.negate());i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias)}(A,t)):t.isMeshStandardMaterial?(i(A,t),t.isMeshPhysicalMaterial?function(A,i){e(A,i),A.reflectivity.value=i.reflectivity,A.clearcoat.value=i.clearcoat,A.clearcoatRoughness.value=i.clearcoatRoughness,i.sheen&&A.sheen.value.copy(i.sheen);i.clearcoatMap&&(A.clearcoatMap.value=i.clearcoatMap);i.clearcoatRoughnessMap&&(A.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap);i.clearcoatNormalMap&&(A.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),A.clearcoatNormalMap.value=i.clearcoatNormalMap,i.side===Ae&&A.clearcoatNormalScale.value.negate());A.transmission.value=i.transmission,i.transmissionMap&&(A.transmissionMap.value=i.transmissionMap)}(A,t):e(A,t)):t.isMeshMatcapMaterial?(i(A,t),function(A,i){i.matcap&&(A.matcap.value=i.matcap);i.bumpMap&&(A.bumpMap.value=i.bumpMap,A.bumpScale.value=i.bumpScale,i.side===Ae&&(A.bumpScale.value*=-1));i.normalMap&&(A.normalMap.value=i.normalMap,A.normalScale.value.copy(i.normalScale),i.side===Ae&&A.normalScale.value.negate());i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias)}(A,t)):t.isMeshDepthMaterial?(i(A,t),function(A,i){i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias)}(A,t)):t.isMeshDistanceMaterial?(i(A,t),function(A,i){i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias);A.referencePosition.value.copy(i.referencePosition),A.nearDistance.value=i.nearDistance,A.farDistance.value=i.farDistance}(A,t)):t.isMeshNormalMaterial?(i(A,t),function(A,i){i.bumpMap&&(A.bumpMap.value=i.bumpMap,A.bumpScale.value=i.bumpScale,i.side===Ae&&(A.bumpScale.value*=-1));i.normalMap&&(A.normalMap.value=i.normalMap,A.normalScale.value.copy(i.normalScale),i.side===Ae&&A.normalScale.value.negate());i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias)}(A,t)):t.isLineBasicMaterial?(function(A,i){A.diffuse.value.copy(i.color),A.opacity.value=i.opacity}(A,t),t.isLineDashedMaterial&&function(A,i){A.dashSize.value=i.dashSize,A.totalSize.value=i.dashSize+i.gapSize,A.scale.value=i.scale}(A,t)):t.isPointsMaterial?function(A,i,e,t){A.diffuse.value.copy(i.color),A.opacity.value=i.opacity,A.size.value=i.size*e,A.scale.value=.5*t,i.map&&(A.map.value=i.map);i.alphaMap&&(A.alphaMap.value=i.alphaMap);let C;i.map?C=i.map:i.alphaMap&&(C=i.alphaMap);void 0!==C&&(!0===C.matrixAutoUpdate&&C.updateMatrix(),A.uvTransform.value.copy(C.matrix))}(A,t,C,n):t.isSpriteMaterial?function(A,i){A.diffuse.value.copy(i.color),A.opacity.value=i.opacity,A.rotation.value=i.rotation,i.map&&(A.map.value=i.map);i.alphaMap&&(A.alphaMap.value=i.alphaMap);let e;i.map?e=i.map:i.alphaMap&&(e=i.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),A.uvTransform.value.copy(e.matrix))}(A,t):t.isShadowMaterial?(A.color.value.copy(t.color),A.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function Bo(A){const i=void 0!==(A=A||{}).canvas?A.canvas:function(){const A=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return A.style.display="block",A}(),e=void 0!==A.context?A.context:null,t=void 0!==A.alpha&&A.alpha,C=void 0===A.depth||A.depth,n=void 0===A.stencil||A.stencil,h=void 0!==A.antialias&&A.antialias,r=void 0===A.premultipliedAlpha||A.premultipliedAlpha,E=void 0!==A.preserveDrawingBuffer&&A.preserveDrawingBuffer,l=void 0!==A.powerPreference?A.powerPreference:"default",o=void 0!==A.failIfMajorPerformanceCaveat&&A.failIfMajorPerformanceCaveat;let k=null,g=null;const D=[],a=[];this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=TC,this.physicallyCorrectLights=!1,this.toneMapping=Re,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const s=this;let B=!1,j=null,m=0,c=0,u=null,F=null,G=-1,d=null;const f=new xn,p=new xn;let v=null,H=i.width,I=i.height,y=1,b=null,M=null;const x=new xn(0,0,H,I),w=new xn(0,0,H,I);let S=!1;const T=new lE;let L=!1,R=!1;const P=new oh,O=new Ln,N={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return null===u?y:1}let K,U,V,W,z,q,Q,Y,X,Z,_,$,AA,iA,eA,tA,CA,nA,hA,rA,EA,lA=e;function oA(A,e){for(let t=0;t<A.length;t++){const C=A[t],n=i.getContext(C,e);if(null!==n)return n}return null}try{const A={alpha:t,depth:C,stencil:n,antialias:h,premultipliedAlpha:r,preserveDrawingBuffer:E,powerPreference:l,failIfMajorPerformanceCaveat:o};if(i.addEventListener("webglcontextlost",aA,!1),i.addEventListener("webglcontextrestored",sA,!1),null===lA){const i=["webgl2","webgl","experimental-webgl"];if(!0===s.isWebGL1Renderer&&i.shift(),lA=oA(i,A),null===lA)throw oA(i)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===lA.getShaderPrecisionFormat&&(lA.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}function kA(){K=new GE(lA),U=new cE(lA,K,A),K.init(U),rA=new oo(lA,K,U),V=new Eo(lA,K,U),V.scissor(p.copy(w).multiplyScalar(y).floor()),V.viewport(f.copy(x).multiplyScalar(y).floor()),W=new pE(lA),z=new Ql,q=new lo(lA,K,V,z,U,rA,W),Q=new FE(s),Y=new kE(lA,U),EA=new jE(lA,K,Y,U),X=new dE(lA,Y,W,EA),Z=new yE(lA,X,Y,W),CA=new IE(lA),eA=new uE(z),_=new ql(s,Q,K,U,EA,eA),$=new so(z),AA=new _l(z),iA=new Co(K,U),tA=new BE(s,Q,V,Z,r),nA=new mE(lA,K,W,U),hA=new fE(lA,K,W,U),W.programs=_.programs,s.capabilities=U,s.extensions=K,s.properties=z,s.renderLists=AA,s.state=V,s.info=W}kA();const gA=new ao(s,lA);this.xr=gA;const DA=new ro(s,Z,U.maxTextureSize);function aA(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),B=!0}function sA(){console.log("THREE.WebGLRenderer: Context Restored."),B=!1,kA()}function BA(A){const i=A.target;i.removeEventListener("dispose",BA),function(A){jA(A),z.remove(A)}(i)}function jA(A){const i=z.get(A).program;void 0!==i&&_.releaseProgram(i)}this.shadowMap=DA,this.getContext=function(){return lA},this.getContextAttributes=function(){return lA.getContextAttributes()},this.forceContextLoss=function(){const A=K.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=K.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return y},this.setPixelRatio=function(A){void 0!==A&&(y=A,this.setSize(H,I,!1))},this.getSize=function(A){return void 0===A&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),A=new pn),A.set(H,I)},this.setSize=function(A,e,t){gA.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(H=A,I=e,i.width=Math.floor(A*y),i.height=Math.floor(e*y),!1!==t&&(i.style.width=A+"px",i.style.height=e+"px"),this.setViewport(0,0,A,e))},this.getDrawingBufferSize=function(A){return void 0===A&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),A=new pn),A.set(H*y,I*y).floor()},this.setDrawingBufferSize=function(A,e,t){H=A,I=e,y=t,i.width=Math.floor(A*t),i.height=Math.floor(e*t),this.setViewport(0,0,A,e)},this.getCurrentViewport=function(A){return void 0===A&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),A=new xn),A.copy(f)},this.getViewport=function(A){return A.copy(x)},this.setViewport=function(A,i,e,t){A.isVector4?x.set(A.x,A.y,A.z,A.w):x.set(A,i,e,t),V.viewport(f.copy(x).multiplyScalar(y).floor())},this.getScissor=function(A){return A.copy(w)},this.setScissor=function(A,i,e,t){A.isVector4?w.set(A.x,A.y,A.z,A.w):w.set(A,i,e,t),V.scissor(p.copy(w).multiplyScalar(y).floor())},this.getScissorTest=function(){return S},this.setScissorTest=function(A){V.setScissorTest(S=A)},this.setOpaqueSort=function(A){b=A},this.setTransparentSort=function(A){M=A},this.getClearColor=function(A){return void 0===A&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),A=new nr),A.copy(tA.getClearColor())},this.setClearColor=function(){tA.setClearColor.apply(tA,arguments)},this.getClearAlpha=function(){return tA.getClearAlpha()},this.setClearAlpha=function(){tA.setClearAlpha.apply(tA,arguments)},this.clear=function(A,i,e){let t=0;(void 0===A||A)&&(t|=16384),(void 0===i||i)&&(t|=256),(void 0===e||e)&&(t|=1024),lA.clear(t)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",aA,!1),i.removeEventListener("webglcontextrestored",sA,!1),AA.dispose(),iA.dispose(),z.dispose(),Q.dispose(),Z.dispose(),EA.dispose(),gA.dispose(),cA.stop()},this.renderBufferImmediate=function(A,i){EA.initAttributes();const e=z.get(A);A.hasPositions&&!e.position&&(e.position=lA.createBuffer()),A.hasNormals&&!e.normal&&(e.normal=lA.createBuffer()),A.hasUvs&&!e.uv&&(e.uv=lA.createBuffer()),A.hasColors&&!e.color&&(e.color=lA.createBuffer());const t=i.getAttributes();A.hasPositions&&(lA.bindBuffer(34962,e.position),lA.bufferData(34962,A.positionArray,35048),EA.enableAttribute(t.position),lA.vertexAttribPointer(t.position,3,5126,!1,0,0)),A.hasNormals&&(lA.bindBuffer(34962,e.normal),lA.bufferData(34962,A.normalArray,35048),EA.enableAttribute(t.normal),lA.vertexAttribPointer(t.normal,3,5126,!1,0,0)),A.hasUvs&&(lA.bindBuffer(34962,e.uv),lA.bufferData(34962,A.uvArray,35048),EA.enableAttribute(t.uv),lA.vertexAttribPointer(t.uv,2,5126,!1,0,0)),A.hasColors&&(lA.bindBuffer(34962,e.color),lA.bufferData(34962,A.colorArray,35048),EA.enableAttribute(t.color),lA.vertexAttribPointer(t.color,3,5126,!1,0,0)),EA.disableUnusedAttributes(),lA.drawArrays(4,0,A.count),A.count=0},this.renderBufferDirect=function(A,i,e,t,C,n){null===i&&(i=N);const h=C.isMesh&&C.matrixWorld.determinant()<0,r=fA(A,i,t,C);V.setMaterial(t,h);let E=e.index;const l=e.attributes.position;if(null===E){if(void 0===l||0===l.count)return}else if(0===E.count)return;let o,k=1;!0===t.wireframe&&(E=X.getWireframeAttribute(e),k=2),(t.morphTargets||t.morphNormals)&&CA.update(C,e,t,r),EA.setup(C,t,r,e,E);let g=nA;null!==E&&(o=Y.get(E),g=hA,g.setIndex(o));const D=null!==E?E.count:l.count,a=e.drawRange.start*k,s=e.drawRange.count*k,B=null!==n?n.start*k:0,j=null!==n?n.count*k:1/0,m=Math.max(a,B),c=Math.min(D,a+s,B+j)-1,u=Math.max(0,c-m+1);if(0!==u){if(C.isMesh)!0===t.wireframe?(V.setLineWidth(t.wireframeLinewidth*J()),g.setMode(1)):g.setMode(4);else if(C.isLine){let A=t.linewidth;void 0===A&&(A=1),V.setLineWidth(A*J()),C.isLineSegments?g.setMode(1):C.isLineLoop?g.setMode(2):g.setMode(3)}else C.isPoints?g.setMode(0):C.isSprite&&g.setMode(4);if(C.isInstancedMesh)g.renderInstances(m,u,C.count);else if(e.isInstancedBufferGeometry){const A=Math.min(e.instanceCount,e._maxInstanceCount);g.renderInstances(m,u,A)}else g.render(m,u)}},this.compile=function(A,i){g=iA.get(A),g.init(),A.traverseVisible((function(A){A.isLight&&A.layers.test(i.layers)&&(g.pushLight(A),A.castShadow&&g.pushShadow(A))})),g.setupLights();const e=new WeakMap;A.traverse((function(i){const t=i.material;if(t)if(Array.isArray(t))for(let C=0;C<t.length;C++){const n=t[C];!1===e.has(n)&&(dA(n,A,i),e.set(n))}else!1===e.has(t)&&(dA(t,A,i),e.set(t))}))};let mA=null;const cA=new oE;function uA(A,i,e,t){if(!1===A.visible)return;if(A.layers.test(i.layers))if(A.isGroup)e=A.renderOrder;else if(A.isLOD)!0===A.autoUpdate&&A.update(i);else if(A.isLight)g.pushLight(A),A.castShadow&&g.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||T.intersectsSprite(A)){t&&O.setFromMatrixPosition(A.matrixWorld).applyMatrix4(P);const i=Z.update(A),C=A.material;C.visible&&k.push(A,i,C,e,O.z,null)}}else if(A.isImmediateRenderObject)t&&O.setFromMatrixPosition(A.matrixWorld).applyMatrix4(P),k.push(A,null,A.material,e,O.z,null);else if((A.isMesh||A.isLine||A.isPoints)&&(A.isSkinnedMesh&&A.skeleton.frame!==W.render.frame&&(A.skeleton.update(),A.skeleton.frame=W.render.frame),!A.frustumCulled||T.intersectsObject(A))){t&&O.setFromMatrixPosition(A.matrixWorld).applyMatrix4(P);const i=Z.update(A),C=A.material;if(Array.isArray(C)){const t=i.groups;for(let n=0,h=t.length;n<h;n++){const h=t[n],r=C[h.materialIndex];r&&r.visible&&k.push(A,i,r,e,O.z,h)}}else C.visible&&k.push(A,i,C,e,O.z,null)}const C=A.children;for(let A=0,n=C.length;A<n;A++)uA(C[A],i,e,t)}function FA(A,i,e){const t=!0===i.isScene?i.overrideMaterial:null;for(let C=0,n=A.length;C<n;C++){const n=A[C],h=n.object,r=n.geometry,E=null===t?n.material:t,l=n.group;if(e.isArrayCamera){const A=e.cameras;for(let e=0,t=A.length;e<t;e++){const t=A[e];h.layers.test(t.layers)&&(V.viewport(f.copy(t.viewport)),g.setupLightsView(t),GA(h,i,t,r,E,l))}}else GA(h,i,e,r,E,l)}}function GA(A,i,e,t,C,n){if(A.onBeforeRender(s,i,e,t,C,n),A.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),A.isImmediateRenderObject){const t=fA(e,i,C,A);V.setMaterial(C),EA.reset(),function(A,i){A.render((function(A){s.renderBufferImmediate(A,i)}))}(A,t)}else s.renderBufferDirect(e,i,t,C,A,n);A.onAfterRender(s,i,e,t,C,n)}function dA(A,i,e){!0!==i.isScene&&(i=N);const t=z.get(A),C=g.state.lights,n=g.state.shadowsArray,h=C.state.version,r=_.getParameters(A,C.state,n,i,e),E=_.getProgramCacheKey(r);let l=t.program,o=!0;if(t.environment=A.isMeshStandardMaterial?i.environment:null,t.fog=i.fog,t.envMap=Q.get(A.envMap||t.environment),void 0===l)A.addEventListener("dispose",BA);else if(l.cacheKey!==E)jA(A);else if(t.lightsStateVersion!==h)o=!1;else{if(void 0!==r.shaderID)return;o=!1}o&&(r.uniforms=_.getUniforms(A),A.onBeforeCompile(r,s),l=_.acquireProgram(r,E),t.program=l,t.uniforms=r.uniforms,t.outputEncoding=r.outputEncoding);const k=t.uniforms;(A.isShaderMaterial||A.isRawShaderMaterial)&&!0!==A.clipping||(t.numClippingPlanes=eA.numPlanes,t.numIntersection=eA.numIntersection,k.clippingPlanes=eA.uniform),t.needsLights=function(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&!0===A.lights}(A),t.lightsStateVersion=h,t.needsLights&&(k.ambientLightColor.value=C.state.ambient,k.lightProbe.value=C.state.probe,k.directionalLights.value=C.state.directional,k.directionalLightShadows.value=C.state.directionalShadow,k.spotLights.value=C.state.spot,k.spotLightShadows.value=C.state.spotShadow,k.rectAreaLights.value=C.state.rectArea,k.ltc_1.value=C.state.rectAreaLTC1,k.ltc_2.value=C.state.rectAreaLTC2,k.pointLights.value=C.state.point,k.pointLightShadows.value=C.state.pointShadow,k.hemisphereLights.value=C.state.hemi,k.directionalShadowMap.value=C.state.directionalShadowMap,k.directionalShadowMatrix.value=C.state.directionalShadowMatrix,k.spotShadowMap.value=C.state.spotShadowMap,k.spotShadowMatrix.value=C.state.spotShadowMatrix,k.pointShadowMap.value=C.state.pointShadowMap,k.pointShadowMatrix.value=C.state.pointShadowMatrix);const D=t.program.getUniforms(),a=vl.seqWithValue(D.seq,k);t.uniformsList=a}function fA(A,i,e,t){!0!==i.isScene&&(i=N),q.resetTextureUnits();const C=i.fog,n=e.isMeshStandardMaterial?i.environment:null,h=null===u?s.outputEncoding:u.texture.encoding,r=Q.get(e.envMap||n),E=z.get(e),l=g.state.lights;if(!0===L&&(!0===R||A!==d)){const i=A===d&&e.id===G;eA.setState(e,A,i)}e.version===E.__version?e.fog&&E.fog!==C||E.environment!==n||E.needsLights&&E.lightsStateVersion!==l.state.version?dA(e,i,t):void 0===E.numClippingPlanes||E.numClippingPlanes===eA.numPlanes&&E.numIntersection===eA.numIntersection?(E.outputEncoding!==h||E.envMap!==r)&&dA(e,i,t):dA(e,i,t):(dA(e,i,t),E.__version=e.version);let o=!1,k=!1,D=!1;const a=E.program,B=a.getUniforms(),j=E.uniforms;if(V.useProgram(a.program)&&(o=!0,k=!0,D=!0),e.id!==G&&(G=e.id,k=!0),o||d!==A){if(B.setValue(lA,"projectionMatrix",A.projectionMatrix),U.logarithmicDepthBuffer&&B.setValue(lA,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),d!==A&&(d=A,k=!0,D=!0),e.isShaderMaterial||e.isMeshPhongMaterial||e.isMeshToonMaterial||e.isMeshStandardMaterial||e.envMap){const i=B.map.cameraPosition;void 0!==i&&i.setValue(lA,O.setFromMatrixPosition(A.matrixWorld))}(e.isMeshPhongMaterial||e.isMeshToonMaterial||e.isMeshLambertMaterial||e.isMeshBasicMaterial||e.isMeshStandardMaterial||e.isShaderMaterial)&&B.setValue(lA,"isOrthographic",!0===A.isOrthographicCamera),(e.isMeshPhongMaterial||e.isMeshToonMaterial||e.isMeshLambertMaterial||e.isMeshBasicMaterial||e.isMeshStandardMaterial||e.isShaderMaterial||e.isShadowMaterial||e.skinning)&&B.setValue(lA,"viewMatrix",A.matrixWorldInverse)}if(e.skinning){B.setOptional(lA,t,"bindMatrix"),B.setOptional(lA,t,"bindMatrixInverse");const A=t.skeleton;if(A){const i=A.bones;if(U.floatVertexTextures){if(null===A.boneTexture){let e=Math.sqrt(4*i.length);e=fn.ceilPowerOfTwo(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(A.boneMatrices);const C=new hE(t,e,e,dt,st);A.boneMatrices=t,A.boneTexture=C,A.boneTextureSize=e}B.setValue(lA,"boneTexture",A.boneTexture,q),B.setValue(lA,"boneTextureSize",A.boneTextureSize)}else B.setOptional(lA,A,"boneMatrices")}}var m,c;return(k||E.receiveShadow!==t.receiveShadow)&&(E.receiveShadow=t.receiveShadow,B.setValue(lA,"receiveShadow",t.receiveShadow)),k&&(B.setValue(lA,"toneMappingExposure",s.toneMappingExposure),E.needsLights&&(c=D,(m=j).ambientLightColor.needsUpdate=c,m.lightProbe.needsUpdate=c,m.directionalLights.needsUpdate=c,m.directionalLightShadows.needsUpdate=c,m.pointLights.needsUpdate=c,m.pointLightShadows.needsUpdate=c,m.spotLights.needsUpdate=c,m.spotLightShadows.needsUpdate=c,m.rectAreaLights.needsUpdate=c,m.hemisphereLights.needsUpdate=c),C&&e.fog&&$.refreshFogUniforms(j,C),$.refreshMaterialUniforms(j,e,y,I),vl.upload(lA,E.uniformsList,j,q)),e.isShaderMaterial&&!0===e.uniformsNeedUpdate&&(vl.upload(lA,E.uniformsList,j,q),e.uniformsNeedUpdate=!1),e.isSpriteMaterial&&B.setValue(lA,"center",t.center),B.setValue(lA,"modelViewMatrix",t.modelViewMatrix),B.setValue(lA,"normalMatrix",t.normalMatrix),B.setValue(lA,"modelMatrix",t.matrixWorld),a}cA.setAnimationLoop((function(A){gA.isPresenting||mA&&mA(A)})),"undefined"!=typeof window&&cA.setContext(window),this.setAnimationLoop=function(A){mA=A,gA.setAnimationLoop(A),null===A?cA.stop():cA.start()},this.render=function(A,i){let e,t;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),e=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),t=arguments[3]),void 0!==i&&!0!==i.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===B)return;EA.resetDefaultState(),G=-1,d=null,!0===A.autoUpdate&&A.updateMatrixWorld(),null===i.parent&&i.updateMatrixWorld(),!0===gA.enabled&&!0===gA.isPresenting&&(i=gA.getCamera(i)),!0===A.isScene&&A.onBeforeRender(s,A,i,e||u),g=iA.get(A,a.length),g.init(),a.push(g),P.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),T.setFromProjectionMatrix(P),R=this.localClippingEnabled,L=eA.init(this.clippingPlanes,R,i),k=AA.get(A,D.length),k.init(),D.push(k),uA(A,i,0,s.sortObjects),k.finish(),!0===s.sortObjects&&k.sort(b,M),!0===L&&eA.beginShadows();const C=g.state.shadowsArray;DA.render(C,A,i),g.setupLights(),g.setupLightsView(i),!0===L&&eA.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==e&&this.setRenderTarget(e),tA.render(k,A,i,t);const n=k.opaque,h=k.transparent;n.length>0&&FA(n,A,i),h.length>0&&FA(h,A,i),!0===A.isScene&&A.onAfterRender(s,A,i),null!==u&&(q.updateRenderTargetMipmap(u),q.updateMultisampleRenderTarget(u)),V.buffers.depth.setTest(!0),V.buffers.depth.setMask(!0),V.buffers.color.setMask(!0),V.setPolygonOffset(!1),a.pop(),g=a.length>0?a[a.length-1]:null,D.pop(),k=D.length>0?D[D.length-1]:null},this.setFramebuffer=function(A){j!==A&&null===u&&lA.bindFramebuffer(36160,A),j=A},this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return c},this.getRenderTarget=function(){return u},this.setRenderTarget=function(A,i=0,e=0){u=A,m=i,c=e,A&&void 0===z.get(A).__webglFramebuffer&&q.setupRenderTarget(A);let t=j,C=!1,n=!1;if(A){const e=A.texture;(e.isDataTexture3D||e.isDataTexture2DArray)&&(n=!0);const h=z.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(t=h[i],C=!0):t=A.isWebGLMultisampleRenderTarget?z.get(A).__webglMultisampledFramebuffer:h,f.copy(A.viewport),p.copy(A.scissor),v=A.scissorTest}else f.copy(x).multiplyScalar(y).floor(),p.copy(w).multiplyScalar(y).floor(),v=S;if(F!==t&&(lA.bindFramebuffer(36160,t),F=t),V.viewport(f),V.scissor(p),V.setScissorTest(v),C){const t=z.get(A.texture);lA.framebufferTexture2D(36160,36064,34069+i,t.__webglTexture,e)}else if(n){const t=z.get(A.texture),C=i||0;lA.framebufferTextureLayer(36160,36064,t.__webglTexture,e||0,C)}},this.readRenderTargetPixels=function(A,i,e,t,C,n,h){if(!A||!A.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let r=z.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&void 0!==h&&(r=r[h]),r){let h=!1;r!==F&&(lA.bindFramebuffer(36160,r),h=!0);try{const r=A.texture,E=r.format,l=r.type;if(E!==dt&&rA.convert(E)!==lA.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const o=l===Bt&&(K.has("EXT_color_buffer_half_float")||U.isWebGL2&&K.has("EXT_color_buffer_float"));if(!(l===lt||rA.convert(l)===lA.getParameter(35738)||l===st&&(U.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float"))||o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===lA.checkFramebufferStatus(36160)?i>=0&&i<=A.width-t&&e>=0&&e<=A.height-C&&lA.readPixels(i,e,t,C,rA.convert(E),rA.convert(l),n):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{h&&lA.bindFramebuffer(36160,F)}}},this.copyFramebufferToTexture=function(A,i,e=0){const t=Math.pow(2,-e),C=Math.floor(i.image.width*t),n=Math.floor(i.image.height*t),h=rA.convert(i.format);q.setTexture2D(i,0),lA.copyTexImage2D(3553,e,h,A.x,A.y,C,n,0),V.unbindTexture()},this.copyTextureToTexture=function(A,i,e,t=0){const C=i.image.width,n=i.image.height,h=rA.convert(e.format),r=rA.convert(e.type);q.setTexture2D(e,0),lA.pixelStorei(37440,e.flipY),lA.pixelStorei(37441,e.premultiplyAlpha),lA.pixelStorei(3317,e.unpackAlignment),i.isDataTexture?lA.texSubImage2D(3553,t,A.x,A.y,C,n,h,r,i.image.data):i.isCompressedTexture?lA.compressedTexSubImage2D(3553,t,A.x,A.y,i.mipmaps[0].width,i.mipmaps[0].height,h,i.mipmaps[0].data):lA.texSubImage2D(3553,t,A.x,A.y,h,r,i.image),0===t&&e.generateMipmaps&&lA.generateMipmap(3553),V.unbindTexture()},this.copyTextureToTexture3D=function(A,i,e,t,C=0){if(s.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:n,height:h,data:r}=e.image,E=rA.convert(t.format),l=rA.convert(t.type);let o;if(t.isDataTexture3D)q.setTexture3D(t,0),o=32879;else{if(!t.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");q.setTexture2DArray(t,0),o=35866}lA.pixelStorei(37440,t.flipY),lA.pixelStorei(37441,t.premultiplyAlpha),lA.pixelStorei(3317,t.unpackAlignment);const k=lA.getParameter(3314),g=lA.getParameter(32878),D=lA.getParameter(3316),a=lA.getParameter(3315),B=lA.getParameter(32877);lA.pixelStorei(3314,n),lA.pixelStorei(32878,h),lA.pixelStorei(3316,A.min.x),lA.pixelStorei(3315,A.min.y),lA.pixelStorei(32877,A.min.z),lA.texSubImage3D(o,C,i.x,i.y,i.z,A.max.x-A.min.x+1,A.max.y-A.min.y+1,A.max.z-A.min.z+1,E,l,r),lA.pixelStorei(3314,k),lA.pixelStorei(32878,g),lA.pixelStorei(3316,D),lA.pixelStorei(3315,a),lA.pixelStorei(32877,B),0===C&&t.generateMipmaps&&lA.generateMipmap(o),V.unbindTexture()},this.initTexture=function(A){q.setTexture2D(A,0),V.unbindTexture()},this.resetState=function(){V.reset(),EA.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}go.prototype.isGroup=!0,Object.assign(Do.prototype,{constructor:Do,getHandSpace:function(){return null===this._hand&&(this._hand=new go,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new go,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new go,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(A){return null!==this._targetRay&&this._targetRay.dispatchEvent(A),null!==this._grip&&this._grip.dispatchEvent(A),null!==this._hand&&this._hand.dispatchEvent(A),this},disconnect:function(A){return this.dispatchEvent({type:"disconnected",data:A}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(A,i,e){let t=null,C=null,n=null;const h=this._targetRay,r=this._grip,E=this._hand;if(A&&"visible-blurred"!==i.session.visibilityState)if(E&&A.hand){n=!0;for(const t of A.hand.values()){const A=i.getJointPose(t,e);if(void 0===E.joints[t.jointName]){const A=new go;A.matrixAutoUpdate=!1,A.visible=!1,E.joints[t.jointName]=A,E.add(A)}const C=E.joints[t.jointName];null!==A&&(C.matrix.fromArray(A.transform.matrix),C.matrix.decompose(C.position,C.rotation,C.scale),C.jointRadius=A.radius),C.visible=null!==A}const t=E.joints["index-finger-tip"],C=E.joints["thumb-tip"],h=t.position.distanceTo(C.position),r=.02,l=.005;E.inputState.pinching&&h>r+l?(E.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:A.handedness,target:this})):!E.inputState.pinching&&h<=r-l&&(E.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:A.handedness,target:this}))}else null!==h&&(t=i.getPose(A.targetRaySpace,e),null!==t&&(h.matrix.fromArray(t.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale))),null!==r&&A.gripSpace&&(C=i.getPose(A.gripSpace,e),null!==C&&(r.matrix.fromArray(C.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale)));return null!==h&&(h.visible=null!==t),null!==r&&(r.visible=null!==C),null!==E&&(E.visible=null!==n),this}}),Object.assign(ao.prototype,Fn.prototype);class jo extends Bo{}jo.prototype.isWebGL1Renderer=!0;class mo{constructor(A,i){this.name="",this.color=new nr(A),this.density=void 0!==i?i:25e-5}clone(){return new mo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}mo.prototype.isFogExp2=!0;class co{constructor(A,i,e){this.name="",this.color=new nr(A),this.near=void 0!==i?i:1,this.far=void 0!==e?e:1e3}clone(){return new co(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}co.prototype.isFog=!0;class uo extends Th{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(A,i){return super.copy(A,i),null!==A.background&&(this.background=A.background.clone()),null!==A.environment&&(this.environment=A.environment.clone()),null!==A.fog&&(this.fog=A.fog.clone()),null!==A.overrideMaterial&&(this.overrideMaterial=A.overrideMaterial.clone()),this.autoUpdate=A.autoUpdate,this.matrixAutoUpdate=A.matrixAutoUpdate,this}toJSON(A){const i=super.toJSON(A);return null!==this.background&&(i.object.background=this.background.toJSON(A)),null!==this.environment&&(i.object.environment=this.environment.toJSON(A)),null!==this.fog&&(i.object.fog=this.fog.toJSON()),i}}function Fo(A,i){this.array=A,this.stride=i,this.count=void 0!==A?A.length/i:0,this.usage=on,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=fn.generateUUID()}uo.prototype.isScene=!0,Object.defineProperty(Fo.prototype,"needsUpdate",{set:function(A){!0===A&&this.version++}}),Object.assign(Fo.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(A){return this.usage=A,this},copy:function(A){return this.array=new A.array.constructor(A.array),this.count=A.count,this.stride=A.stride,this.usage=A.usage,this},copyAt:function(A,i,e){A*=this.stride,e*=i.stride;for(let t=0,C=this.stride;t<C;t++)this.array[A+t]=i.array[e+t];return this},set:function(A,i=0){return this.array.set(A,i),this},clone:function(A){void 0===A.arrayBuffers&&(A.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=fn.generateUUID()),void 0===A.arrayBuffers[this.array.buffer._uuid]&&(A.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const i=new Fo(new this.array.constructor(A.arrayBuffers[this.array.buffer._uuid]),this.stride);return i.setUsage(this.usage),i},onUpload:function(A){return this.onUploadCallback=A,this},toJSON:function(A){return void 0===A.arrayBuffers&&(A.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=fn.generateUUID()),void 0===A.arrayBuffers[this.array.buffer._uuid]&&(A.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Go=new Ln;function fo(A,i,e,t){this.name="",this.data=A,this.itemSize=i,this.offset=e,this.normalized=!0===t}Object.defineProperties(fo.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(A){this.data.needsUpdate=A}}}),Object.assign(fo.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(A){for(let i=0,e=this.data.count;i<e;i++)Go.x=this.getX(i),Go.y=this.getY(i),Go.z=this.getZ(i),Go.applyMatrix4(A),this.setXYZ(i,Go.x,Go.y,Go.z);return this},setX:function(A,i){return this.data.array[A*this.data.stride+this.offset]=i,this},setY:function(A,i){return this.data.array[A*this.data.stride+this.offset+1]=i,this},setZ:function(A,i){return this.data.array[A*this.data.stride+this.offset+2]=i,this},setW:function(A,i){return this.data.array[A*this.data.stride+this.offset+3]=i,this},getX:function(A){return this.data.array[A*this.data.stride+this.offset]},getY:function(A){return this.data.array[A*this.data.stride+this.offset+1]},getZ:function(A){return this.data.array[A*this.data.stride+this.offset+2]},getW:function(A){return this.data.array[A*this.data.stride+this.offset+3]},setXY:function(A,i,e){return A=A*this.data.stride+this.offset,this.data.array[A+0]=i,this.data.array[A+1]=e,this},setXYZ:function(A,i,e,t){return A=A*this.data.stride+this.offset,this.data.array[A+0]=i,this.data.array[A+1]=e,this.data.array[A+2]=t,this},setXYZW:function(A,i,e,t,C){return A=A*this.data.stride+this.offset,this.data.array[A+0]=i,this.data.array[A+1]=e,this.data.array[A+2]=t,this.data.array[A+3]=C,this},clone:function(A){if(void 0===A){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const A=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let i=0;i<this.itemSize;i++)A.push(this.data.array[e+i])}return new lr(new this.array.constructor(A),this.itemSize,this.normalized)}return void 0===A.interleavedBuffers&&(A.interleavedBuffers={}),void 0===A.interleavedBuffers[this.data.uuid]&&(A.interleavedBuffers[this.data.uuid]=this.data.clone(A)),new fo(A.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(A){if(void 0===A){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const A=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let i=0;i<this.itemSize;i++)A.push(this.data.array[e+i])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:A,normalized:this.normalized}}return void 0===A.interleavedBuffers&&(A.interleavedBuffers={}),void 0===A.interleavedBuffers[this.data.uuid]&&(A.interleavedBuffers[this.data.uuid]=this.data.toJSON(A)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class po extends _h{constructor(A){super(),this.type="SpriteMaterial",this.color=new nr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.alphaMap=A.alphaMap,this.rotation=A.rotation,this.sizeAttenuation=A.sizeAttenuation,this}}let vo;po.prototype.isSpriteMaterial=!0;const Ho=new Ln,Io=new Ln,yo=new Ln,bo=new pn,Mo=new pn,xo=new oh,wo=new Ln,So=new Ln,To=new Ln,Lo=new pn,Ro=new pn,Po=new pn;class Oo extends Th{constructor(A){if(super(),this.type="Sprite",void 0===vo){vo=new br;const A=new Fo(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);vo.setIndex([0,1,2,0,2,3]),vo.setAttribute("position",new fo(A,3,0,!1)),vo.setAttribute("uv",new fo(A,2,3,!1))}this.geometry=vo,this.material=void 0!==A?A:new po,this.center=new pn(.5,.5)}raycast(A,i){null===A.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Io.setFromMatrixScale(this.matrixWorld),xo.copy(A.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(A.camera.matrixWorldInverse,this.matrixWorld),yo.setFromMatrixPosition(this.modelViewMatrix),A.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Io.multiplyScalar(-yo.z);const e=this.material.rotation;let t,C;0!==e&&(C=Math.cos(e),t=Math.sin(e));const n=this.center;No(wo.set(-.5,-.5,0),yo,n,Io,t,C),No(So.set(.5,-.5,0),yo,n,Io,t,C),No(To.set(.5,.5,0),yo,n,Io,t,C),Lo.set(0,0),Ro.set(1,0),Po.set(1,1);let h=A.ray.intersectTriangle(wo,So,To,!1,Ho);if(null===h&&(No(So.set(-.5,.5,0),yo,n,Io,t,C),Ro.set(0,1),h=A.ray.intersectTriangle(wo,To,So,!1,Ho),null===h))return;const r=A.ray.origin.distanceTo(Ho);r<A.near||r>A.far||i.push({distance:r,point:Ho.clone(),uv:Xh.getUV(Ho,wo,So,To,Lo,Ro,Po,new pn),face:null,object:this})}copy(A){return super.copy(A),void 0!==A.center&&this.center.copy(A.center),this.material=A.material,this}}function No(A,i,e,t,C,n){bo.subVectors(A,e).addScalar(.5).multiply(t),void 0!==C?(Mo.x=n*bo.x-C*bo.y,Mo.y=C*bo.x+n*bo.y):Mo.copy(bo),A.copy(i),A.x+=Mo.x,A.y+=Mo.y,A.applyMatrix4(xo)}Oo.prototype.isSprite=!0;const Jo=new Ln,Ko=new Ln;class Uo extends Th{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(A){super.copy(A,!1);const i=A.levels;for(let A=0,e=i.length;A<e;A++){const e=i[A];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=A.autoUpdate,this}addLevel(A,i=0){i=Math.abs(i);const e=this.levels;let t;for(t=0;t<e.length&&!(i<e[t].distance);t++);return e.splice(t,0,{distance:i,object:A}),this.add(A),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(A){const i=this.levels;if(i.length>0){let e,t;for(e=1,t=i.length;e<t&&!(A<i[e].distance);e++);return i[e-1].object}return null}raycast(A,i){if(this.levels.length>0){Jo.setFromMatrixPosition(this.matrixWorld);const e=A.ray.origin.distanceTo(Jo);this.getObjectForDistance(e).raycast(A,i)}}update(A){const i=this.levels;if(i.length>1){Jo.setFromMatrixPosition(A.matrixWorld),Ko.setFromMatrixPosition(this.matrixWorld);const e=Jo.distanceTo(Ko)/A.zoom;let t,C;for(i[0].object.visible=!0,t=1,C=i.length;t<C&&e>=i[t].distance;t++)i[t-1].object.visible=!1,i[t].object.visible=!0;for(this._currentLevel=t-1;t<C;t++)i[t].object.visible=!1}}toJSON(A){const i=super.toJSON(A);!1===this.autoUpdate&&(i.object.autoUpdate=!1),i.object.levels=[];const e=this.levels;for(let A=0,t=e.length;A<t;A++){const t=e[A];i.object.levels.push({object:t.object.uuid,distance:t.distance})}return i}}const Vo=new Ln,Wo=new xn,zo=new xn,qo=new Ln,Qo=new oh;function Yo(A,i){Qr.call(this,A,i),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new oh,this.bindMatrixInverse=new oh}function Xo(){Th.call(this),this.type="Bone"}Yo.prototype=Object.assign(Object.create(Qr.prototype),{constructor:Yo,isSkinnedMesh:!0,copy:function(A){return Qr.prototype.copy.call(this,A),this.bindMode=A.bindMode,this.bindMatrix.copy(A.bindMatrix),this.bindMatrixInverse.copy(A.bindMatrixInverse),this.skeleton=A.skeleton,this},bind:function(A,i){this.skeleton=A,void 0===i&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),i=this.matrixWorld),this.bindMatrix.copy(i),this.bindMatrixInverse.copy(i).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const A=new xn,i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){A.x=i.getX(e),A.y=i.getY(e),A.z=i.getZ(e),A.w=i.getW(e);const t=1/A.manhattanLength();t!==1/0?A.multiplyScalar(t):A.set(1,0,0,0),i.setXYZW(e,A.x,A.y,A.z,A.w)}},updateMatrixWorld:function(A){Qr.prototype.updateMatrixWorld.call(this,A),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(A,i){const e=this.skeleton,t=this.geometry;Wo.fromBufferAttribute(t.attributes.skinIndex,A),zo.fromBufferAttribute(t.attributes.skinWeight,A),Vo.fromBufferAttribute(t.attributes.position,A).applyMatrix4(this.bindMatrix),i.set(0,0,0);for(let A=0;A<4;A++){const t=zo.getComponent(A);if(0!==t){const C=Wo.getComponent(A);Qo.multiplyMatrices(e.bones[C].matrixWorld,e.boneInverses[C]),i.addScaledVector(qo.copy(Vo).applyMatrix4(Qo),t)}}return i.applyMatrix4(this.bindMatrixInverse)}}),Xo.prototype=Object.assign(Object.create(Th.prototype),{constructor:Xo,isBone:!0});const Zo=new oh,_o=new oh;class $o{constructor(A=[],i=[]){this.uuid=fn.generateUUID(),this.bones=A.slice(0),this.boneInverses=i,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const A=this.bones,i=this.boneInverses;if(this.boneMatrices=new Float32Array(16*A.length),0===i.length)this.calculateInverses();else if(A.length!==i.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let A=0,i=this.bones.length;A<i;A++)this.boneInverses.push(new oh)}}calculateInverses(){this.boneInverses.length=0;for(let A=0,i=this.bones.length;A<i;A++){const i=new oh;this.bones[A]&&i.copy(this.bones[A].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let A=0,i=this.bones.length;A<i;A++){const i=this.bones[A];i&&i.matrixWorld.copy(this.boneInverses[A]).invert()}for(let A=0,i=this.bones.length;A<i;A++){const i=this.bones[A];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const A=this.bones,i=this.boneInverses,e=this.boneMatrices,t=this.boneTexture;for(let t=0,C=A.length;t<C;t++){const C=A[t]?A[t].matrixWorld:_o;Zo.multiplyMatrices(C,i[t]),Zo.toArray(e,16*t)}null!==t&&(t.needsUpdate=!0)}clone(){return new $o(this.bones,this.boneInverses)}getBoneByName(A){for(let i=0,e=this.bones.length;i<e;i++){const e=this.bones[i];if(e.name===A)return e}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(A,i){this.uuid=A.uuid;for(let e=0,t=A.bones.length;e<t;e++){const t=A.bones[e];let C=i[t];void 0===C&&(console.warn("THREE.Skeleton: No bone found with UUID:",t),C=new Xo),this.bones.push(C),this.boneInverses.push((new oh).fromArray(A.boneInverses[e]))}return this.init(),this}toJSON(){const A={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};A.uuid=this.uuid;const i=this.bones,e=this.boneInverses;for(let t=0,C=i.length;t<C;t++){const C=i[t];A.bones.push(C.uuid);const n=e[t];A.boneInverses.push(n.toArray())}return A}}const Ak=new oh,ik=new oh,ek=[],tk=new Qr;function Ck(A,i,e){Qr.call(this,A,i),this.instanceMatrix=new lr(new Float32Array(16*e),16),this.instanceColor=null,this.count=e,this.frustumCulled=!1}Ck.prototype=Object.assign(Object.create(Qr.prototype),{constructor:Ck,isInstancedMesh:!0,copy:function(A){return Qr.prototype.copy.call(this,A),this.instanceMatrix.copy(A.instanceMatrix),null!==A.instanceColor&&(this.instanceColor=A.instanceColor.clone()),this.count=A.count,this},getColorAt:function(A,i){i.fromArray(this.instanceColor.array,3*A)},getMatrixAt:function(A,i){i.fromArray(this.instanceMatrix.array,16*A)},raycast:function(A,i){const e=this.matrixWorld,t=this.count;if(tk.geometry=this.geometry,tk.material=this.material,void 0!==tk.material)for(let C=0;C<t;C++){this.getMatrixAt(C,Ak),ik.multiplyMatrices(e,Ak),tk.matrixWorld=ik,tk.raycast(A,ek);for(let A=0,e=ek.length;A<e;A++){const e=ek[A];e.instanceId=C,e.object=this,i.push(e)}ek.length=0}},setColorAt:function(A,i){null===this.instanceColor&&(this.instanceColor=new lr(new Float32Array(3*this.count),3)),i.toArray(this.instanceColor.array,3*A)},setMatrixAt:function(A,i){i.toArray(this.instanceMatrix.array,16*A)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class nk extends _h{constructor(A){super(),this.type="LineBasicMaterial",this.color=new nr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.linewidth=A.linewidth,this.linecap=A.linecap,this.linejoin=A.linejoin,this.morphTargets=A.morphTargets,this}}nk.prototype.isLineBasicMaterial=!0;const hk=new Ln,rk=new Ln,Ek=new oh,lk=new lh,ok=new ih;function kk(A=new br,i=new nk){Th.call(this),this.type="Line",this.geometry=A,this.material=i,this.updateMorphTargets()}kk.prototype=Object.assign(Object.create(Th.prototype),{constructor:kk,isLine:!0,copy:function(A){return Th.prototype.copy.call(this,A),this.material=A.material,this.geometry=A.geometry,this},computeLineDistances:function(){const A=this.geometry;if(A.isBufferGeometry)if(null===A.index){const i=A.attributes.position,e=[0];for(let A=1,t=i.count;A<t;A++)hk.fromBufferAttribute(i,A-1),rk.fromBufferAttribute(i,A),e[A]=e[A-1],e[A]+=hk.distanceTo(rk);A.setAttribute("lineDistance",new mr(e,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else A.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(A,i){const e=this.geometry,t=this.matrixWorld,C=A.params.Line.threshold;if(null===e.boundingSphere&&e.computeBoundingSphere(),ok.copy(e.boundingSphere),ok.applyMatrix4(t),ok.radius+=C,!1===A.ray.intersectsSphere(ok))return;Ek.copy(t).invert(),lk.copy(A.ray).applyMatrix4(Ek);const n=C/((this.scale.x+this.scale.y+this.scale.z)/3),h=n*n,r=new Ln,E=new Ln,l=new Ln,o=new Ln,k=this.isLineSegments?2:1;if(e.isBufferGeometry){const t=e.index,C=e.attributes.position;if(null!==t){const e=t.array;for(let t=0,n=e.length-1;t<n;t+=k){const n=e[t],k=e[t+1];r.fromBufferAttribute(C,n),E.fromBufferAttribute(C,k);if(lk.distanceSqToSegment(r,E,o,l)>h)continue;o.applyMatrix4(this.matrixWorld);const g=A.ray.origin.distanceTo(o);g<A.near||g>A.far||i.push({distance:g,point:l.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this})}}else for(let e=0,t=C.count-1;e<t;e+=k){r.fromBufferAttribute(C,e),E.fromBufferAttribute(C,e+1);if(lk.distanceSqToSegment(r,E,o,l)>h)continue;o.applyMatrix4(this.matrixWorld);const t=A.ray.origin.distanceTo(o);t<A.near||t>A.far||i.push({distance:t,point:l.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const A=this.geometry;if(A.isBufferGeometry){const i=A.morphAttributes,e=Object.keys(i);if(e.length>0){const A=i[e[0]];if(void 0!==A){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,e=A.length;i<e;i++){const e=A[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=i}}}}else{const i=A.morphTargets;void 0!==i&&i.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const gk=new Ln,Dk=new Ln;function ak(A,i){kk.call(this,A,i),this.type="LineSegments"}ak.prototype=Object.assign(Object.create(kk.prototype),{constructor:ak,isLineSegments:!0,computeLineDistances:function(){const A=this.geometry;if(A.isBufferGeometry)if(null===A.index){const i=A.attributes.position,e=[];for(let A=0,t=i.count;A<t;A+=2)gk.fromBufferAttribute(i,A),Dk.fromBufferAttribute(i,A+1),e[A]=0===A?0:e[A-1],e[A+1]=e[A]+gk.distanceTo(Dk);A.setAttribute("lineDistance",new mr(e,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else A.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});class sk extends kk{constructor(A,i){super(A,i),this.type="LineLoop"}}sk.prototype.isLineLoop=!0;class Bk extends _h{constructor(A){super(),this.type="PointsMaterial",this.color=new nr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.alphaMap=A.alphaMap,this.size=A.size,this.sizeAttenuation=A.sizeAttenuation,this.morphTargets=A.morphTargets,this}}Bk.prototype.isPointsMaterial=!0;const jk=new oh,mk=new lh,ck=new ih,uk=new Ln;function Fk(A=new br,i=new Bk){Th.call(this),this.type="Points",this.geometry=A,this.material=i,this.updateMorphTargets()}function Gk(A,i,e,t,C,n,h){const r=mk.distanceSqToPoint(A);if(r<e){const e=new Ln;mk.closestPointToPoint(A,e),e.applyMatrix4(t);const E=C.ray.origin.distanceTo(e);if(E<C.near||E>C.far)return;n.push({distance:E,distanceToRay:Math.sqrt(r),point:e,index:i,face:null,object:h})}}Fk.prototype=Object.assign(Object.create(Th.prototype),{constructor:Fk,isPoints:!0,copy:function(A){return Th.prototype.copy.call(this,A),this.material=A.material,this.geometry=A.geometry,this},raycast:function(A,i){const e=this.geometry,t=this.matrixWorld,C=A.params.Points.threshold;if(null===e.boundingSphere&&e.computeBoundingSphere(),ck.copy(e.boundingSphere),ck.applyMatrix4(t),ck.radius+=C,!1===A.ray.intersectsSphere(ck))return;jk.copy(t).invert(),mk.copy(A.ray).applyMatrix4(jk);const n=C/((this.scale.x+this.scale.y+this.scale.z)/3),h=n*n;if(e.isBufferGeometry){const C=e.index,n=e.attributes.position;if(null!==C){const e=C.array;for(let C=0,r=e.length;C<r;C++){const r=e[C];uk.fromBufferAttribute(n,r),Gk(uk,r,h,t,A,i,this)}}else for(let e=0,C=n.count;e<C;e++)uk.fromBufferAttribute(n,e),Gk(uk,e,h,t,A,i,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const A=this.geometry;if(A.isBufferGeometry){const i=A.morphAttributes,e=Object.keys(i);if(e.length>0){const A=i[e[0]];if(void 0!==A){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,e=A.length;i<e;i++){const e=A[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=i}}}}else{const i=A.morphTargets;void 0!==i&&i.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class dk extends bn{constructor(A,i,e,t,C,n,h,r,E){super(A,i,e,t,C,n,h,r,E),this.format=void 0!==h?h:Gt,this.minFilter=void 0!==n?n:Ct,this.magFilter=void 0!==C?C:Ct,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in A&&A.requestVideoFrameCallback((function i(){l.needsUpdate=!0,A.requestVideoFrameCallback(i)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const A=this.image;!1==="requestVideoFrameCallback"in A&&A.readyState>=A.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}dk.prototype.isVideoTexture=!0;class fk extends bn{constructor(A,i,e,t,C,n,h,r,E,l,o,k){super(null,n,h,r,E,l,t,C,o,k),this.image={width:i,height:e},this.mipmaps=A,this.flipY=!1,this.generateMipmaps=!1}}fk.prototype.isCompressedTexture=!0;class pk extends bn{constructor(A,i,e,t,C,n,h,r,E){super(A,i,e,t,C,n,h,r,E),this.needsUpdate=!0}}pk.prototype.isCanvasTexture=!0;class vk extends bn{constructor(A,i,e,t,C,n,h,r,E,l){if((l=void 0!==l?l:Ht)!==Ht&&l!==It)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===e&&l===Ht&&(e=gt),void 0===e&&l===It&&(e=ut),super(null,t,C,n,h,r,l,e,E),this.image={width:A,height:i},this.magFilter=void 0!==h?h:$e,this.minFilter=void 0!==r?r:$e,this.flipY=!1,this.generateMipmaps=!1}}vk.prototype.isDepthTexture=!0;class Hk extends br{constructor(A=1,i=8,e=0,t=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:A,segments:i,thetaStart:e,thetaLength:t},i=Math.max(3,i);const C=[],n=[],h=[],r=[],E=new Ln,l=new pn;n.push(0,0,0),h.push(0,0,1),r.push(.5,.5);for(let C=0,o=3;C<=i;C++,o+=3){const k=e+C/i*t;E.x=A*Math.cos(k),E.y=A*Math.sin(k),n.push(E.x,E.y,E.z),h.push(0,0,1),l.x=(n[o]/A+1)/2,l.y=(n[o+1]/A+1)/2,r.push(l.x,l.y)}for(let A=1;A<=i;A++)C.push(A,A+1,0);this.setIndex(C),this.setAttribute("position",new mr(n,3)),this.setAttribute("normal",new mr(h,3)),this.setAttribute("uv",new mr(r,2))}}class Ik extends br{constructor(A=1,i=1,e=1,t=8,C=1,n=!1,h=0,r=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:A,radiusBottom:i,height:e,radialSegments:t,heightSegments:C,openEnded:n,thetaStart:h,thetaLength:r};const E=this;t=Math.floor(t),C=Math.floor(C);const l=[],o=[],k=[],g=[];let D=0;const a=[],s=e/2;let B=0;function j(e){const C=D,n=new pn,a=new Ln;let j=0;const m=!0===e?A:i,c=!0===e?1:-1;for(let A=1;A<=t;A++)o.push(0,s*c,0),k.push(0,c,0),g.push(.5,.5),D++;const u=D;for(let A=0;A<=t;A++){const i=A/t*r+h,e=Math.cos(i),C=Math.sin(i);a.x=m*C,a.y=s*c,a.z=m*e,o.push(a.x,a.y,a.z),k.push(0,c,0),n.x=.5*e+.5,n.y=.5*C*c+.5,g.push(n.x,n.y),D++}for(let A=0;A<t;A++){const i=C+A,t=u+A;!0===e?l.push(t,t+1,i):l.push(t+1,t,i),j+=3}E.addGroup(B,j,!0===e?1:2),B+=j}!function(){const n=new Ln,j=new Ln;let m=0;const c=(i-A)/e;for(let E=0;E<=C;E++){const l=[],B=E/C,m=B*(i-A)+A;for(let A=0;A<=t;A++){const i=A/t,C=i*r+h,E=Math.sin(C),a=Math.cos(C);j.x=m*E,j.y=-B*e+s,j.z=m*a,o.push(j.x,j.y,j.z),n.set(E,c,a).normalize(),k.push(n.x,n.y,n.z),g.push(i,1-B),l.push(D++)}a.push(l)}for(let A=0;A<t;A++)for(let i=0;i<C;i++){const e=a[i][A],t=a[i+1][A],C=a[i+1][A+1],n=a[i][A+1];l.push(e,t,n),l.push(t,C,n),m+=6}E.addGroup(B,m,0),B+=m}(),!1===n&&(A>0&&j(!0),i>0&&j(!1)),this.setIndex(l),this.setAttribute("position",new mr(o,3)),this.setAttribute("normal",new mr(k,3)),this.setAttribute("uv",new mr(g,2))}}class yk extends Ik{constructor(A=1,i=1,e=8,t=1,C=!1,n=0,h=2*Math.PI){super(0,A,i,e,t,C,n,h),this.type="ConeGeometry",this.parameters={radius:A,height:i,radialSegments:e,heightSegments:t,openEnded:C,thetaStart:n,thetaLength:h}}}class bk extends br{constructor(A,i,e=1,t=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:A,indices:i,radius:e,detail:t};const C=[],n=[];function h(A,i,e,t){const C=t+1,n=[];for(let t=0;t<=C;t++){n[t]=[];const h=A.clone().lerp(e,t/C),r=i.clone().lerp(e,t/C),E=C-t;for(let A=0;A<=E;A++)n[t][A]=0===A&&t===C?h:h.clone().lerp(r,A/E)}for(let A=0;A<C;A++)for(let i=0;i<2*(C-A)-1;i++){const e=Math.floor(i/2);i%2==0?(r(n[A][e+1]),r(n[A+1][e]),r(n[A][e])):(r(n[A][e+1]),r(n[A+1][e+1]),r(n[A+1][e]))}}function r(A){C.push(A.x,A.y,A.z)}function E(i,e){const t=3*i;e.x=A[t+0],e.y=A[t+1],e.z=A[t+2]}function l(A,i,e,t){t<0&&1===A.x&&(n[i]=A.x-1),0===e.x&&0===e.z&&(n[i]=t/2/Math.PI+.5)}function o(A){return Math.atan2(A.z,-A.x)}!function(A){const e=new Ln,t=new Ln,C=new Ln;for(let n=0;n<i.length;n+=3)E(i[n+0],e),E(i[n+1],t),E(i[n+2],C),h(e,t,C,A)}(t),function(A){const i=new Ln;for(let e=0;e<C.length;e+=3)i.x=C[e+0],i.y=C[e+1],i.z=C[e+2],i.normalize().multiplyScalar(A),C[e+0]=i.x,C[e+1]=i.y,C[e+2]=i.z}(e),function(){const A=new Ln;for(let e=0;e<C.length;e+=3){A.x=C[e+0],A.y=C[e+1],A.z=C[e+2];const t=o(A)/2/Math.PI+.5,h=(i=A,Math.atan2(-i.y,Math.sqrt(i.x*i.x+i.z*i.z))/Math.PI+.5);n.push(t,1-h)}var i;(function(){const A=new Ln,i=new Ln,e=new Ln,t=new Ln,h=new pn,r=new pn,E=new pn;for(let k=0,g=0;k<C.length;k+=9,g+=6){A.set(C[k+0],C[k+1],C[k+2]),i.set(C[k+3],C[k+4],C[k+5]),e.set(C[k+6],C[k+7],C[k+8]),h.set(n[g+0],n[g+1]),r.set(n[g+2],n[g+3]),E.set(n[g+4],n[g+5]),t.copy(A).add(i).add(e).divideScalar(3);const D=o(t);l(h,g+0,A,D),l(r,g+2,i,D),l(E,g+4,e,D)}})(),function(){for(let A=0;A<n.length;A+=6){const i=n[A+0],e=n[A+2],t=n[A+4],C=Math.max(i,e,t),h=Math.min(i,e,t);C>.9&&h<.1&&(i<.2&&(n[A+0]+=1),e<.2&&(n[A+2]+=1),t<.2&&(n[A+4]+=1))}}()}(),this.setAttribute("position",new mr(C,3)),this.setAttribute("normal",new mr(C.slice(),3)),this.setAttribute("uv",new mr(n,2)),0===t?this.computeVertexNormals():this.normalizeNormals()}}class Mk extends bk{constructor(A=1,i=0){const e=(1+Math.sqrt(5))/2,t=1/e;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-t,-e,0,-t,e,0,t,-e,0,t,e,-t,-e,0,-t,e,0,t,-e,0,t,e,0,-e,0,-t,e,0,-t,-e,0,t,e,0,t],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],A,i),this.type="DodecahedronGeometry",this.parameters={radius:A,detail:i}}}const xk=new Ln,wk=new Ln,Sk=new Ln,Tk=new Xh;class Lk extends br{constructor(A,i){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:i},i=void 0!==i?i:1,!0===A.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=Math.pow(10,4),t=Math.cos(fn.DEG2RAD*i),C=A.getIndex(),n=A.getAttribute("position"),h=C?C.count:n.count,r=[0,0,0],E=["a","b","c"],l=new Array(3),o={},k=[];for(let A=0;A<h;A+=3){C?(r[0]=C.getX(A),r[1]=C.getX(A+1),r[2]=C.getX(A+2)):(r[0]=A,r[1]=A+1,r[2]=A+2);const{a:i,b:h,c:g}=Tk;if(i.fromBufferAttribute(n,r[0]),h.fromBufferAttribute(n,r[1]),g.fromBufferAttribute(n,r[2]),Tk.getNormal(Sk),l[0]=`${Math.round(i.x*e)},${Math.round(i.y*e)},${Math.round(i.z*e)}`,l[1]=`${Math.round(h.x*e)},${Math.round(h.y*e)},${Math.round(h.z*e)}`,l[2]=`${Math.round(g.x*e)},${Math.round(g.y*e)},${Math.round(g.z*e)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let A=0;A<3;A++){const i=(A+1)%3,e=l[A],C=l[i],n=Tk[E[A]],h=Tk[E[i]],g=`${e}_${C}`,D=`${C}_${e}`;D in o&&o[D]?(Sk.dot(o[D].normal)<=t&&(k.push(n.x,n.y,n.z),k.push(h.x,h.y,h.z)),o[D]=null):g in o||(o[g]={index0:r[A],index1:r[i],normal:Sk.clone()})}}for(const A in o)if(o[A]){const{index0:i,index1:e}=o[A];xk.fromBufferAttribute(n,i),wk.fromBufferAttribute(n,e),k.push(xk.x,xk.y,xk.z),k.push(wk.x,wk.y,wk.z)}this.setAttribute("position",new mr(k,3))}}const Rk=function(A,i,e){e=e||2;const t=i&&i.length,C=t?i[0]*e:A.length;let n=Pk(A,0,C,e,!0);const h=[];if(!n||n.next===n.prev)return h;let r,E,l,o,k,g,D;if(t&&(n=function(A,i,e,t){const C=[];let n,h,r,E,l;for(n=0,h=i.length;n<h;n++)r=i[n]*t,E=n<h-1?i[n+1]*t:A.length,l=Pk(A,r,E,t,!1),l===l.next&&(l.steiner=!0),C.push(Yk(l));for(C.sort(Wk),n=0;n<C.length;n++)zk(C[n],e),e=Ok(e,e.next);return e}(A,i,n,e)),A.length>80*e){r=l=A[0],E=o=A[1];for(let i=e;i<C;i+=e)k=A[i],g=A[i+1],k<r&&(r=k),g<E&&(E=g),k>l&&(l=k),g>o&&(o=g);D=Math.max(l-r,o-E),D=0!==D?1/D:0}return Nk(n,h,e,r,E,D),h};function Pk(A,i,e,t,C){let n,h;if(C===function(A,i,e,t){let C=0;for(let n=i,h=e-t;n<e;n+=t)C+=(A[h]-A[n])*(A[n+1]+A[h+1]),h=n;return C}(A,i,e,t)>0)for(n=i;n<e;n+=t)h=ng(n,A[n],A[n+1],h);else for(n=e-t;n>=i;n-=t)h=ng(n,A[n],A[n+1],h);return h&&$k(h,h.next)&&(hg(h),h=h.next),h}function Ok(A,i){if(!A)return A;i||(i=A);let e,t=A;do{if(e=!1,t.steiner||!$k(t,t.next)&&0!==_k(t.prev,t,t.next))t=t.next;else{if(hg(t),t=i=t.prev,t===t.next)break;e=!0}}while(e||t!==i);return i}function Nk(A,i,e,t,C,n,h){if(!A)return;!h&&n&&function(A,i,e,t){let C=A;do{null===C.z&&(C.z=Qk(C.x,C.y,i,e,t)),C.prevZ=C.prev,C.nextZ=C.next,C=C.next}while(C!==A);C.prevZ.nextZ=null,C.prevZ=null,function(A){let i,e,t,C,n,h,r,E,l=1;do{for(e=A,A=null,n=null,h=0;e;){for(h++,t=e,r=0,i=0;i<l&&(r++,t=t.nextZ,t);i++);for(E=l;r>0||E>0&&t;)0!==r&&(0===E||!t||e.z<=t.z)?(C=e,e=e.nextZ,r--):(C=t,t=t.nextZ,E--),n?n.nextZ=C:A=C,C.prevZ=n,n=C;e=t}n.nextZ=null,l*=2}while(h>1)}(C)}(A,t,C,n);let r,E,l=A;for(;A.prev!==A.next;)if(r=A.prev,E=A.next,n?Kk(A,t,C,n):Jk(A))i.push(r.i/e),i.push(A.i/e),i.push(E.i/e),hg(A),A=E.next,l=E.next;else if((A=E)===l){h?1===h?Nk(A=Uk(Ok(A),i,e),i,e,t,C,n,2):2===h&&Vk(A,i,e,t,C,n):Nk(Ok(A),i,e,t,C,n,1);break}}function Jk(A){const i=A.prev,e=A,t=A.next;if(_k(i,e,t)>=0)return!1;let C=A.next.next;for(;C!==A.prev;){if(Xk(i.x,i.y,e.x,e.y,t.x,t.y,C.x,C.y)&&_k(C.prev,C,C.next)>=0)return!1;C=C.next}return!0}function Kk(A,i,e,t){const C=A.prev,n=A,h=A.next;if(_k(C,n,h)>=0)return!1;const r=C.x<n.x?C.x<h.x?C.x:h.x:n.x<h.x?n.x:h.x,E=C.y<n.y?C.y<h.y?C.y:h.y:n.y<h.y?n.y:h.y,l=C.x>n.x?C.x>h.x?C.x:h.x:n.x>h.x?n.x:h.x,o=C.y>n.y?C.y>h.y?C.y:h.y:n.y>h.y?n.y:h.y,k=Qk(r,E,i,e,t),g=Qk(l,o,i,e,t);let D=A.prevZ,a=A.nextZ;for(;D&&D.z>=k&&a&&a.z<=g;){if(D!==A.prev&&D!==A.next&&Xk(C.x,C.y,n.x,n.y,h.x,h.y,D.x,D.y)&&_k(D.prev,D,D.next)>=0)return!1;if(D=D.prevZ,a!==A.prev&&a!==A.next&&Xk(C.x,C.y,n.x,n.y,h.x,h.y,a.x,a.y)&&_k(a.prev,a,a.next)>=0)return!1;a=a.nextZ}for(;D&&D.z>=k;){if(D!==A.prev&&D!==A.next&&Xk(C.x,C.y,n.x,n.y,h.x,h.y,D.x,D.y)&&_k(D.prev,D,D.next)>=0)return!1;D=D.prevZ}for(;a&&a.z<=g;){if(a!==A.prev&&a!==A.next&&Xk(C.x,C.y,n.x,n.y,h.x,h.y,a.x,a.y)&&_k(a.prev,a,a.next)>=0)return!1;a=a.nextZ}return!0}function Uk(A,i,e){let t=A;do{const C=t.prev,n=t.next.next;!$k(C,n)&&Ag(C,t,t.next,n)&&tg(C,n)&&tg(n,C)&&(i.push(C.i/e),i.push(t.i/e),i.push(n.i/e),hg(t),hg(t.next),t=A=n),t=t.next}while(t!==A);return Ok(t)}function Vk(A,i,e,t,C,n){let h=A;do{let A=h.next.next;for(;A!==h.prev;){if(h.i!==A.i&&Zk(h,A)){let r=Cg(h,A);return h=Ok(h,h.next),r=Ok(r,r.next),Nk(h,i,e,t,C,n),void Nk(r,i,e,t,C,n)}A=A.next}h=h.next}while(h!==A)}function Wk(A,i){return A.x-i.x}function zk(A,i){if(i=function(A,i){let e=i;const t=A.x,C=A.y;let n,h=-1/0;do{if(C<=e.y&&C>=e.next.y&&e.next.y!==e.y){const A=e.x+(C-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(A<=t&&A>h){if(h=A,A===t){if(C===e.y)return e;if(C===e.next.y)return e.next}n=e.x<e.next.x?e:e.next}}e=e.next}while(e!==i);if(!n)return null;if(t===h)return n;const r=n,E=n.x,l=n.y;let o,k=1/0;e=n;do{t>=e.x&&e.x>=E&&t!==e.x&&Xk(C<l?t:h,C,E,l,C<l?h:t,C,e.x,e.y)&&(o=Math.abs(C-e.y)/(t-e.x),tg(e,A)&&(o<k||o===k&&(e.x>n.x||e.x===n.x&&qk(n,e)))&&(n=e,k=o)),e=e.next}while(e!==r);return n}(A,i)){const e=Cg(i,A);Ok(i,i.next),Ok(e,e.next)}}function qk(A,i){return _k(A.prev,A,i.prev)<0&&_k(i.next,A,A.next)<0}function Qk(A,i,e,t,C){return(A=1431655765&((A=858993459&((A=252645135&((A=16711935&((A=32767*(A-e)*C)|A<<8))|A<<4))|A<<2))|A<<1))|(i=1431655765&((i=858993459&((i=252645135&((i=16711935&((i=32767*(i-t)*C)|i<<8))|i<<4))|i<<2))|i<<1))<<1}function Yk(A){let i=A,e=A;do{(i.x<e.x||i.x===e.x&&i.y<e.y)&&(e=i),i=i.next}while(i!==A);return e}function Xk(A,i,e,t,C,n,h,r){return(C-h)*(i-r)-(A-h)*(n-r)>=0&&(A-h)*(t-r)-(e-h)*(i-r)>=0&&(e-h)*(n-r)-(C-h)*(t-r)>=0}function Zk(A,i){return A.next.i!==i.i&&A.prev.i!==i.i&&!function(A,i){let e=A;do{if(e.i!==A.i&&e.next.i!==A.i&&e.i!==i.i&&e.next.i!==i.i&&Ag(e,e.next,A,i))return!0;e=e.next}while(e!==A);return!1}(A,i)&&(tg(A,i)&&tg(i,A)&&function(A,i){let e=A,t=!1;const C=(A.x+i.x)/2,n=(A.y+i.y)/2;do{e.y>n!=e.next.y>n&&e.next.y!==e.y&&C<(e.next.x-e.x)*(n-e.y)/(e.next.y-e.y)+e.x&&(t=!t),e=e.next}while(e!==A);return t}(A,i)&&(_k(A.prev,A,i.prev)||_k(A,i.prev,i))||$k(A,i)&&_k(A.prev,A,A.next)>0&&_k(i.prev,i,i.next)>0)}function _k(A,i,e){return(i.y-A.y)*(e.x-i.x)-(i.x-A.x)*(e.y-i.y)}function $k(A,i){return A.x===i.x&&A.y===i.y}function Ag(A,i,e,t){const C=eg(_k(A,i,e)),n=eg(_k(A,i,t)),h=eg(_k(e,t,A)),r=eg(_k(e,t,i));return C!==n&&h!==r||(!(0!==C||!ig(A,e,i))||(!(0!==n||!ig(A,t,i))||(!(0!==h||!ig(e,A,t))||!(0!==r||!ig(e,i,t)))))}function ig(A,i,e){return i.x<=Math.max(A.x,e.x)&&i.x>=Math.min(A.x,e.x)&&i.y<=Math.max(A.y,e.y)&&i.y>=Math.min(A.y,e.y)}function eg(A){return A>0?1:A<0?-1:0}function tg(A,i){return _k(A.prev,A,A.next)<0?_k(A,i,A.next)>=0&&_k(A,A.prev,i)>=0:_k(A,i,A.prev)<0||_k(A,A.next,i)<0}function Cg(A,i){const e=new rg(A.i,A.x,A.y),t=new rg(i.i,i.x,i.y),C=A.next,n=i.prev;return A.next=i,i.prev=A,e.next=C,C.prev=e,t.next=e,e.prev=t,n.next=t,t.prev=n,t}function ng(A,i,e,t){const C=new rg(A,i,e);return t?(C.next=t.next,C.prev=t,t.next.prev=C,t.next=C):(C.prev=C,C.next=C),C}function hg(A){A.next.prev=A.prev,A.prev.next=A.next,A.prevZ&&(A.prevZ.nextZ=A.nextZ),A.nextZ&&(A.nextZ.prevZ=A.prevZ)}function rg(A,i,e){this.i=A,this.x=i,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Eg={area:function(A){const i=A.length;let e=0;for(let t=i-1,C=0;C<i;t=C++)e+=A[t].x*A[C].y-A[C].x*A[t].y;return.5*e},isClockWise:function(A){return Eg.area(A)<0},triangulateShape:function(A,i){const e=[],t=[],C=[];lg(A),og(e,A);let n=A.length;i.forEach(lg);for(let A=0;A<i.length;A++)t.push(n),n+=i[A].length,og(e,i[A]);const h=Rk(e,t);for(let A=0;A<h.length;A+=3)C.push(h.slice(A,A+3));return C}};function lg(A){const i=A.length;i>2&&A[i-1].equals(A[0])&&A.pop()}function og(A,i){for(let e=0;e<i.length;e++)A.push(i[e].x),A.push(i[e].y)}class kg extends br{constructor(A,i){super(),this.type="ExtrudeGeometry",this.parameters={shapes:A,options:i},A=Array.isArray(A)?A:[A];const e=this,t=[],C=[];for(let i=0,e=A.length;i<e;i++){n(A[i])}function n(A){const n=[],h=void 0!==i.curveSegments?i.curveSegments:12,r=void 0!==i.steps?i.steps:1;let E=void 0!==i.depth?i.depth:100,l=void 0===i.bevelEnabled||i.bevelEnabled,o=void 0!==i.bevelThickness?i.bevelThickness:6,k=void 0!==i.bevelSize?i.bevelSize:o-2,g=void 0!==i.bevelOffset?i.bevelOffset:0,D=void 0!==i.bevelSegments?i.bevelSegments:3;const a=i.extrudePath,s=void 0!==i.UVGenerator?i.UVGenerator:gg;void 0!==i.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),E=i.amount);let B,j,m,c,u,F=!1;a&&(B=a.getSpacedPoints(r),F=!0,l=!1,j=a.computeFrenetFrames(r,!1),m=new Ln,c=new Ln,u=new Ln),l||(D=0,o=0,k=0,g=0);const G=A.extractPoints(h);let d=G.shape;const f=G.holes;if(!Eg.isClockWise(d)){d=d.reverse();for(let A=0,i=f.length;A<i;A++){const i=f[A];Eg.isClockWise(i)&&(f[A]=i.reverse())}}const p=Eg.triangulateShape(d,f),v=d;for(let A=0,i=f.length;A<i;A++){const i=f[A];d=d.concat(i)}function H(A,i,e){return i||console.error("THREE.ExtrudeGeometry: vec does not exist"),i.clone().multiplyScalar(e).add(A)}const I=d.length,y=p.length;function b(A,i,e){let t,C,n;const h=A.x-i.x,r=A.y-i.y,E=e.x-A.x,l=e.y-A.y,o=h*h+r*r,k=h*l-r*E;if(Math.abs(k)>Number.EPSILON){const k=Math.sqrt(o),g=Math.sqrt(E*E+l*l),D=i.x-r/k,a=i.y+h/k,s=((e.x-l/g-D)*l-(e.y+E/g-a)*E)/(h*l-r*E);t=D+h*s-A.x,C=a+r*s-A.y;const B=t*t+C*C;if(B<=2)return new pn(t,C);n=Math.sqrt(B/2)}else{let A=!1;h>Number.EPSILON?E>Number.EPSILON&&(A=!0):h<-Number.EPSILON?E<-Number.EPSILON&&(A=!0):Math.sign(r)===Math.sign(l)&&(A=!0),A?(t=-r,C=h,n=Math.sqrt(o)):(t=h,C=r,n=Math.sqrt(o/2))}return new pn(t/n,C/n)}const M=[];for(let A=0,i=v.length,e=i-1,t=A+1;A<i;A++,e++,t++)e===i&&(e=0),t===i&&(t=0),M[A]=b(v[A],v[e],v[t]);const x=[];let w,S=M.concat();for(let A=0,i=f.length;A<i;A++){const i=f[A];w=[];for(let A=0,e=i.length,t=e-1,C=A+1;A<e;A++,t++,C++)t===e&&(t=0),C===e&&(C=0),w[A]=b(i[A],i[t],i[C]);x.push(w),S=S.concat(w)}for(let A=0;A<D;A++){const i=A/D,e=o*Math.cos(i*Math.PI/2),t=k*Math.sin(i*Math.PI/2)+g;for(let A=0,i=v.length;A<i;A++){const i=H(v[A],M[A],t);R(i.x,i.y,-e)}for(let A=0,i=f.length;A<i;A++){const i=f[A];w=x[A];for(let A=0,C=i.length;A<C;A++){const C=H(i[A],w[A],t);R(C.x,C.y,-e)}}}const T=k+g;for(let A=0;A<I;A++){const i=l?H(d[A],S[A],T):d[A];F?(c.copy(j.normals[0]).multiplyScalar(i.x),m.copy(j.binormals[0]).multiplyScalar(i.y),u.copy(B[0]).add(c).add(m),R(u.x,u.y,u.z)):R(i.x,i.y,0)}for(let A=1;A<=r;A++)for(let i=0;i<I;i++){const e=l?H(d[i],S[i],T):d[i];F?(c.copy(j.normals[A]).multiplyScalar(e.x),m.copy(j.binormals[A]).multiplyScalar(e.y),u.copy(B[A]).add(c).add(m),R(u.x,u.y,u.z)):R(e.x,e.y,E/r*A)}for(let A=D-1;A>=0;A--){const i=A/D,e=o*Math.cos(i*Math.PI/2),t=k*Math.sin(i*Math.PI/2)+g;for(let A=0,i=v.length;A<i;A++){const i=H(v[A],M[A],t);R(i.x,i.y,E+e)}for(let A=0,i=f.length;A<i;A++){const i=f[A];w=x[A];for(let A=0,C=i.length;A<C;A++){const C=H(i[A],w[A],t);F?R(C.x,C.y+B[r-1].y,B[r-1].x+e):R(C.x,C.y,E+e)}}}function L(A,i){let e=A.length;for(;--e>=0;){const t=e;let C=e-1;C<0&&(C=A.length-1);for(let A=0,e=r+2*D;A<e;A++){const e=I*A,n=I*(A+1);O(i+t+e,i+C+e,i+C+n,i+t+n)}}}function R(A,i,e){n.push(A),n.push(i),n.push(e)}function P(A,i,C){N(A),N(i),N(C);const n=t.length/3,h=s.generateTopUV(e,t,n-3,n-2,n-1);J(h[0]),J(h[1]),J(h[2])}function O(A,i,C,n){N(A),N(i),N(n),N(i),N(C),N(n);const h=t.length/3,r=s.generateSideWallUV(e,t,h-6,h-3,h-2,h-1);J(r[0]),J(r[1]),J(r[3]),J(r[1]),J(r[2]),J(r[3])}function N(A){t.push(n[3*A+0]),t.push(n[3*A+1]),t.push(n[3*A+2])}function J(A){C.push(A.x),C.push(A.y)}!function(){const A=t.length/3;if(l){let A=0,i=I*A;for(let A=0;A<y;A++){const e=p[A];P(e[2]+i,e[1]+i,e[0]+i)}A=r+2*D,i=I*A;for(let A=0;A<y;A++){const e=p[A];P(e[0]+i,e[1]+i,e[2]+i)}}else{for(let A=0;A<y;A++){const i=p[A];P(i[2],i[1],i[0])}for(let A=0;A<y;A++){const i=p[A];P(i[0]+I*r,i[1]+I*r,i[2]+I*r)}}e.addGroup(A,t.length/3-A,0)}(),function(){const A=t.length/3;let i=0;L(v,i),i+=v.length;for(let A=0,e=f.length;A<e;A++){const e=f[A];L(e,i),i+=e.length}e.addGroup(A,t.length/3-A,1)}()}this.setAttribute("position",new mr(t,3)),this.setAttribute("uv",new mr(C,2)),this.computeVertexNormals()}toJSON(){const A=br.prototype.toJSON.call(this);return function(A,i,e){if(e.shapes=[],Array.isArray(A))for(let i=0,t=A.length;i<t;i++){const t=A[i];e.shapes.push(t.uuid)}else e.shapes.push(A.uuid);void 0!==i.extrudePath&&(e.options.extrudePath=i.extrudePath.toJSON());return e}(this.parameters.shapes,this.parameters.options,A)}}const gg={generateTopUV:function(A,i,e,t,C){const n=i[3*e],h=i[3*e+1],r=i[3*t],E=i[3*t+1],l=i[3*C],o=i[3*C+1];return[new pn(n,h),new pn(r,E),new pn(l,o)]},generateSideWallUV:function(A,i,e,t,C,n){const h=i[3*e],r=i[3*e+1],E=i[3*e+2],l=i[3*t],o=i[3*t+1],k=i[3*t+2],g=i[3*C],D=i[3*C+1],a=i[3*C+2],s=i[3*n],B=i[3*n+1],j=i[3*n+2];return Math.abs(r-o)<.01?[new pn(h,1-E),new pn(l,1-k),new pn(g,1-a),new pn(s,1-j)]:[new pn(r,1-E),new pn(o,1-k),new pn(D,1-a),new pn(B,1-j)]}};class Dg extends bk{constructor(A=1,i=0){const e=(1+Math.sqrt(5))/2;super([-1,e,0,1,e,0,-1,-e,0,1,-e,0,0,-1,e,0,1,e,0,-1,-e,0,1,-e,e,0,-1,e,0,1,-e,0,-1,-e,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],A,i),this.type="IcosahedronGeometry",this.parameters={radius:A,detail:i}}}class ag extends br{constructor(A,i=12,e=0,t=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:A,segments:i,phiStart:e,phiLength:t},i=Math.floor(i),t=fn.clamp(t,0,2*Math.PI);const C=[],n=[],h=[],r=1/i,E=new Ln,l=new pn;for(let C=0;C<=i;C++){const o=e+C*r*t,k=Math.sin(o),g=Math.cos(o);for(let e=0;e<=A.length-1;e++)E.x=A[e].x*k,E.y=A[e].y,E.z=A[e].x*g,n.push(E.x,E.y,E.z),l.x=C/i,l.y=e/(A.length-1),h.push(l.x,l.y)}for(let e=0;e<i;e++)for(let i=0;i<A.length-1;i++){const t=i+e*A.length,n=t,h=t+A.length,r=t+A.length+1,E=t+1;C.push(n,h,E),C.push(h,r,E)}if(this.setIndex(C),this.setAttribute("position",new mr(n,3)),this.setAttribute("uv",new mr(h,2)),this.computeVertexNormals(),t===2*Math.PI){const e=this.attributes.normal.array,t=new Ln,C=new Ln,n=new Ln,h=i*A.length*3;for(let i=0,r=0;i<A.length;i++,r+=3)t.x=e[r+0],t.y=e[r+1],t.z=e[r+2],C.x=e[h+r+0],C.y=e[h+r+1],C.z=e[h+r+2],n.addVectors(t,C).normalize(),e[r+0]=e[h+r+0]=n.x,e[r+1]=e[h+r+1]=n.y,e[r+2]=e[h+r+2]=n.z}}}class sg extends bk{constructor(A=1,i=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],A,i),this.type="OctahedronGeometry",this.parameters={radius:A,detail:i}}}function Bg(A,i,e){br.call(this),this.type="ParametricGeometry",this.parameters={func:A,slices:i,stacks:e};const t=[],C=[],n=[],h=[],r=1e-5,E=new Ln,l=new Ln,o=new Ln,k=new Ln,g=new Ln;A.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const D=i+1;for(let t=0;t<=e;t++){const D=t/e;for(let e=0;e<=i;e++){const t=e/i;A(t,D,l),C.push(l.x,l.y,l.z),t-r>=0?(A(t-r,D,o),k.subVectors(l,o)):(A(t+r,D,o),k.subVectors(o,l)),D-r>=0?(A(t,D-r,o),g.subVectors(l,o)):(A(t,D+r,o),g.subVectors(o,l)),E.crossVectors(k,g).normalize(),n.push(E.x,E.y,E.z),h.push(t,D)}}for(let A=0;A<e;A++)for(let e=0;e<i;e++){const i=A*D+e,C=A*D+e+1,n=(A+1)*D+e+1,h=(A+1)*D+e;t.push(i,C,h),t.push(C,n,h)}this.setIndex(t),this.setAttribute("position",new mr(C,3)),this.setAttribute("normal",new mr(n,3)),this.setAttribute("uv",new mr(h,2))}Bg.prototype=Object.create(br.prototype),Bg.prototype.constructor=Bg;class jg extends br{constructor(A=.5,i=1,e=8,t=1,C=0,n=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:A,outerRadius:i,thetaSegments:e,phiSegments:t,thetaStart:C,thetaLength:n},e=Math.max(3,e);const h=[],r=[],E=[],l=[];let o=A;const k=(i-A)/(t=Math.max(1,t)),g=new Ln,D=new pn;for(let A=0;A<=t;A++){for(let A=0;A<=e;A++){const t=C+A/e*n;g.x=o*Math.cos(t),g.y=o*Math.sin(t),r.push(g.x,g.y,g.z),E.push(0,0,1),D.x=(g.x/i+1)/2,D.y=(g.y/i+1)/2,l.push(D.x,D.y)}o+=k}for(let A=0;A<t;A++){const i=A*(e+1);for(let A=0;A<e;A++){const t=A+i,C=t,n=t+e+1,r=t+e+2,E=t+1;h.push(C,n,E),h.push(n,r,E)}}this.setIndex(h),this.setAttribute("position",new mr(r,3)),this.setAttribute("normal",new mr(E,3)),this.setAttribute("uv",new mr(l,2))}}class mg extends br{constructor(A,i=12){super(),this.type="ShapeGeometry",this.parameters={shapes:A,curveSegments:i};const e=[],t=[],C=[],n=[];let h=0,r=0;if(!1===Array.isArray(A))E(A);else for(let i=0;i<A.length;i++)E(A[i]),this.addGroup(h,r,i),h+=r,r=0;function E(A){const h=t.length/3,E=A.extractPoints(i);let l=E.shape;const o=E.holes;!1===Eg.isClockWise(l)&&(l=l.reverse());for(let A=0,i=o.length;A<i;A++){const i=o[A];!0===Eg.isClockWise(i)&&(o[A]=i.reverse())}const k=Eg.triangulateShape(l,o);for(let A=0,i=o.length;A<i;A++){const i=o[A];l=l.concat(i)}for(let A=0,i=l.length;A<i;A++){const i=l[A];t.push(i.x,i.y,0),C.push(0,0,1),n.push(i.x,i.y)}for(let A=0,i=k.length;A<i;A++){const i=k[A],t=i[0]+h,C=i[1]+h,n=i[2]+h;e.push(t,C,n),r+=3}}this.setIndex(e),this.setAttribute("position",new mr(t,3)),this.setAttribute("normal",new mr(C,3)),this.setAttribute("uv",new mr(n,2))}toJSON(){const A=br.prototype.toJSON.call(this);return function(A,i){if(i.shapes=[],Array.isArray(A))for(let e=0,t=A.length;e<t;e++){const t=A[e];i.shapes.push(t.uuid)}else i.shapes.push(A.uuid);return i}(this.parameters.shapes,A)}}class cg extends br{constructor(A=1,i=8,e=6,t=0,C=2*Math.PI,n=0,h=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:A,widthSegments:i,heightSegments:e,phiStart:t,phiLength:C,thetaStart:n,thetaLength:h},i=Math.max(3,Math.floor(i)),e=Math.max(2,Math.floor(e));const r=Math.min(n+h,Math.PI);let E=0;const l=[],o=new Ln,k=new Ln,g=[],D=[],a=[],s=[];for(let g=0;g<=e;g++){const B=[],j=g/e;let m=0;0==g&&0==n?m=.5/i:g==e&&r==Math.PI&&(m=-.5/i);for(let e=0;e<=i;e++){const r=e/i;o.x=-A*Math.cos(t+r*C)*Math.sin(n+j*h),o.y=A*Math.cos(n+j*h),o.z=A*Math.sin(t+r*C)*Math.sin(n+j*h),D.push(o.x,o.y,o.z),k.copy(o).normalize(),a.push(k.x,k.y,k.z),s.push(r+m,1-j),B.push(E++)}l.push(B)}for(let A=0;A<e;A++)for(let t=0;t<i;t++){const i=l[A][t+1],C=l[A][t],h=l[A+1][t],E=l[A+1][t+1];(0!==A||n>0)&&g.push(i,C,E),(A!==e-1||r<Math.PI)&&g.push(C,h,E)}this.setIndex(g),this.setAttribute("position",new mr(D,3)),this.setAttribute("normal",new mr(a,3)),this.setAttribute("uv",new mr(s,2))}}class ug extends bk{constructor(A=1,i=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],A,i),this.type="TetrahedronGeometry",this.parameters={radius:A,detail:i}}}class Fg extends kg{constructor(A,i={}){const e=i.font;if(!e||!e.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new br;const t=e.generateShapes(A,i.size);i.depth=void 0!==i.height?i.height:50,void 0===i.bevelThickness&&(i.bevelThickness=10),void 0===i.bevelSize&&(i.bevelSize=8),void 0===i.bevelEnabled&&(i.bevelEnabled=!1),super(t,i),this.type="TextGeometry"}}class Gg extends br{constructor(A=1,i=.4,e=8,t=6,C=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:A,tube:i,radialSegments:e,tubularSegments:t,arc:C},e=Math.floor(e),t=Math.floor(t);const n=[],h=[],r=[],E=[],l=new Ln,o=new Ln,k=new Ln;for(let n=0;n<=e;n++)for(let g=0;g<=t;g++){const D=g/t*C,a=n/e*Math.PI*2;o.x=(A+i*Math.cos(a))*Math.cos(D),o.y=(A+i*Math.cos(a))*Math.sin(D),o.z=i*Math.sin(a),h.push(o.x,o.y,o.z),l.x=A*Math.cos(D),l.y=A*Math.sin(D),k.subVectors(o,l).normalize(),r.push(k.x,k.y,k.z),E.push(g/t),E.push(n/e)}for(let A=1;A<=e;A++)for(let i=1;i<=t;i++){const e=(t+1)*A+i-1,C=(t+1)*(A-1)+i-1,h=(t+1)*(A-1)+i,r=(t+1)*A+i;n.push(e,C,r),n.push(C,h,r)}this.setIndex(n),this.setAttribute("position",new mr(h,3)),this.setAttribute("normal",new mr(r,3)),this.setAttribute("uv",new mr(E,2))}}class dg extends br{constructor(A=1,i=.4,e=64,t=8,C=2,n=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:A,tube:i,tubularSegments:e,radialSegments:t,p:C,q:n},e=Math.floor(e),t=Math.floor(t);const h=[],r=[],E=[],l=[],o=new Ln,k=new Ln,g=new Ln,D=new Ln,a=new Ln,s=new Ln,B=new Ln;for(let h=0;h<=e;++h){const m=h/e*C*Math.PI*2;j(m,C,n,A,g),j(m+.01,C,n,A,D),s.subVectors(D,g),B.addVectors(D,g),a.crossVectors(s,B),B.crossVectors(a,s),a.normalize(),B.normalize();for(let A=0;A<=t;++A){const C=A/t*Math.PI*2,n=-i*Math.cos(C),D=i*Math.sin(C);o.x=g.x+(n*B.x+D*a.x),o.y=g.y+(n*B.y+D*a.y),o.z=g.z+(n*B.z+D*a.z),r.push(o.x,o.y,o.z),k.subVectors(o,g).normalize(),E.push(k.x,k.y,k.z),l.push(h/e),l.push(A/t)}}for(let A=1;A<=e;A++)for(let i=1;i<=t;i++){const e=(t+1)*(A-1)+(i-1),C=(t+1)*A+(i-1),n=(t+1)*A+i,r=(t+1)*(A-1)+i;h.push(e,C,r),h.push(C,n,r)}function j(A,i,e,t,C){const n=Math.cos(A),h=Math.sin(A),r=e/i*A,E=Math.cos(r);C.x=t*(2+E)*.5*n,C.y=t*(2+E)*h*.5,C.z=t*Math.sin(r)*.5}this.setIndex(h),this.setAttribute("position",new mr(r,3)),this.setAttribute("normal",new mr(E,3)),this.setAttribute("uv",new mr(l,2))}}class fg extends br{constructor(A,i=64,e=1,t=8,C=!1){super(),this.type="TubeGeometry",this.parameters={path:A,tubularSegments:i,radius:e,radialSegments:t,closed:C};const n=A.computeFrenetFrames(i,C);this.tangents=n.tangents,this.normals=n.normals,this.binormals=n.binormals;const h=new Ln,r=new Ln,E=new pn;let l=new Ln;const o=[],k=[],g=[],D=[];function a(C){l=A.getPointAt(C/i,l);const E=n.normals[C],g=n.binormals[C];for(let A=0;A<=t;A++){const i=A/t*Math.PI*2,C=Math.sin(i),n=-Math.cos(i);r.x=n*E.x+C*g.x,r.y=n*E.y+C*g.y,r.z=n*E.z+C*g.z,r.normalize(),k.push(r.x,r.y,r.z),h.x=l.x+e*r.x,h.y=l.y+e*r.y,h.z=l.z+e*r.z,o.push(h.x,h.y,h.z)}}!function(){for(let A=0;A<i;A++)a(A);a(!1===C?i:0),function(){for(let A=0;A<=i;A++)for(let e=0;e<=t;e++)E.x=A/i,E.y=e/t,g.push(E.x,E.y)}(),function(){for(let A=1;A<=i;A++)for(let i=1;i<=t;i++){const e=(t+1)*(A-1)+(i-1),C=(t+1)*A+(i-1),n=(t+1)*A+i,h=(t+1)*(A-1)+i;D.push(e,C,h),D.push(C,n,h)}}()}(),this.setIndex(D),this.setAttribute("position",new mr(o,3)),this.setAttribute("normal",new mr(k,3)),this.setAttribute("uv",new mr(g,2))}toJSON(){const A=br.prototype.toJSON.call(this);return A.path=this.parameters.path.toJSON(),A}}class pg extends br{constructor(A){if(super(),this.type="WireframeGeometry",!0===A.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const i=[],e=[0,0],t={},C=new Ln;if(null!==A.index){const n=A.attributes.position,h=A.index;let r=A.groups;0===r.length&&(r=[{start:0,count:h.count,materialIndex:0}]);for(let A=0,i=r.length;A<i;++A){const i=r[A],C=i.start;for(let A=C,n=C+i.count;A<n;A+=3)for(let i=0;i<3;i++){const C=h.getX(A+i),n=h.getX(A+(i+1)%3);e[0]=Math.min(C,n),e[1]=Math.max(C,n);const r=e[0]+","+e[1];void 0===t[r]&&(t[r]={index1:e[0],index2:e[1]})}}for(const A in t){const e=t[A];C.fromBufferAttribute(n,e.index1),i.push(C.x,C.y,C.z),C.fromBufferAttribute(n,e.index2),i.push(C.x,C.y,C.z)}}else{const e=A.attributes.position;for(let A=0,t=e.count/3;A<t;A++)for(let t=0;t<3;t++){const n=3*A+t;C.fromBufferAttribute(e,n),i.push(C.x,C.y,C.z);const h=3*A+(t+1)%3;C.fromBufferAttribute(e,h),i.push(C.x,C.y,C.z)}}this.setAttribute("position",new mr(i,3))}}var vg=Object.freeze({__proto__:null,BoxGeometry:Xr,BoxBufferGeometry:Xr,CircleGeometry:Hk,CircleBufferGeometry:Hk,ConeGeometry:yk,ConeBufferGeometry:yk,CylinderGeometry:Ik,CylinderBufferGeometry:Ik,DodecahedronGeometry:Mk,DodecahedronBufferGeometry:Mk,EdgesGeometry:Lk,ExtrudeGeometry:kg,ExtrudeBufferGeometry:kg,IcosahedronGeometry:Dg,IcosahedronBufferGeometry:Dg,LatheGeometry:ag,LatheBufferGeometry:ag,OctahedronGeometry:sg,OctahedronBufferGeometry:sg,ParametricGeometry:Bg,ParametricBufferGeometry:Bg,PlaneGeometry:gE,PlaneBufferGeometry:gE,PolyhedronGeometry:bk,PolyhedronBufferGeometry:bk,RingGeometry:jg,RingBufferGeometry:jg,ShapeGeometry:mg,ShapeBufferGeometry:mg,SphereGeometry:cg,SphereBufferGeometry:cg,TetrahedronGeometry:ug,TetrahedronBufferGeometry:ug,TextGeometry:Fg,TextBufferGeometry:Fg,TorusGeometry:Gg,TorusBufferGeometry:Gg,TorusKnotGeometry:dg,TorusKnotBufferGeometry:dg,TubeGeometry:fg,TubeBufferGeometry:fg,WireframeGeometry:pg});class Hg extends _h{constructor(A){super(),this.type="ShadowMaterial",this.color=new nr(0),this.transparent=!0,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this}}Hg.prototype.isShadowMaterial=!0;class Ig extends AE{constructor(A){super(A),this.type="RawShaderMaterial"}}function yg(A){_h.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new nr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=WC,this.normalScale=new pn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(A)}function bg(A){yg.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pn(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(A){this.reflectivity=fn.clamp(2.5*(A-1)/(A+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(A)}Ig.prototype.isRawShaderMaterial=!0,yg.prototype=Object.create(_h.prototype),yg.prototype.constructor=yg,yg.prototype.isMeshStandardMaterial=!0,yg.prototype.copy=function(A){return _h.prototype.copy.call(this,A),this.defines={STANDARD:""},this.color.copy(A.color),this.roughness=A.roughness,this.metalness=A.metalness,this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.emissive.copy(A.emissive),this.emissiveMap=A.emissiveMap,this.emissiveIntensity=A.emissiveIntensity,this.bumpMap=A.bumpMap,this.bumpScale=A.bumpScale,this.normalMap=A.normalMap,this.normalMapType=A.normalMapType,this.normalScale.copy(A.normalScale),this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.roughnessMap=A.roughnessMap,this.metalnessMap=A.metalnessMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.envMapIntensity=A.envMapIntensity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this.flatShading=A.flatShading,this.vertexTangents=A.vertexTangents,this},bg.prototype=Object.create(yg.prototype),bg.prototype.constructor=bg,bg.prototype.isMeshPhysicalMaterial=!0,bg.prototype.copy=function(A){return yg.prototype.copy.call(this,A),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=A.clearcoat,this.clearcoatMap=A.clearcoatMap,this.clearcoatRoughness=A.clearcoatRoughness,this.clearcoatRoughnessMap=A.clearcoatRoughnessMap,this.clearcoatNormalMap=A.clearcoatNormalMap,this.clearcoatNormalScale.copy(A.clearcoatNormalScale),this.reflectivity=A.reflectivity,A.sheen?this.sheen=(this.sheen||new nr).copy(A.sheen):this.sheen=null,this.transmission=A.transmission,this.transmissionMap=A.transmissionMap,this};class Mg extends _h{constructor(A){super(),this.type="MeshPhongMaterial",this.color=new nr(16777215),this.specular=new nr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=WC,this.normalScale=new pn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Se,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.specular.copy(A.specular),this.shininess=A.shininess,this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.emissive.copy(A.emissive),this.emissiveMap=A.emissiveMap,this.emissiveIntensity=A.emissiveIntensity,this.bumpMap=A.bumpMap,this.bumpScale=A.bumpScale,this.normalMap=A.normalMap,this.normalMapType=A.normalMapType,this.normalScale.copy(A.normalScale),this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.specularMap=A.specularMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.combine=A.combine,this.reflectivity=A.reflectivity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this.flatShading=A.flatShading,this}}Mg.prototype.isMeshPhongMaterial=!0;class xg extends _h{constructor(A){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new nr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=WC,this.normalScale=new pn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.gradientMap=A.gradientMap,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.emissive.copy(A.emissive),this.emissiveMap=A.emissiveMap,this.emissiveIntensity=A.emissiveIntensity,this.bumpMap=A.bumpMap,this.bumpScale=A.bumpScale,this.normalMap=A.normalMap,this.normalMapType=A.normalMapType,this.normalScale.copy(A.normalScale),this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.alphaMap=A.alphaMap,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this}}xg.prototype.isMeshToonMaterial=!0;class wg extends _h{constructor(A){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=WC,this.normalScale=new pn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(A)}copy(A){return super.copy(A),this.bumpMap=A.bumpMap,this.bumpScale=A.bumpScale,this.normalMap=A.normalMap,this.normalMapType=A.normalMapType,this.normalScale.copy(A.normalScale),this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this.flatShading=A.flatShading,this}}wg.prototype.isMeshNormalMaterial=!0;class Sg extends _h{constructor(A){super(),this.type="MeshLambertMaterial",this.color=new nr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Se,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.emissive.copy(A.emissive),this.emissiveMap=A.emissiveMap,this.emissiveIntensity=A.emissiveIntensity,this.specularMap=A.specularMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.combine=A.combine,this.reflectivity=A.reflectivity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this}}Sg.prototype.isMeshLambertMaterial=!0;class Tg extends _h{constructor(A){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new nr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=WC,this.normalScale=new pn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(A)}copy(A){return super.copy(A),this.defines={MATCAP:""},this.color.copy(A.color),this.matcap=A.matcap,this.map=A.map,this.bumpMap=A.bumpMap,this.bumpScale=A.bumpScale,this.normalMap=A.normalMap,this.normalMapType=A.normalMapType,this.normalScale.copy(A.normalScale),this.displacementMap=A.displacementMap,this.displacementScale=A.displacementScale,this.displacementBias=A.displacementBias,this.alphaMap=A.alphaMap,this.skinning=A.skinning,this.morphTargets=A.morphTargets,this.morphNormals=A.morphNormals,this.flatShading=A.flatShading,this}}Tg.prototype.isMeshMatcapMaterial=!0;class Lg extends nk{constructor(A){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(A)}copy(A){return super.copy(A),this.scale=A.scale,this.dashSize=A.dashSize,this.gapSize=A.gapSize,this}}Lg.prototype.isLineDashedMaterial=!0;var Rg=Object.freeze({__proto__:null,ShadowMaterial:Hg,SpriteMaterial:po,RawShaderMaterial:Ig,ShaderMaterial:AE,PointsMaterial:Bk,MeshPhysicalMaterial:bg,MeshStandardMaterial:yg,MeshPhongMaterial:Mg,MeshToonMaterial:xg,MeshNormalMaterial:wg,MeshLambertMaterial:Sg,MeshDepthMaterial:no,MeshDistanceMaterial:ho,MeshBasicMaterial:hr,MeshMatcapMaterial:Tg,LineDashedMaterial:Lg,LineBasicMaterial:nk,Material:_h});const Pg={arraySlice:function(A,i,e){return Pg.isTypedArray(A)?new A.constructor(A.subarray(i,void 0!==e?e:A.length)):A.slice(i,e)},convertArray:function(A,i,e){return!A||!e&&A.constructor===i?A:"number"==typeof i.BYTES_PER_ELEMENT?new i(A):Array.prototype.slice.call(A)},isTypedArray:function(A){return ArrayBuffer.isView(A)&&!(A instanceof DataView)},getKeyframeOrder:function(A){const i=A.length,e=new Array(i);for(let A=0;A!==i;++A)e[A]=A;return e.sort((function(i,e){return A[i]-A[e]})),e},sortedArray:function(A,i,e){const t=A.length,C=new A.constructor(t);for(let n=0,h=0;h!==t;++n){const t=e[n]*i;for(let e=0;e!==i;++e)C[h++]=A[t+e]}return C},flattenJSON:function(A,i,e,t){let C=1,n=A[0];for(;void 0!==n&&void 0===n[t];)n=A[C++];if(void 0===n)return;let h=n[t];if(void 0!==h)if(Array.isArray(h))do{h=n[t],void 0!==h&&(i.push(n.time),e.push.apply(e,h)),n=A[C++]}while(void 0!==n);else if(void 0!==h.toArray)do{h=n[t],void 0!==h&&(i.push(n.time),h.toArray(e,e.length)),n=A[C++]}while(void 0!==n);else do{h=n[t],void 0!==h&&(i.push(n.time),e.push(h)),n=A[C++]}while(void 0!==n)},subclip:function(A,i,e,t,C=30){const n=A.clone();n.name=i;const h=[];for(let A=0;A<n.tracks.length;++A){const i=n.tracks[A],r=i.getValueSize(),E=[],l=[];for(let A=0;A<i.times.length;++A){const n=i.times[A]*C;if(!(n<e||n>=t)){E.push(i.times[A]);for(let e=0;e<r;++e)l.push(i.values[A*r+e])}}0!==E.length&&(i.times=Pg.convertArray(E,i.times.constructor),i.values=Pg.convertArray(l,i.values.constructor),h.push(i))}n.tracks=h;let r=1/0;for(let A=0;A<n.tracks.length;++A)r>n.tracks[A].times[0]&&(r=n.tracks[A].times[0]);for(let A=0;A<n.tracks.length;++A)n.tracks[A].shift(-1*r);return n.resetDuration(),n},makeClipAdditive:function(A,i=0,e=A,t=30){t<=0&&(t=30);const C=e.tracks.length,n=i/t;for(let i=0;i<C;++i){const t=e.tracks[i],C=t.ValueTypeName;if("bool"===C||"string"===C)continue;const h=A.tracks.find((function(A){return A.name===t.name&&A.ValueTypeName===C}));if(void 0===h)continue;let r=0;const E=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(r=E/3);let l=0;const o=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=o/3);const k=t.times.length-1;let g;if(n<=t.times[0]){const A=r,i=E-r;g=Pg.arraySlice(t.values,A,i)}else if(n>=t.times[k]){const A=k*E+r,i=A+E-r;g=Pg.arraySlice(t.values,A,i)}else{const A=t.createInterpolant(),i=r,e=E-r;A.evaluate(n),g=Pg.arraySlice(A.resultBuffer,i,e)}if("quaternion"===C){(new Tn).fromArray(g).normalize().conjugate().toArray(g)}const D=h.times.length;for(let A=0;A<D;++A){const i=A*o+l;if("quaternion"===C)Tn.multiplyQuaternionsFlat(h.values,i,g,0,h.values,i);else{const A=o-2*l;for(let e=0;e<A;++e)h.values[i+e]-=g[e]}}}return A.blendMode=MC,A}};function Og(A,i,e,t){this.parameterPositions=A,this._cachedIndex=0,this.resultBuffer=void 0!==t?t:new i.constructor(e),this.sampleValues=i,this.valueSize=e}function Ng(A,i,e,t){Og.call(this,A,i,e,t),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Jg(A,i,e,t){Og.call(this,A,i,e,t)}function Kg(A,i,e,t){Og.call(this,A,i,e,t)}Object.assign(Og.prototype,{evaluate:function(A){const i=this.parameterPositions;let e=this._cachedIndex,t=i[e],C=i[e-1];A:{i:{let n;e:{t:if(!(A<t)){for(let n=e+2;;){if(void 0===t){if(A<C)break t;return e=i.length,this._cachedIndex=e,this.afterEnd_(e-1,A,C)}if(e===n)break;if(C=t,t=i[++e],A<t)break i}n=i.length;break e}if(A>=C)break A;{const h=i[1];A<h&&(e=2,C=h);for(let n=e-2;;){if(void 0===C)return this._cachedIndex=0,this.beforeStart_(0,A,t);if(e===n)break;if(t=C,C=i[--e-1],A>=C)break i}n=e,e=0}}for(;e<n;){const t=e+n>>>1;A<i[t]?n=t:e=t+1}if(t=i[e],C=i[e-1],void 0===C)return this._cachedIndex=0,this.beforeStart_(0,A,t);if(void 0===t)return e=i.length,this._cachedIndex=e,this.afterEnd_(e-1,C,A)}this._cachedIndex=e,this.intervalChanged_(e,C,t)}return this.interpolate_(e,C,A,t)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(A){const i=this.resultBuffer,e=this.sampleValues,t=this.valueSize,C=A*t;for(let A=0;A!==t;++A)i[A]=e[C+A];return i},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Og.prototype,{beforeStart_:Og.prototype.copySampleValue_,afterEnd_:Og.prototype.copySampleValue_}),Ng.prototype=Object.assign(Object.create(Og.prototype),{constructor:Ng,DefaultSettings_:{endingStart:HC,endingEnd:HC},intervalChanged_:function(A,i,e){const t=this.parameterPositions;let C=A-2,n=A+1,h=t[C],r=t[n];if(void 0===h)switch(this.getSettings_().endingStart){case IC:C=A,h=2*i-e;break;case yC:C=t.length-2,h=i+t[C]-t[C+1];break;default:C=A,h=e}if(void 0===r)switch(this.getSettings_().endingEnd){case IC:n=A,r=2*e-i;break;case yC:n=1,r=e+t[1]-t[0];break;default:n=A-1,r=i}const E=.5*(e-i),l=this.valueSize;this._weightPrev=E/(i-h),this._weightNext=E/(r-e),this._offsetPrev=C*l,this._offsetNext=n*l},interpolate_:function(A,i,e,t){const C=this.resultBuffer,n=this.sampleValues,h=this.valueSize,r=A*h,E=r-h,l=this._offsetPrev,o=this._offsetNext,k=this._weightPrev,g=this._weightNext,D=(e-i)/(t-i),a=D*D,s=a*D,B=-k*s+2*k*a-k*D,j=(1+k)*s+(-1.5-2*k)*a+(-.5+k)*D+1,m=(-1-g)*s+(1.5+g)*a+.5*D,c=g*s-g*a;for(let A=0;A!==h;++A)C[A]=B*n[l+A]+j*n[E+A]+m*n[r+A]+c*n[o+A];return C}}),Jg.prototype=Object.assign(Object.create(Og.prototype),{constructor:Jg,interpolate_:function(A,i,e,t){const C=this.resultBuffer,n=this.sampleValues,h=this.valueSize,r=A*h,E=r-h,l=(e-i)/(t-i),o=1-l;for(let A=0;A!==h;++A)C[A]=n[E+A]*o+n[r+A]*l;return C}}),Kg.prototype=Object.assign(Object.create(Og.prototype),{constructor:Kg,interpolate_:function(A){return this.copySampleValue_(A-1)}});class Ug{constructor(A,i,e,t){if(void 0===A)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===i||0===i.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+A);this.name=A,this.times=Pg.convertArray(i,this.TimeBufferType),this.values=Pg.convertArray(e,this.ValueBufferType),this.setInterpolation(t||this.DefaultInterpolation)}static toJSON(A){const i=A.constructor;let e;if(i.toJSON!==this.toJSON)e=i.toJSON(A);else{e={name:A.name,times:Pg.convertArray(A.times,Array),values:Pg.convertArray(A.values,Array)};const i=A.getInterpolation();i!==A.DefaultInterpolation&&(e.interpolation=i)}return e.type=A.ValueTypeName,e}InterpolantFactoryMethodDiscrete(A){return new Kg(this.times,this.values,this.getValueSize(),A)}InterpolantFactoryMethodLinear(A){return new Jg(this.times,this.values,this.getValueSize(),A)}InterpolantFactoryMethodSmooth(A){return new Ng(this.times,this.values,this.getValueSize(),A)}setInterpolation(A){let i;switch(A){case fC:i=this.InterpolantFactoryMethodDiscrete;break;case pC:i=this.InterpolantFactoryMethodLinear;break;case vC:i=this.InterpolantFactoryMethodSmooth}if(void 0===i){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(A===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=i,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return fC;case this.InterpolantFactoryMethodLinear:return pC;case this.InterpolantFactoryMethodSmooth:return vC}}getValueSize(){return this.values.length/this.times.length}shift(A){if(0!==A){const i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]+=A}return this}scale(A){if(1!==A){const i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]*=A}return this}trim(A,i){const e=this.times,t=e.length;let C=0,n=t-1;for(;C!==t&&e[C]<A;)++C;for(;-1!==n&&e[n]>i;)--n;if(++n,0!==C||n!==t){C>=n&&(n=Math.max(n,1),C=n-1);const A=this.getValueSize();this.times=Pg.arraySlice(e,C,n),this.values=Pg.arraySlice(this.values,C*A,n*A)}return this}validate(){let A=!0;const i=this.getValueSize();i-Math.floor(i)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),A=!1);const e=this.times,t=this.values,C=e.length;0===C&&(console.error("THREE.KeyframeTrack: Track is empty.",this),A=!1);let n=null;for(let i=0;i!==C;i++){const t=e[i];if("number"==typeof t&&isNaN(t)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,t),A=!1;break}if(null!==n&&n>t){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,t,n),A=!1;break}n=t}if(void 0!==t&&Pg.isTypedArray(t))for(let i=0,e=t.length;i!==e;++i){const e=t[i];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,e),A=!1;break}}return A}optimize(){const A=Pg.arraySlice(this.times),i=Pg.arraySlice(this.values),e=this.getValueSize(),t=this.getInterpolation()===vC,C=A.length-1;let n=1;for(let h=1;h<C;++h){let C=!1;const r=A[h];if(r!==A[h+1]&&(1!==h||r!==A[0]))if(t)C=!0;else{const A=h*e,t=A-e,n=A+e;for(let h=0;h!==e;++h){const e=i[A+h];if(e!==i[t+h]||e!==i[n+h]){C=!0;break}}}if(C){if(h!==n){A[n]=A[h];const t=h*e,C=n*e;for(let A=0;A!==e;++A)i[C+A]=i[t+A]}++n}}if(C>0){A[n]=A[C];for(let A=C*e,t=n*e,h=0;h!==e;++h)i[t+h]=i[A+h];++n}return n!==A.length?(this.times=Pg.arraySlice(A,0,n),this.values=Pg.arraySlice(i,0,n*e)):(this.times=A,this.values=i),this}clone(){const A=Pg.arraySlice(this.times,0),i=Pg.arraySlice(this.values,0),e=new(0,this.constructor)(this.name,A,i);return e.createInterpolant=this.createInterpolant,e}}Ug.prototype.TimeBufferType=Float32Array,Ug.prototype.ValueBufferType=Float32Array,Ug.prototype.DefaultInterpolation=pC;class Vg extends Ug{}Vg.prototype.ValueTypeName="bool",Vg.prototype.ValueBufferType=Array,Vg.prototype.DefaultInterpolation=fC,Vg.prototype.InterpolantFactoryMethodLinear=void 0,Vg.prototype.InterpolantFactoryMethodSmooth=void 0;class Wg extends Ug{}Wg.prototype.ValueTypeName="color";class zg extends Ug{}function qg(A,i,e,t){Og.call(this,A,i,e,t)}zg.prototype.ValueTypeName="number",qg.prototype=Object.assign(Object.create(Og.prototype),{constructor:qg,interpolate_:function(A,i,e,t){const C=this.resultBuffer,n=this.sampleValues,h=this.valueSize,r=(e-i)/(t-i);let E=A*h;for(let A=E+h;E!==A;E+=4)Tn.slerpFlat(C,0,n,E-h,n,E,r);return C}});class Qg extends Ug{InterpolantFactoryMethodLinear(A){return new qg(this.times,this.values,this.getValueSize(),A)}}Qg.prototype.ValueTypeName="quaternion",Qg.prototype.DefaultInterpolation=pC,Qg.prototype.InterpolantFactoryMethodSmooth=void 0;class Yg extends Ug{}Yg.prototype.ValueTypeName="string",Yg.prototype.ValueBufferType=Array,Yg.prototype.DefaultInterpolation=fC,Yg.prototype.InterpolantFactoryMethodLinear=void 0,Yg.prototype.InterpolantFactoryMethodSmooth=void 0;class Xg extends Ug{}Xg.prototype.ValueTypeName="vector";class Zg{constructor(A,i=-1,e,t=bC){this.name=A,this.tracks=e,this.duration=i,this.blendMode=t,this.uuid=fn.generateUUID(),this.duration<0&&this.resetDuration()}static parse(A){const i=[],e=A.tracks,t=1/(A.fps||1);for(let A=0,C=e.length;A!==C;++A)i.push(_g(e[A]).scale(t));const C=new this(A.name,A.duration,i,A.blendMode);return C.uuid=A.uuid,C}static toJSON(A){const i=[],e=A.tracks,t={name:A.name,duration:A.duration,tracks:i,uuid:A.uuid,blendMode:A.blendMode};for(let A=0,t=e.length;A!==t;++A)i.push(Ug.toJSON(e[A]));return t}static CreateFromMorphTargetSequence(A,i,e,t){const C=i.length,n=[];for(let A=0;A<C;A++){let h=[],r=[];h.push((A+C-1)%C,A,(A+1)%C),r.push(0,1,0);const E=Pg.getKeyframeOrder(h);h=Pg.sortedArray(h,1,E),r=Pg.sortedArray(r,1,E),t||0!==h[0]||(h.push(C),r.push(r[0])),n.push(new zg(".morphTargetInfluences["+i[A].name+"]",h,r).scale(1/e))}return new this(A,-1,n)}static findByName(A,i){let e=A;if(!Array.isArray(A)){const i=A;e=i.geometry&&i.geometry.animations||i.animations}for(let A=0;A<e.length;A++)if(e[A].name===i)return e[A];return null}static CreateClipsFromMorphTargetSequences(A,i,e){const t={},C=/^([\w-]*?)([\d]+)$/;for(let i=0,e=A.length;i<e;i++){const e=A[i],n=e.name.match(C);if(n&&n.length>1){const A=n[1];let i=t[A];i||(t[A]=i=[]),i.push(e)}}const n=[];for(const A in t)n.push(this.CreateFromMorphTargetSequence(A,t[A],i,e));return n}static parseAnimation(A,i){if(!A)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const e=function(A,i,e,t,C){if(0!==e.length){const n=[],h=[];Pg.flattenJSON(e,n,h,t),0!==n.length&&C.push(new A(i,n,h))}},t=[],C=A.name||"default",n=A.fps||30,h=A.blendMode;let r=A.length||-1;const E=A.hierarchy||[];for(let A=0;A<E.length;A++){const C=E[A].keys;if(C&&0!==C.length)if(C[0].morphTargets){const A={};let i;for(i=0;i<C.length;i++)if(C[i].morphTargets)for(let e=0;e<C[i].morphTargets.length;e++)A[C[i].morphTargets[e]]=-1;for(const e in A){const A=[],n=[];for(let t=0;t!==C[i].morphTargets.length;++t){const t=C[i];A.push(t.time),n.push(t.morphTarget===e?1:0)}t.push(new zg(".morphTargetInfluence["+e+"]",A,n))}r=A.length*(n||1)}else{const n=".bones["+i[A].name+"]";e(Xg,n+".position",C,"pos",t),e(Qg,n+".quaternion",C,"rot",t),e(Xg,n+".scale",C,"scl",t)}}if(0===t.length)return null;return new this(C,r,t,h)}resetDuration(){let A=0;for(let i=0,e=this.tracks.length;i!==e;++i){const e=this.tracks[i];A=Math.max(A,e.times[e.times.length-1])}return this.duration=A,this}trim(){for(let A=0;A<this.tracks.length;A++)this.tracks[A].trim(0,this.duration);return this}validate(){let A=!0;for(let i=0;i<this.tracks.length;i++)A=A&&this.tracks[i].validate();return A}optimize(){for(let A=0;A<this.tracks.length;A++)this.tracks[A].optimize();return this}clone(){const A=[];for(let i=0;i<this.tracks.length;i++)A.push(this.tracks[i].clone());return new this.constructor(this.name,this.duration,A,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function _g(A){if(void 0===A.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const i=function(A){switch(A.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return zg;case"vector":case"vector2":case"vector3":case"vector4":return Xg;case"color":return Wg;case"quaternion":return Qg;case"bool":case"boolean":return Vg;case"string":return Yg}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+A)}(A.type);if(void 0===A.times){const i=[],e=[];Pg.flattenJSON(A.keys,i,e,"value"),A.times=i,A.values=e}return void 0!==i.parse?i.parse(A):new i(A.name,A.times,A.values,A.interpolation)}const $g={enabled:!1,files:{},add:function(A,i){!1!==this.enabled&&(this.files[A]=i)},get:function(A){if(!1!==this.enabled)return this.files[A]},remove:function(A){delete this.files[A]},clear:function(){this.files={}}};function AD(A,i,e){const t=this;let C=!1,n=0,h=0,r=void 0;const E=[];this.onStart=void 0,this.onLoad=A,this.onProgress=i,this.onError=e,this.itemStart=function(A){h++,!1===C&&void 0!==t.onStart&&t.onStart(A,n,h),C=!0},this.itemEnd=function(A){n++,void 0!==t.onProgress&&t.onProgress(A,n,h),n===h&&(C=!1,void 0!==t.onLoad&&t.onLoad())},this.itemError=function(A){void 0!==t.onError&&t.onError(A)},this.resolveURL=function(A){return r?r(A):A},this.setURLModifier=function(A){return r=A,this},this.addHandler=function(A,i){return E.push(A,i),this},this.removeHandler=function(A){const i=E.indexOf(A);return-1!==i&&E.splice(i,2),this},this.getHandler=function(A){for(let i=0,e=E.length;i<e;i+=2){const e=E[i],t=E[i+1];if(e.global&&(e.lastIndex=0),e.test(A))return t}return null}}const iD=new AD;function eD(A){this.manager=void 0!==A?A:iD,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(eD.prototype,{load:function(){},loadAsync:function(A,i){const e=this;return new Promise((function(t,C){e.load(A,t,i,C)}))},parse:function(){},setCrossOrigin:function(A){return this.crossOrigin=A,this},setWithCredentials:function(A){return this.withCredentials=A,this},setPath:function(A){return this.path=A,this},setResourcePath:function(A){return this.resourcePath=A,this},setRequestHeader:function(A){return this.requestHeader=A,this}});const tD={};function CD(A){eD.call(this,A)}CD.prototype=Object.assign(Object.create(eD.prototype),{constructor:CD,load:function(A,i,e,t){void 0===A&&(A=""),void 0!==this.path&&(A=this.path+A),A=this.manager.resolveURL(A);const C=this,n=$g.get(A);if(void 0!==n)return C.manager.itemStart(A),setTimeout((function(){i&&i(n),C.manager.itemEnd(A)}),0),n;if(void 0!==tD[A])return void tD[A].push({onLoad:i,onProgress:e,onError:t});const h=A.match(/^data:(.*?)(;base64)?,(.*)$/);let r;if(h){const e=h[1],n=!!h[2];let r=h[3];r=decodeURIComponent(r),n&&(r=atob(r));try{let t;const n=(this.responseType||"").toLowerCase();switch(n){case"arraybuffer":case"blob":const A=new Uint8Array(r.length);for(let i=0;i<r.length;i++)A[i]=r.charCodeAt(i);t="blob"===n?new Blob([A.buffer],{type:e}):A.buffer;break;case"document":const i=new DOMParser;t=i.parseFromString(r,e);break;case"json":t=JSON.parse(r);break;default:t=r}setTimeout((function(){i&&i(t),C.manager.itemEnd(A)}),0)}catch(i){setTimeout((function(){t&&t(i),C.manager.itemError(A),C.manager.itemEnd(A)}),0)}}else{tD[A]=[],tD[A].push({onLoad:i,onProgress:e,onError:t}),r=new XMLHttpRequest,r.open("GET",A,!0),r.addEventListener("load",(function(i){const e=this.response,t=tD[A];if(delete tD[A],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),$g.add(A,e);for(let A=0,i=t.length;A<i;A++){const i=t[A];i.onLoad&&i.onLoad(e)}C.manager.itemEnd(A)}else{for(let A=0,e=t.length;A<e;A++){const e=t[A];e.onError&&e.onError(i)}C.manager.itemError(A),C.manager.itemEnd(A)}}),!1),r.addEventListener("progress",(function(i){const e=tD[A];for(let A=0,t=e.length;A<t;A++){const t=e[A];t.onProgress&&t.onProgress(i)}}),!1),r.addEventListener("error",(function(i){const e=tD[A];delete tD[A];for(let A=0,t=e.length;A<t;A++){const t=e[A];t.onError&&t.onError(i)}C.manager.itemError(A),C.manager.itemEnd(A)}),!1),r.addEventListener("abort",(function(i){const e=tD[A];delete tD[A];for(let A=0,t=e.length;A<t;A++){const t=e[A];t.onError&&t.onError(i)}C.manager.itemError(A),C.manager.itemEnd(A)}),!1),void 0!==this.responseType&&(r.responseType=this.responseType),void 0!==this.withCredentials&&(r.withCredentials=this.withCredentials),r.overrideMimeType&&r.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const A in this.requestHeader)r.setRequestHeader(A,this.requestHeader[A]);r.send(null)}return C.manager.itemStart(A),r},setResponseType:function(A){return this.responseType=A,this},setMimeType:function(A){return this.mimeType=A,this}});class nD extends eD{constructor(A){super(A)}load(A,i,e,t){const C=this,n=new CD(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(A,(function(e){try{i(C.parse(JSON.parse(e)))}catch(i){t?t(i):console.error(i),C.manager.itemError(A)}}),e,t)}parse(A){const i=[];for(let e=0;e<A.length;e++){const t=Zg.parse(A[e]);i.push(t)}return i}}function hD(A){eD.call(this,A)}hD.prototype=Object.assign(Object.create(eD.prototype),{constructor:hD,load:function(A,i,e,t){const C=this,n=[],h=new fk,r=new CD(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(C.withCredentials);let E=0;function l(l){r.load(A[l],(function(A){const e=C.parse(A,!0);n[l]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},E+=1,6===E&&(1===e.mipmapCount&&(h.minFilter=Ct),h.image=n,h.format=e.format,h.needsUpdate=!0,i&&i(h))}),e,t)}if(Array.isArray(A))for(let i=0,e=A.length;i<e;++i)l(i);else r.load(A,(function(A){const e=C.parse(A,!0);if(e.isCubemap){const A=e.mipmaps.length/e.mipmapCount;for(let i=0;i<A;i++){n[i]={mipmaps:[]};for(let A=0;A<e.mipmapCount;A++)n[i].mipmaps.push(e.mipmaps[i*e.mipmapCount+A]),n[i].format=e.format,n[i].width=e.width,n[i].height=e.height}h.image=n}else h.image.width=e.width,h.image.height=e.height,h.mipmaps=e.mipmaps;1===e.mipmapCount&&(h.minFilter=Ct),h.format=e.format,h.needsUpdate=!0,i&&i(h)}),e,t);return h}});class rD extends eD{constructor(A){super(A)}load(A,i,e,t){void 0!==this.path&&(A=this.path+A),A=this.manager.resolveURL(A);const C=this,n=$g.get(A);if(void 0!==n)return C.manager.itemStart(A),setTimeout((function(){i&&i(n),C.manager.itemEnd(A)}),0),n;const h=document.createElementNS("http://www.w3.org/1999/xhtml","img");function r(){h.removeEventListener("load",r,!1),h.removeEventListener("error",E,!1),$g.add(A,this),i&&i(this),C.manager.itemEnd(A)}function E(i){h.removeEventListener("load",r,!1),h.removeEventListener("error",E,!1),t&&t(i),C.manager.itemError(A),C.manager.itemEnd(A)}return h.addEventListener("load",r,!1),h.addEventListener("error",E,!1),"data:"!==A.substr(0,5)&&void 0!==this.crossOrigin&&(h.crossOrigin=this.crossOrigin),C.manager.itemStart(A),h.src=A,h}}class ED extends eD{constructor(A){super(A)}load(A,i,e,t){const C=new CE,n=new rD(this.manager);n.setCrossOrigin(this.crossOrigin),n.setPath(this.path);let h=0;function r(e){n.load(A[e],(function(A){C.images[e]=A,h++,6===h&&(C.needsUpdate=!0,i&&i(C))}),void 0,t)}for(let i=0;i<A.length;++i)r(i);return C}}function lD(A){eD.call(this,A)}function oD(A){eD.call(this,A)}function kD(){this.type="Curve",this.arcLengthDivisions=200}lD.prototype=Object.assign(Object.create(eD.prototype),{constructor:lD,load:function(A,i,e,t){const C=this,n=new hE,h=new CD(this.manager);return h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setPath(this.path),h.setWithCredentials(C.withCredentials),h.load(A,(function(A){const e=C.parse(A);e&&(void 0!==e.image?n.image=e.image:void 0!==e.data&&(n.image.width=e.width,n.image.height=e.height,n.image.data=e.data),n.wrapS=void 0!==e.wrapS?e.wrapS:Ze,n.wrapT=void 0!==e.wrapT?e.wrapT:Ze,n.magFilter=void 0!==e.magFilter?e.magFilter:Ct,n.minFilter=void 0!==e.minFilter?e.minFilter:Ct,n.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(n.encoding=e.encoding),void 0!==e.flipY&&(n.flipY=e.flipY),void 0!==e.format&&(n.format=e.format),void 0!==e.type&&(n.type=e.type),void 0!==e.mipmaps&&(n.mipmaps=e.mipmaps,n.minFilter=rt),1===e.mipmapCount&&(n.minFilter=Ct),n.needsUpdate=!0,i&&i(n,e))}),e,t),n}}),oD.prototype=Object.assign(Object.create(eD.prototype),{constructor:oD,load:function(A,i,e,t){const C=new bn,n=new rD(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setPath(this.path),n.load(A,(function(e){C.image=e;const t=A.search(/\.jpe?g($|\?)/i)>0||0===A.search(/^data\:image\/jpeg/);C.format=t?Gt:dt,C.needsUpdate=!0,void 0!==i&&i(C)}),e,t),C}}),Object.assign(kD.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(A,i){const e=this.getUtoTmapping(A);return this.getPoint(e,i)},getPoints:function(A=5){const i=[];for(let e=0;e<=A;e++)i.push(this.getPoint(e/A));return i},getSpacedPoints:function(A=5){const i=[];for(let e=0;e<=A;e++)i.push(this.getPointAt(e/A));return i},getLength:function(){const A=this.getLengths();return A[A.length-1]},getLengths:function(A){if(void 0===A&&(A=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===A+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const i=[];let e,t=this.getPoint(0),C=0;i.push(0);for(let n=1;n<=A;n++)e=this.getPoint(n/A),C+=e.distanceTo(t),i.push(C),t=e;return this.cacheArcLengths=i,i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(A,i){const e=this.getLengths();let t=0;const C=e.length;let n;n=i||A*e[C-1];let h,r=0,E=C-1;for(;r<=E;)if(t=Math.floor(r+(E-r)/2),h=e[t]-n,h<0)r=t+1;else{if(!(h>0)){E=t;break}E=t-1}if(t=E,e[t]===n)return t/(C-1);const l=e[t];return(t+(n-l)/(e[t+1]-l))/(C-1)},getTangent:function(A,i){let e=A-1e-4,t=A+1e-4;e<0&&(e=0),t>1&&(t=1);const C=this.getPoint(e),n=this.getPoint(t),h=i||(C.isVector2?new pn:new Ln);return h.copy(n).sub(C).normalize(),h},getTangentAt:function(A,i){const e=this.getUtoTmapping(A);return this.getTangent(e,i)},computeFrenetFrames:function(A,i){const e=new Ln,t=[],C=[],n=[],h=new Ln,r=new oh;for(let i=0;i<=A;i++){const e=i/A;t[i]=this.getTangentAt(e,new Ln),t[i].normalize()}C[0]=new Ln,n[0]=new Ln;let E=Number.MAX_VALUE;const l=Math.abs(t[0].x),o=Math.abs(t[0].y),k=Math.abs(t[0].z);l<=E&&(E=l,e.set(1,0,0)),o<=E&&(E=o,e.set(0,1,0)),k<=E&&e.set(0,0,1),h.crossVectors(t[0],e).normalize(),C[0].crossVectors(t[0],h),n[0].crossVectors(t[0],C[0]);for(let i=1;i<=A;i++){if(C[i]=C[i-1].clone(),n[i]=n[i-1].clone(),h.crossVectors(t[i-1],t[i]),h.length()>Number.EPSILON){h.normalize();const A=Math.acos(fn.clamp(t[i-1].dot(t[i]),-1,1));C[i].applyMatrix4(r.makeRotationAxis(h,A))}n[i].crossVectors(t[i],C[i])}if(!0===i){let i=Math.acos(fn.clamp(C[0].dot(C[A]),-1,1));i/=A,t[0].dot(h.crossVectors(C[0],C[A]))>0&&(i=-i);for(let e=1;e<=A;e++)C[e].applyMatrix4(r.makeRotationAxis(t[e],i*e)),n[e].crossVectors(t[e],C[e])}return{tangents:t,normals:C,binormals:n}},clone:function(){return(new this.constructor).copy(this)},copy:function(A){return this.arcLengthDivisions=A.arcLengthDivisions,this},toJSON:function(){const A={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return A.arcLengthDivisions=this.arcLengthDivisions,A.type=this.type,A},fromJSON:function(A){return this.arcLengthDivisions=A.arcLengthDivisions,this}});class gD extends kD{constructor(A=0,i=0,e=1,t=1,C=0,n=2*Math.PI,h=!1,r=0){super(),this.type="EllipseCurve",this.aX=A,this.aY=i,this.xRadius=e,this.yRadius=t,this.aStartAngle=C,this.aEndAngle=n,this.aClockwise=h,this.aRotation=r}getPoint(A,i){const e=i||new pn,t=2*Math.PI;let C=this.aEndAngle-this.aStartAngle;const n=Math.abs(C)<Number.EPSILON;for(;C<0;)C+=t;for(;C>t;)C-=t;C<Number.EPSILON&&(C=n?0:t),!0!==this.aClockwise||n||(C===t?C=-t:C-=t);const h=this.aStartAngle+A*C;let r=this.aX+this.xRadius*Math.cos(h),E=this.aY+this.yRadius*Math.sin(h);if(0!==this.aRotation){const A=Math.cos(this.aRotation),i=Math.sin(this.aRotation),e=r-this.aX,t=E-this.aY;r=e*A-t*i+this.aX,E=e*i+t*A+this.aY}return e.set(r,E)}copy(A){return super.copy(A),this.aX=A.aX,this.aY=A.aY,this.xRadius=A.xRadius,this.yRadius=A.yRadius,this.aStartAngle=A.aStartAngle,this.aEndAngle=A.aEndAngle,this.aClockwise=A.aClockwise,this.aRotation=A.aRotation,this}toJSON(){const A=super.toJSON();return A.aX=this.aX,A.aY=this.aY,A.xRadius=this.xRadius,A.yRadius=this.yRadius,A.aStartAngle=this.aStartAngle,A.aEndAngle=this.aEndAngle,A.aClockwise=this.aClockwise,A.aRotation=this.aRotation,A}fromJSON(A){return super.fromJSON(A),this.aX=A.aX,this.aY=A.aY,this.xRadius=A.xRadius,this.yRadius=A.yRadius,this.aStartAngle=A.aStartAngle,this.aEndAngle=A.aEndAngle,this.aClockwise=A.aClockwise,this.aRotation=A.aRotation,this}}gD.prototype.isEllipseCurve=!0;class DD extends gD{constructor(A,i,e,t,C,n){super(A,i,e,e,t,C,n),this.type="ArcCurve"}}function aD(){let A=0,i=0,e=0,t=0;function C(C,n,h,r){A=C,i=h,e=-3*C+3*n-2*h-r,t=2*C-2*n+h+r}return{initCatmullRom:function(A,i,e,t,n){C(i,e,n*(e-A),n*(t-i))},initNonuniformCatmullRom:function(A,i,e,t,n,h,r){let E=(i-A)/n-(e-A)/(n+h)+(e-i)/h,l=(e-i)/h-(t-i)/(h+r)+(t-e)/r;E*=h,l*=h,C(i,e,E,l)},calc:function(C){const n=C*C;return A+i*C+e*n+t*(n*C)}}}DD.prototype.isArcCurve=!0;const sD=new Ln,BD=new aD,jD=new aD,mD=new aD;class cD extends kD{constructor(A=[],i=!1,e="centripetal",t=.5){super(),this.type="CatmullRomCurve3",this.points=A,this.closed=i,this.curveType=e,this.tension=t}getPoint(A,i=new Ln){const e=i,t=this.points,C=t.length,n=(C-(this.closed?0:1))*A;let h,r,E=Math.floor(n),l=n-E;this.closed?E+=E>0?0:(Math.floor(Math.abs(E)/C)+1)*C:0===l&&E===C-1&&(E=C-2,l=1),this.closed||E>0?h=t[(E-1)%C]:(sD.subVectors(t[0],t[1]).add(t[0]),h=sD);const o=t[E%C],k=t[(E+1)%C];if(this.closed||E+2<C?r=t[(E+2)%C]:(sD.subVectors(t[C-1],t[C-2]).add(t[C-1]),r=sD),"centripetal"===this.curveType||"chordal"===this.curveType){const A="chordal"===this.curveType?.5:.25;let i=Math.pow(h.distanceToSquared(o),A),e=Math.pow(o.distanceToSquared(k),A),t=Math.pow(k.distanceToSquared(r),A);e<1e-4&&(e=1),i<1e-4&&(i=e),t<1e-4&&(t=e),BD.initNonuniformCatmullRom(h.x,o.x,k.x,r.x,i,e,t),jD.initNonuniformCatmullRom(h.y,o.y,k.y,r.y,i,e,t),mD.initNonuniformCatmullRom(h.z,o.z,k.z,r.z,i,e,t)}else"catmullrom"===this.curveType&&(BD.initCatmullRom(h.x,o.x,k.x,r.x,this.tension),jD.initCatmullRom(h.y,o.y,k.y,r.y,this.tension),mD.initCatmullRom(h.z,o.z,k.z,r.z,this.tension));return e.set(BD.calc(l),jD.calc(l),mD.calc(l)),e}copy(A){super.copy(A),this.points=[];for(let i=0,e=A.points.length;i<e;i++){const e=A.points[i];this.points.push(e.clone())}return this.closed=A.closed,this.curveType=A.curveType,this.tension=A.tension,this}toJSON(){const A=super.toJSON();A.points=[];for(let i=0,e=this.points.length;i<e;i++){const e=this.points[i];A.points.push(e.toArray())}return A.closed=this.closed,A.curveType=this.curveType,A.tension=this.tension,A}fromJSON(A){super.fromJSON(A),this.points=[];for(let i=0,e=A.points.length;i<e;i++){const e=A.points[i];this.points.push((new Ln).fromArray(e))}return this.closed=A.closed,this.curveType=A.curveType,this.tension=A.tension,this}}function uD(A,i,e,t,C){const n=.5*(t-i),h=.5*(C-e),r=A*A;return(2*e-2*t+n+h)*(A*r)+(-3*e+3*t-2*n-h)*r+n*A+e}function FD(A,i,e,t){return function(A,i){const e=1-A;return e*e*i}(A,i)+function(A,i){return 2*(1-A)*A*i}(A,e)+function(A,i){return A*A*i}(A,t)}function GD(A,i,e,t,C){return function(A,i){const e=1-A;return e*e*e*i}(A,i)+function(A,i){const e=1-A;return 3*e*e*A*i}(A,e)+function(A,i){return 3*(1-A)*A*A*i}(A,t)+function(A,i){return A*A*A*i}(A,C)}cD.prototype.isCatmullRomCurve3=!0;class dD extends kD{constructor(A=new pn,i=new pn,e=new pn,t=new pn){super(),this.type="CubicBezierCurve",this.v0=A,this.v1=i,this.v2=e,this.v3=t}getPoint(A,i=new pn){const e=i,t=this.v0,C=this.v1,n=this.v2,h=this.v3;return e.set(GD(A,t.x,C.x,n.x,h.x),GD(A,t.y,C.y,n.y,h.y)),e}copy(A){return super.copy(A),this.v0.copy(A.v0),this.v1.copy(A.v1),this.v2.copy(A.v2),this.v3.copy(A.v3),this}toJSON(){const A=super.toJSON();return A.v0=this.v0.toArray(),A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A.v3=this.v3.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v0.fromArray(A.v0),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this.v3.fromArray(A.v3),this}}dD.prototype.isCubicBezierCurve=!0;class fD extends kD{constructor(A=new Ln,i=new Ln,e=new Ln,t=new Ln){super(),this.type="CubicBezierCurve3",this.v0=A,this.v1=i,this.v2=e,this.v3=t}getPoint(A,i=new Ln){const e=i,t=this.v0,C=this.v1,n=this.v2,h=this.v3;return e.set(GD(A,t.x,C.x,n.x,h.x),GD(A,t.y,C.y,n.y,h.y),GD(A,t.z,C.z,n.z,h.z)),e}copy(A){return super.copy(A),this.v0.copy(A.v0),this.v1.copy(A.v1),this.v2.copy(A.v2),this.v3.copy(A.v3),this}toJSON(){const A=super.toJSON();return A.v0=this.v0.toArray(),A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A.v3=this.v3.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v0.fromArray(A.v0),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this.v3.fromArray(A.v3),this}}fD.prototype.isCubicBezierCurve3=!0;class pD extends kD{constructor(A=new pn,i=new pn){super(),this.type="LineCurve",this.v1=A,this.v2=i}getPoint(A,i=new pn){const e=i;return 1===A?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(A).add(this.v1)),e}getPointAt(A,i){return this.getPoint(A,i)}getTangent(A,i){const e=i||new pn;return e.copy(this.v2).sub(this.v1).normalize(),e}copy(A){return super.copy(A),this.v1.copy(A.v1),this.v2.copy(A.v2),this}toJSON(){const A=super.toJSON();return A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this}}pD.prototype.isLineCurve=!0;class vD extends kD{constructor(A=new Ln,i=new Ln){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=A,this.v2=i}getPoint(A,i=new Ln){const e=i;return 1===A?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(A).add(this.v1)),e}getPointAt(A,i){return this.getPoint(A,i)}copy(A){return super.copy(A),this.v1.copy(A.v1),this.v2.copy(A.v2),this}toJSON(){const A=super.toJSON();return A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this}}class HD extends kD{constructor(A=new pn,i=new pn,e=new pn){super(),this.type="QuadraticBezierCurve",this.v0=A,this.v1=i,this.v2=e}getPoint(A,i=new pn){const e=i,t=this.v0,C=this.v1,n=this.v2;return e.set(FD(A,t.x,C.x,n.x),FD(A,t.y,C.y,n.y)),e}copy(A){return super.copy(A),this.v0.copy(A.v0),this.v1.copy(A.v1),this.v2.copy(A.v2),this}toJSON(){const A=super.toJSON();return A.v0=this.v0.toArray(),A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v0.fromArray(A.v0),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this}}HD.prototype.isQuadraticBezierCurve=!0;class ID extends kD{constructor(A=new Ln,i=new Ln,e=new Ln){super(),this.type="QuadraticBezierCurve3",this.v0=A,this.v1=i,this.v2=e}getPoint(A,i=new Ln){const e=i,t=this.v0,C=this.v1,n=this.v2;return e.set(FD(A,t.x,C.x,n.x),FD(A,t.y,C.y,n.y),FD(A,t.z,C.z,n.z)),e}copy(A){return super.copy(A),this.v0.copy(A.v0),this.v1.copy(A.v1),this.v2.copy(A.v2),this}toJSON(){const A=super.toJSON();return A.v0=this.v0.toArray(),A.v1=this.v1.toArray(),A.v2=this.v2.toArray(),A}fromJSON(A){return super.fromJSON(A),this.v0.fromArray(A.v0),this.v1.fromArray(A.v1),this.v2.fromArray(A.v2),this}}ID.prototype.isQuadraticBezierCurve3=!0;class yD extends kD{constructor(A=[]){super(),this.type="SplineCurve",this.points=A}getPoint(A,i=new pn){const e=i,t=this.points,C=(t.length-1)*A,n=Math.floor(C),h=C-n,r=t[0===n?n:n-1],E=t[n],l=t[n>t.length-2?t.length-1:n+1],o=t[n>t.length-3?t.length-1:n+2];return e.set(uD(h,r.x,E.x,l.x,o.x),uD(h,r.y,E.y,l.y,o.y)),e}copy(A){super.copy(A),this.points=[];for(let i=0,e=A.points.length;i<e;i++){const e=A.points[i];this.points.push(e.clone())}return this}toJSON(){const A=super.toJSON();A.points=[];for(let i=0,e=this.points.length;i<e;i++){const e=this.points[i];A.points.push(e.toArray())}return A}fromJSON(A){super.fromJSON(A),this.points=[];for(let i=0,e=A.points.length;i<e;i++){const e=A.points[i];this.points.push((new pn).fromArray(e))}return this}}yD.prototype.isSplineCurve=!0;var bD=Object.freeze({__proto__:null,ArcCurve:DD,CatmullRomCurve3:cD,CubicBezierCurve:dD,CubicBezierCurve3:fD,EllipseCurve:gD,LineCurve:pD,LineCurve3:vD,QuadraticBezierCurve:HD,QuadraticBezierCurve3:ID,SplineCurve:yD});class MD extends kD{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(A){this.curves.push(A)}closePath(){const A=this.curves[0].getPoint(0),i=this.curves[this.curves.length-1].getPoint(1);A.equals(i)||this.curves.push(new pD(i,A))}getPoint(A){const i=A*this.getLength(),e=this.getCurveLengths();let t=0;for(;t<e.length;){if(e[t]>=i){const A=e[t]-i,C=this.curves[t],n=C.getLength(),h=0===n?0:1-A/n;return C.getPointAt(h)}t++}return null}getLength(){const A=this.getCurveLengths();return A[A.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const A=[];let i=0;for(let e=0,t=this.curves.length;e<t;e++)i+=this.curves[e].getLength(),A.push(i);return this.cacheLengths=A,A}getSpacedPoints(A=40){const i=[];for(let e=0;e<=A;e++)i.push(this.getPoint(e/A));return this.autoClose&&i.push(i[0]),i}getPoints(A=12){const i=[];let e;for(let t=0,C=this.curves;t<C.length;t++){const n=C[t],h=n&&n.isEllipseCurve?2*A:n&&(n.isLineCurve||n.isLineCurve3)?1:n&&n.isSplineCurve?A*n.points.length:A,r=n.getPoints(h);for(let A=0;A<r.length;A++){const t=r[A];e&&e.equals(t)||(i.push(t),e=t)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(A){super.copy(A),this.curves=[];for(let i=0,e=A.curves.length;i<e;i++){const e=A.curves[i];this.curves.push(e.clone())}return this.autoClose=A.autoClose,this}toJSON(){const A=super.toJSON();A.autoClose=this.autoClose,A.curves=[];for(let i=0,e=this.curves.length;i<e;i++){const e=this.curves[i];A.curves.push(e.toJSON())}return A}fromJSON(A){super.fromJSON(A),this.autoClose=A.autoClose,this.curves=[];for(let i=0,e=A.curves.length;i<e;i++){const e=A.curves[i];this.curves.push((new bD[e.type]).fromJSON(e))}return this}}class xD extends MD{constructor(A){super(),this.type="Path",this.currentPoint=new pn,A&&this.setFromPoints(A)}setFromPoints(A){this.moveTo(A[0].x,A[0].y);for(let i=1,e=A.length;i<e;i++)this.lineTo(A[i].x,A[i].y);return this}moveTo(A,i){return this.currentPoint.set(A,i),this}lineTo(A,i){const e=new pD(this.currentPoint.clone(),new pn(A,i));return this.curves.push(e),this.currentPoint.set(A,i),this}quadraticCurveTo(A,i,e,t){const C=new HD(this.currentPoint.clone(),new pn(A,i),new pn(e,t));return this.curves.push(C),this.currentPoint.set(e,t),this}bezierCurveTo(A,i,e,t,C,n){const h=new dD(this.currentPoint.clone(),new pn(A,i),new pn(e,t),new pn(C,n));return this.curves.push(h),this.currentPoint.set(C,n),this}splineThru(A){const i=[this.currentPoint.clone()].concat(A),e=new yD(i);return this.curves.push(e),this.currentPoint.copy(A[A.length-1]),this}arc(A,i,e,t,C,n){const h=this.currentPoint.x,r=this.currentPoint.y;return this.absarc(A+h,i+r,e,t,C,n),this}absarc(A,i,e,t,C,n){return this.absellipse(A,i,e,e,t,C,n),this}ellipse(A,i,e,t,C,n,h,r){const E=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(A+E,i+l,e,t,C,n,h,r),this}absellipse(A,i,e,t,C,n,h,r){const E=new gD(A,i,e,t,C,n,h,r);if(this.curves.length>0){const A=E.getPoint(0);A.equals(this.currentPoint)||this.lineTo(A.x,A.y)}this.curves.push(E);const l=E.getPoint(1);return this.currentPoint.copy(l),this}copy(A){return super.copy(A),this.currentPoint.copy(A.currentPoint),this}toJSON(){const A=super.toJSON();return A.currentPoint=this.currentPoint.toArray(),A}fromJSON(A){return super.fromJSON(A),this.currentPoint.fromArray(A.currentPoint),this}}class wD extends xD{constructor(A){super(A),this.uuid=fn.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(A){const i=[];for(let e=0,t=this.holes.length;e<t;e++)i[e]=this.holes[e].getPoints(A);return i}extractPoints(A){return{shape:this.getPoints(A),holes:this.getPointsHoles(A)}}copy(A){super.copy(A),this.holes=[];for(let i=0,e=A.holes.length;i<e;i++){const e=A.holes[i];this.holes.push(e.clone())}return this}toJSON(){const A=super.toJSON();A.uuid=this.uuid,A.holes=[];for(let i=0,e=this.holes.length;i<e;i++){const e=this.holes[i];A.holes.push(e.toJSON())}return A}fromJSON(A){super.fromJSON(A),this.uuid=A.uuid,this.holes=[];for(let i=0,e=A.holes.length;i<e;i++){const e=A.holes[i];this.holes.push((new xD).fromJSON(e))}return this}}class SD extends Th{constructor(A,i=1){super(),this.type="Light",this.color=new nr(A),this.intensity=i}copy(A){return super.copy(A),this.color.copy(A.color),this.intensity=A.intensity,this}toJSON(A){const i=super.toJSON(A);return i.object.color=this.color.getHex(),i.object.intensity=this.intensity,void 0!==this.groundColor&&(i.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(i.object.distance=this.distance),void 0!==this.angle&&(i.object.angle=this.angle),void 0!==this.decay&&(i.object.decay=this.decay),void 0!==this.penumbra&&(i.object.penumbra=this.penumbra),void 0!==this.shadow&&(i.object.shadow=this.shadow.toJSON()),i}}SD.prototype.isLight=!0;class TD extends SD{constructor(A,i,e){super(A,e),this.type="HemisphereLight",this.position.copy(Th.DefaultUp),this.updateMatrix(),this.groundColor=new nr(i)}copy(A){return SD.prototype.copy.call(this,A),this.groundColor.copy(A.groundColor),this}}TD.prototype.isHemisphereLight=!0;const LD=new oh,RD=new Ln,PD=new Ln;class OD{constructor(A){this.camera=A,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new pn(512,512),this.map=null,this.mapPass=null,this.matrix=new oh,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new lE,this._frameExtents=new pn(1,1),this._viewportCount=1,this._viewports=[new xn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(A){const i=this.camera,e=this.matrix;RD.setFromMatrixPosition(A.matrixWorld),i.position.copy(RD),PD.setFromMatrixPosition(A.target.matrixWorld),i.lookAt(PD),i.updateMatrixWorld(),LD.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(LD),e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(i.projectionMatrix),e.multiply(i.matrixWorldInverse)}getViewport(A){return this._viewports[A]}getFrameExtents(){return this._frameExtents}copy(A){return this.camera=A.camera.clone(),this.bias=A.bias,this.radius=A.radius,this.mapSize.copy(A.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const A={};return 0!==this.bias&&(A.bias=this.bias),0!==this.normalBias&&(A.normalBias=this.normalBias),1!==this.radius&&(A.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(A.mapSize=this.mapSize.toArray()),A.camera=this.camera.toJSON(!1).object,delete A.camera.matrix,A}}class ND extends OD{constructor(){super(new eE(50,1,.5,500)),this.focus=1}updateMatrices(A){const i=this.camera,e=2*fn.RAD2DEG*A.angle*this.focus,t=this.mapSize.width/this.mapSize.height,C=A.distance||i.far;e===i.fov&&t===i.aspect&&C===i.far||(i.fov=e,i.aspect=t,i.far=C,i.updateProjectionMatrix()),super.updateMatrices(A)}}ND.prototype.isSpotLightShadow=!0;class JD extends SD{constructor(A,i,e=0,t=Math.PI/3,C=0,n=1){super(A,i),this.type="SpotLight",this.position.copy(Th.DefaultUp),this.updateMatrix(),this.target=new Th,this.distance=e,this.angle=t,this.penumbra=C,this.decay=n,this.shadow=new ND}get power(){return this.intensity*Math.PI}set power(A){this.intensity=A/Math.PI}copy(A){return super.copy(A),this.distance=A.distance,this.angle=A.angle,this.penumbra=A.penumbra,this.decay=A.decay,this.target=A.target.clone(),this.shadow=A.shadow.clone(),this}}JD.prototype.isSpotLight=!0;const KD=new oh,UD=new Ln,VD=new Ln;class WD extends OD{constructor(){super(new eE(90,1,.5,500)),this._frameExtents=new pn(4,2),this._viewportCount=6,this._viewports=[new xn(2,1,1,1),new xn(0,1,1,1),new xn(3,1,1,1),new xn(1,1,1,1),new xn(3,0,1,1),new xn(1,0,1,1)],this._cubeDirections=[new Ln(1,0,0),new Ln(-1,0,0),new Ln(0,0,1),new Ln(0,0,-1),new Ln(0,1,0),new Ln(0,-1,0)],this._cubeUps=[new Ln(0,1,0),new Ln(0,1,0),new Ln(0,1,0),new Ln(0,1,0),new Ln(0,0,1),new Ln(0,0,-1)]}updateMatrices(A,i=0){const e=this.camera,t=this.matrix;UD.setFromMatrixPosition(A.matrixWorld),e.position.copy(UD),VD.copy(e.position),VD.add(this._cubeDirections[i]),e.up.copy(this._cubeUps[i]),e.lookAt(VD),e.updateMatrixWorld(),t.makeTranslation(-UD.x,-UD.y,-UD.z),KD.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(KD)}}WD.prototype.isPointLightShadow=!0;class zD extends SD{constructor(A,i,e=0,t=1){super(A,i),this.type="PointLight",this.distance=e,this.decay=t,this.shadow=new WD}get power(){return 4*this.intensity*Math.PI}set power(A){this.intensity=A/(4*Math.PI)}copy(A){return super.copy(A),this.distance=A.distance,this.decay=A.decay,this.shadow=A.shadow.clone(),this}}zD.prototype.isPointLight=!0;class qD extends iE{constructor(A=-1,i=1,e=1,t=-1,C=.1,n=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=A,this.right=i,this.top=e,this.bottom=t,this.near=C,this.far=n,this.updateProjectionMatrix()}copy(A,i){return super.copy(A,i),this.left=A.left,this.right=A.right,this.top=A.top,this.bottom=A.bottom,this.near=A.near,this.far=A.far,this.zoom=A.zoom,this.view=null===A.view?null:Object.assign({},A.view),this}setViewOffset(A,i,e,t,C,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=A,this.view.fullHeight=i,this.view.offsetX=e,this.view.offsetY=t,this.view.width=C,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const A=(this.right-this.left)/(2*this.zoom),i=(this.top-this.bottom)/(2*this.zoom),e=(this.right+this.left)/2,t=(this.top+this.bottom)/2;let C=e-A,n=e+A,h=t+i,r=t-i;if(null!==this.view&&this.view.enabled){const A=(this.right-this.left)/this.view.fullWidth/this.zoom,i=(this.top-this.bottom)/this.view.fullHeight/this.zoom;C+=A*this.view.offsetX,n=C+A*this.view.width,h-=i*this.view.offsetY,r=h-i*this.view.height}this.projectionMatrix.makeOrthographic(C,n,h,r,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(A){const i=Th.prototype.toJSON.call(this,A);return i.object.zoom=this.zoom,i.object.left=this.left,i.object.right=this.right,i.object.top=this.top,i.object.bottom=this.bottom,i.object.near=this.near,i.object.far=this.far,null!==this.view&&(i.object.view=Object.assign({},this.view)),i}}qD.prototype.isOrthographicCamera=!0;class QD extends OD{constructor(){super(new qD(-5,5,5,-5,.5,500))}}QD.prototype.isDirectionalLightShadow=!0;class YD extends SD{constructor(A,i){super(A,i),this.type="DirectionalLight",this.position.copy(Th.DefaultUp),this.updateMatrix(),this.target=new Th,this.shadow=new QD}copy(A){return super.copy(A),this.target=A.target.clone(),this.shadow=A.shadow.clone(),this}}YD.prototype.isDirectionalLight=!0;class XD extends SD{constructor(A,i){super(A,i),this.type="AmbientLight"}}XD.prototype.isAmbientLight=!0;class ZD extends SD{constructor(A,i,e=10,t=10){super(A,i),this.type="RectAreaLight",this.width=e,this.height=t}copy(A){return super.copy(A),this.width=A.width,this.height=A.height,this}toJSON(A){const i=super.toJSON(A);return i.object.width=this.width,i.object.height=this.height,i}}ZD.prototype.isRectAreaLight=!0;class _D{constructor(){this.coefficients=[];for(let A=0;A<9;A++)this.coefficients.push(new Ln)}set(A){for(let i=0;i<9;i++)this.coefficients[i].copy(A[i]);return this}zero(){for(let A=0;A<9;A++)this.coefficients[A].set(0,0,0);return this}getAt(A,i){const e=A.x,t=A.y,C=A.z,n=this.coefficients;return i.copy(n[0]).multiplyScalar(.282095),i.addScaledVector(n[1],.488603*t),i.addScaledVector(n[2],.488603*C),i.addScaledVector(n[3],.488603*e),i.addScaledVector(n[4],e*t*1.092548),i.addScaledVector(n[5],t*C*1.092548),i.addScaledVector(n[6],.315392*(3*C*C-1)),i.addScaledVector(n[7],e*C*1.092548),i.addScaledVector(n[8],.546274*(e*e-t*t)),i}getIrradianceAt(A,i){const e=A.x,t=A.y,C=A.z,n=this.coefficients;return i.copy(n[0]).multiplyScalar(.886227),i.addScaledVector(n[1],1.023328*t),i.addScaledVector(n[2],1.023328*C),i.addScaledVector(n[3],1.023328*e),i.addScaledVector(n[4],.858086*e*t),i.addScaledVector(n[5],.858086*t*C),i.addScaledVector(n[6],.743125*C*C-.247708),i.addScaledVector(n[7],.858086*e*C),i.addScaledVector(n[8],.429043*(e*e-t*t)),i}add(A){for(let i=0;i<9;i++)this.coefficients[i].add(A.coefficients[i]);return this}addScaledSH(A,i){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(A.coefficients[e],i);return this}scale(A){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(A);return this}lerp(A,i){for(let e=0;e<9;e++)this.coefficients[e].lerp(A.coefficients[e],i);return this}equals(A){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(A.coefficients[i]))return!1;return!0}copy(A){return this.set(A.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(A,i=0){const e=this.coefficients;for(let t=0;t<9;t++)e[t].fromArray(A,i+3*t);return this}toArray(A=[],i=0){const e=this.coefficients;for(let t=0;t<9;t++)e[t].toArray(A,i+3*t);return A}static getBasisAt(A,i){const e=A.x,t=A.y,C=A.z;i[0]=.282095,i[1]=.488603*t,i[2]=.488603*C,i[3]=.488603*e,i[4]=1.092548*e*t,i[5]=1.092548*t*C,i[6]=.315392*(3*C*C-1),i[7]=1.092548*e*C,i[8]=.546274*(e*e-t*t)}}_D.prototype.isSphericalHarmonics3=!0;class $D extends SD{constructor(A=new _D,i=1){super(void 0,i),this.sh=A}copy(A){return super.copy(A),this.sh.copy(A.sh),this}fromJSON(A){return this.intensity=A.intensity,this.sh.fromArray(A.sh),this}toJSON(A){const i=super.toJSON(A);return i.object.sh=this.sh.toArray(),i}}$D.prototype.isLightProbe=!0;class Aa extends eD{constructor(A){super(A),this.textures={}}load(A,i,e,t){const C=this,n=new CD(C.manager);n.setPath(C.path),n.setRequestHeader(C.requestHeader),n.setWithCredentials(C.withCredentials),n.load(A,(function(e){try{i(C.parse(JSON.parse(e)))}catch(i){t?t(i):console.error(i),C.manager.itemError(A)}}),e,t)}parse(A){const i=this.textures;function e(A){return void 0===i[A]&&console.warn("THREE.MaterialLoader: Undefined texture",A),i[A]}const t=new Rg[A.type];if(void 0!==A.uuid&&(t.uuid=A.uuid),void 0!==A.name&&(t.name=A.name),void 0!==A.color&&void 0!==t.color&&t.color.setHex(A.color),void 0!==A.roughness&&(t.roughness=A.roughness),void 0!==A.metalness&&(t.metalness=A.metalness),void 0!==A.sheen&&(t.sheen=(new nr).setHex(A.sheen)),void 0!==A.emissive&&void 0!==t.emissive&&t.emissive.setHex(A.emissive),void 0!==A.specular&&void 0!==t.specular&&t.specular.setHex(A.specular),void 0!==A.shininess&&(t.shininess=A.shininess),void 0!==A.clearcoat&&(t.clearcoat=A.clearcoat),void 0!==A.clearcoatRoughness&&(t.clearcoatRoughness=A.clearcoatRoughness),void 0!==A.fog&&(t.fog=A.fog),void 0!==A.flatShading&&(t.flatShading=A.flatShading),void 0!==A.blending&&(t.blending=A.blending),void 0!==A.combine&&(t.combine=A.combine),void 0!==A.side&&(t.side=A.side),void 0!==A.opacity&&(t.opacity=A.opacity),void 0!==A.transparent&&(t.transparent=A.transparent),void 0!==A.alphaTest&&(t.alphaTest=A.alphaTest),void 0!==A.depthTest&&(t.depthTest=A.depthTest),void 0!==A.depthWrite&&(t.depthWrite=A.depthWrite),void 0!==A.colorWrite&&(t.colorWrite=A.colorWrite),void 0!==A.stencilWrite&&(t.stencilWrite=A.stencilWrite),void 0!==A.stencilWriteMask&&(t.stencilWriteMask=A.stencilWriteMask),void 0!==A.stencilFunc&&(t.stencilFunc=A.stencilFunc),void 0!==A.stencilRef&&(t.stencilRef=A.stencilRef),void 0!==A.stencilFuncMask&&(t.stencilFuncMask=A.stencilFuncMask),void 0!==A.stencilFail&&(t.stencilFail=A.stencilFail),void 0!==A.stencilZFail&&(t.stencilZFail=A.stencilZFail),void 0!==A.stencilZPass&&(t.stencilZPass=A.stencilZPass),void 0!==A.wireframe&&(t.wireframe=A.wireframe),void 0!==A.wireframeLinewidth&&(t.wireframeLinewidth=A.wireframeLinewidth),void 0!==A.wireframeLinecap&&(t.wireframeLinecap=A.wireframeLinecap),void 0!==A.wireframeLinejoin&&(t.wireframeLinejoin=A.wireframeLinejoin),void 0!==A.rotation&&(t.rotation=A.rotation),1!==A.linewidth&&(t.linewidth=A.linewidth),void 0!==A.dashSize&&(t.dashSize=A.dashSize),void 0!==A.gapSize&&(t.gapSize=A.gapSize),void 0!==A.scale&&(t.scale=A.scale),void 0!==A.polygonOffset&&(t.polygonOffset=A.polygonOffset),void 0!==A.polygonOffsetFactor&&(t.polygonOffsetFactor=A.polygonOffsetFactor),void 0!==A.polygonOffsetUnits&&(t.polygonOffsetUnits=A.polygonOffsetUnits),void 0!==A.skinning&&(t.skinning=A.skinning),void 0!==A.morphTargets&&(t.morphTargets=A.morphTargets),void 0!==A.morphNormals&&(t.morphNormals=A.morphNormals),void 0!==A.dithering&&(t.dithering=A.dithering),void 0!==A.vertexTangents&&(t.vertexTangents=A.vertexTangents),void 0!==A.visible&&(t.visible=A.visible),void 0!==A.toneMapped&&(t.toneMapped=A.toneMapped),void 0!==A.userData&&(t.userData=A.userData),void 0!==A.vertexColors&&("number"==typeof A.vertexColors?t.vertexColors=A.vertexColors>0:t.vertexColors=A.vertexColors),void 0!==A.uniforms)for(const i in A.uniforms){const C=A.uniforms[i];switch(t.uniforms[i]={},C.type){case"t":t.uniforms[i].value=e(C.value);break;case"c":t.uniforms[i].value=(new nr).setHex(C.value);break;case"v2":t.uniforms[i].value=(new pn).fromArray(C.value);break;case"v3":t.uniforms[i].value=(new Ln).fromArray(C.value);break;case"v4":t.uniforms[i].value=(new xn).fromArray(C.value);break;case"m3":t.uniforms[i].value=(new vn).fromArray(C.value);break;case"m4":t.uniforms[i].value=(new oh).fromArray(C.value);break;default:t.uniforms[i].value=C.value}}if(void 0!==A.defines&&(t.defines=A.defines),void 0!==A.vertexShader&&(t.vertexShader=A.vertexShader),void 0!==A.fragmentShader&&(t.fragmentShader=A.fragmentShader),void 0!==A.extensions)for(const i in A.extensions)t.extensions[i]=A.extensions[i];if(void 0!==A.shading&&(t.flatShading=1===A.shading),void 0!==A.size&&(t.size=A.size),void 0!==A.sizeAttenuation&&(t.sizeAttenuation=A.sizeAttenuation),void 0!==A.map&&(t.map=e(A.map)),void 0!==A.matcap&&(t.matcap=e(A.matcap)),void 0!==A.alphaMap&&(t.alphaMap=e(A.alphaMap)),void 0!==A.bumpMap&&(t.bumpMap=e(A.bumpMap)),void 0!==A.bumpScale&&(t.bumpScale=A.bumpScale),void 0!==A.normalMap&&(t.normalMap=e(A.normalMap)),void 0!==A.normalMapType&&(t.normalMapType=A.normalMapType),void 0!==A.normalScale){let i=A.normalScale;!1===Array.isArray(i)&&(i=[i,i]),t.normalScale=(new pn).fromArray(i)}return void 0!==A.displacementMap&&(t.displacementMap=e(A.displacementMap)),void 0!==A.displacementScale&&(t.displacementScale=A.displacementScale),void 0!==A.displacementBias&&(t.displacementBias=A.displacementBias),void 0!==A.roughnessMap&&(t.roughnessMap=e(A.roughnessMap)),void 0!==A.metalnessMap&&(t.metalnessMap=e(A.metalnessMap)),void 0!==A.emissiveMap&&(t.emissiveMap=e(A.emissiveMap)),void 0!==A.emissiveIntensity&&(t.emissiveIntensity=A.emissiveIntensity),void 0!==A.specularMap&&(t.specularMap=e(A.specularMap)),void 0!==A.envMap&&(t.envMap=e(A.envMap)),void 0!==A.envMapIntensity&&(t.envMapIntensity=A.envMapIntensity),void 0!==A.reflectivity&&(t.reflectivity=A.reflectivity),void 0!==A.refractionRatio&&(t.refractionRatio=A.refractionRatio),void 0!==A.lightMap&&(t.lightMap=e(A.lightMap)),void 0!==A.lightMapIntensity&&(t.lightMapIntensity=A.lightMapIntensity),void 0!==A.aoMap&&(t.aoMap=e(A.aoMap)),void 0!==A.aoMapIntensity&&(t.aoMapIntensity=A.aoMapIntensity),void 0!==A.gradientMap&&(t.gradientMap=e(A.gradientMap)),void 0!==A.clearcoatMap&&(t.clearcoatMap=e(A.clearcoatMap)),void 0!==A.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap=e(A.clearcoatRoughnessMap)),void 0!==A.clearcoatNormalMap&&(t.clearcoatNormalMap=e(A.clearcoatNormalMap)),void 0!==A.clearcoatNormalScale&&(t.clearcoatNormalScale=(new pn).fromArray(A.clearcoatNormalScale)),void 0!==A.transmission&&(t.transmission=A.transmission),void 0!==A.transmissionMap&&(t.transmissionMap=e(A.transmissionMap)),t}setTextures(A){return this.textures=A,this}}const ia={decodeText:function(A){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(A);let i="";for(let e=0,t=A.length;e<t;e++)i+=String.fromCharCode(A[e]);try{return decodeURIComponent(escape(i))}catch(A){return i}},extractUrlBase:function(A){const i=A.lastIndexOf("/");return-1===i?"./":A.substr(0,i+1)}};function ea(){br.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function ta(A,i,e,t){"number"==typeof e&&(t=e,e=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),lr.call(this,A,i,e),this.meshPerAttribute=t||1}ea.prototype=Object.assign(Object.create(br.prototype),{constructor:ea,isInstancedBufferGeometry:!0,copy:function(A){return br.prototype.copy.call(this,A),this.instanceCount=A.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const A=br.prototype.toJSON.call(this);return A.instanceCount=this.instanceCount,A.isInstancedBufferGeometry=!0,A}}),ta.prototype=Object.assign(Object.create(lr.prototype),{constructor:ta,isInstancedBufferAttribute:!0,copy:function(A){return lr.prototype.copy.call(this,A),this.meshPerAttribute=A.meshPerAttribute,this},toJSON:function(){const A=lr.prototype.toJSON.call(this);return A.meshPerAttribute=this.meshPerAttribute,A.isInstancedBufferAttribute=!0,A}});class Ca extends eD{constructor(A){super(A)}load(A,i,e,t){const C=this,n=new CD(C.manager);n.setPath(C.path),n.setRequestHeader(C.requestHeader),n.setWithCredentials(C.withCredentials),n.load(A,(function(e){try{i(C.parse(JSON.parse(e)))}catch(i){t?t(i):console.error(i),C.manager.itemError(A)}}),e,t)}parse(A){const i={},e={};function t(A,t){if(void 0!==i[t])return i[t];const C=A.interleavedBuffers[t],n=function(A,i){if(void 0!==e[i])return e[i];const t=A.arrayBuffers[i],C=new Uint32Array(t).buffer;return e[i]=C,C}(A,C.buffer),h=new Fo(Gr(C.type,n),C.stride);return h.uuid=C.uuid,i[t]=h,h}const C=A.isInstancedBufferGeometry?new ea:new br,n=A.data.index;if(void 0!==n){const A=Gr(n.type,n.array);C.setIndex(new lr(A,1))}const h=A.data.attributes;for(const i in h){const e=h[i];let n;if(e.isInterleavedBufferAttribute){n=new fo(t(A.data,e.data),e.itemSize,e.offset,e.normalized)}else{const A=Gr(e.type,e.array);n=new(e.isInstancedBufferAttribute?ta:lr)(A,e.itemSize,e.normalized)}void 0!==e.name&&(n.name=e.name),C.setAttribute(i,n)}const r=A.data.morphAttributes;if(r)for(const i in r){const e=r[i],n=[];for(let i=0,C=e.length;i<C;i++){const C=e[i];let h;if(C.isInterleavedBufferAttribute){h=new fo(t(A.data,C.data),C.itemSize,C.offset,C.normalized)}else{h=new lr(Gr(C.type,C.array),C.itemSize,C.normalized)}void 0!==C.name&&(h.name=C.name),n.push(h)}C.morphAttributes[i]=n}A.data.morphTargetsRelative&&(C.morphTargetsRelative=!0);const E=A.data.groups||A.data.drawcalls||A.data.offsets;if(void 0!==E)for(let A=0,i=E.length;A!==i;++A){const i=E[A];C.addGroup(i.start,i.count,i.materialIndex)}const l=A.data.boundingSphere;if(void 0!==l){const A=new Ln;void 0!==l.center&&A.fromArray(l.center),C.boundingSphere=new ih(A,l.radius)}return A.name&&(C.name=A.name),A.userData&&(C.userData=A.userData),C}}class na extends eD{constructor(A){super(A)}load(A,i,e,t){const C=this,n=""===this.path?ia.extractUrlBase(A):this.path;this.resourcePath=this.resourcePath||n;const h=new CD(this.manager);h.setPath(this.path),h.setRequestHeader(this.requestHeader),h.setWithCredentials(this.withCredentials),h.load(A,(function(e){let n=null;try{n=JSON.parse(e)}catch(i){return void 0!==t&&t(i),void console.error("THREE:ObjectLoader: Can't parse "+A+".",i.message)}const h=n.metadata;void 0!==h&&void 0!==h.type&&"geometry"!==h.type.toLowerCase()?C.parse(n,i):console.error("THREE.ObjectLoader: Can't load "+A)}),e,t)}parse(A,i){const e=this.parseAnimations(A.animations),t=this.parseShapes(A.shapes),C=this.parseGeometries(A.geometries,t),n=this.parseImages(A.images,(function(){void 0!==i&&i(E)})),h=this.parseTextures(A.textures,n),r=this.parseMaterials(A.materials,h),E=this.parseObject(A.object,C,r,e),l=this.parseSkeletons(A.skeletons,E);if(this.bindSkeletons(E,l),void 0!==i){let A=!1;for(const i in n)if(n[i]instanceof HTMLImageElement){A=!0;break}!1===A&&i(E)}return E}parseShapes(A){const i={};if(void 0!==A)for(let e=0,t=A.length;e<t;e++){const t=(new wD).fromJSON(A[e]);i[t.uuid]=t}return i}parseSkeletons(A,i){const e={},t={};if(i.traverse((function(A){A.isBone&&(t[A.uuid]=A)})),void 0!==A)for(let i=0,C=A.length;i<C;i++){const C=(new $o).fromJSON(A[i],t);e[C.uuid]=C}return e}parseGeometries(A,i){const e={};let t;if(void 0!==A){const C=new Ca;for(let n=0,h=A.length;n<h;n++){let h;const r=A[n];switch(r.type){case"PlaneGeometry":case"PlaneBufferGeometry":h=new vg[r.type](r.width,r.height,r.widthSegments,r.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":h=new vg[r.type](r.width,r.height,r.depth,r.widthSegments,r.heightSegments,r.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":h=new vg[r.type](r.radius,r.segments,r.thetaStart,r.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":h=new vg[r.type](r.radiusTop,r.radiusBottom,r.height,r.radialSegments,r.heightSegments,r.openEnded,r.thetaStart,r.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":h=new vg[r.type](r.radius,r.height,r.radialSegments,r.heightSegments,r.openEnded,r.thetaStart,r.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":h=new vg[r.type](r.radius,r.widthSegments,r.heightSegments,r.phiStart,r.phiLength,r.thetaStart,r.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":h=new vg[r.type](r.radius,r.detail);break;case"RingGeometry":case"RingBufferGeometry":h=new vg[r.type](r.innerRadius,r.outerRadius,r.thetaSegments,r.phiSegments,r.thetaStart,r.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":h=new vg[r.type](r.radius,r.tube,r.radialSegments,r.tubularSegments,r.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":h=new vg[r.type](r.radius,r.tube,r.tubularSegments,r.radialSegments,r.p,r.q);break;case"TubeGeometry":case"TubeBufferGeometry":h=new vg[r.type]((new bD[r.path.type]).fromJSON(r.path),r.tubularSegments,r.radius,r.radialSegments,r.closed);break;case"LatheGeometry":case"LatheBufferGeometry":h=new vg[r.type](r.points,r.segments,r.phiStart,r.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":h=new vg[r.type](r.vertices,r.indices,r.radius,r.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":t=[];for(let A=0,e=r.shapes.length;A<e;A++){const e=i[r.shapes[A]];t.push(e)}h=new vg[r.type](t,r.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":t=[];for(let A=0,e=r.shapes.length;A<e;A++){const e=i[r.shapes[A]];t.push(e)}const A=r.options.extrudePath;void 0!==A&&(r.options.extrudePath=(new bD[A.type]).fromJSON(A)),h=new vg[r.type](t,r.options);break;case"BufferGeometry":case"InstancedBufferGeometry":h=C.parse(r);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+r.type+'"');continue}h.uuid=r.uuid,void 0!==r.name&&(h.name=r.name),!0===h.isBufferGeometry&&void 0!==r.userData&&(h.userData=r.userData),e[r.uuid]=h}}return e}parseMaterials(A,i){const e={},t={};if(void 0!==A){const C=new Aa;C.setTextures(i);for(let i=0,n=A.length;i<n;i++){const n=A[i];if("MultiMaterial"===n.type){const A=[];for(let i=0;i<n.materials.length;i++){const t=n.materials[i];void 0===e[t.uuid]&&(e[t.uuid]=C.parse(t)),A.push(e[t.uuid])}t[n.uuid]=A}else void 0===e[n.uuid]&&(e[n.uuid]=C.parse(n)),t[n.uuid]=e[n.uuid]}}return t}parseAnimations(A){const i={};if(void 0!==A)for(let e=0;e<A.length;e++){const t=A[e],C=Zg.parse(t);i[C.uuid]=C}return i}parseImages(A,i){const e=this,t={};let C;function n(A){if("string"==typeof A){const i=A;return function(A){return e.manager.itemStart(A),C.load(A,(function(){e.manager.itemEnd(A)}),void 0,(function(){e.manager.itemError(A),e.manager.itemEnd(A)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:e.resourcePath+i)}return A.data?{data:Gr(A.type,A.data),width:A.width,height:A.height}:null}if(void 0!==A&&A.length>0){const e=new AD(i);C=new rD(e),C.setCrossOrigin(this.crossOrigin);for(let i=0,e=A.length;i<e;i++){const e=A[i],C=e.url;if(Array.isArray(C)){t[e.uuid]=[];for(let A=0,i=C.length;A<i;A++){const i=n(C[A]);null!==i&&(i instanceof HTMLImageElement?t[e.uuid].push(i):t[e.uuid].push(new hE(i.data,i.width,i.height)))}}else{const A=n(e.url);null!==A&&(t[e.uuid]=A)}}}return t}parseTextures(A,i){function e(A,i){return"number"==typeof A?A:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",A),i[A])}const t={};if(void 0!==A)for(let C=0,n=A.length;C<n;C++){const n=A[C];let h;void 0===n.image&&console.warn('THREE.ObjectLoader: No "image" specified for',n.uuid),void 0===i[n.image]&&console.warn("THREE.ObjectLoader: Undefined image",n.image);const r=i[n.image];Array.isArray(r)?(h=new CE(r),6===r.length&&(h.needsUpdate=!0)):(h=r&&r.data?new hE(r.data,r.width,r.height):new bn(r),r&&(h.needsUpdate=!0)),h.uuid=n.uuid,void 0!==n.name&&(h.name=n.name),void 0!==n.mapping&&(h.mapping=e(n.mapping,ha)),void 0!==n.offset&&h.offset.fromArray(n.offset),void 0!==n.repeat&&h.repeat.fromArray(n.repeat),void 0!==n.center&&h.center.fromArray(n.center),void 0!==n.rotation&&(h.rotation=n.rotation),void 0!==n.wrap&&(h.wrapS=e(n.wrap[0],ra),h.wrapT=e(n.wrap[1],ra)),void 0!==n.format&&(h.format=n.format),void 0!==n.type&&(h.type=n.type),void 0!==n.encoding&&(h.encoding=n.encoding),void 0!==n.minFilter&&(h.minFilter=e(n.minFilter,Ea)),void 0!==n.magFilter&&(h.magFilter=e(n.magFilter,Ea)),void 0!==n.anisotropy&&(h.anisotropy=n.anisotropy),void 0!==n.flipY&&(h.flipY=n.flipY),void 0!==n.premultiplyAlpha&&(h.premultiplyAlpha=n.premultiplyAlpha),void 0!==n.unpackAlignment&&(h.unpackAlignment=n.unpackAlignment),t[n.uuid]=h}return t}parseObject(A,i,e,t){let C,n,h;function r(A){return void 0===i[A]&&console.warn("THREE.ObjectLoader: Undefined geometry",A),i[A]}function E(A){if(void 0!==A){if(Array.isArray(A)){const i=[];for(let t=0,C=A.length;t<C;t++){const C=A[t];void 0===e[C]&&console.warn("THREE.ObjectLoader: Undefined material",C),i.push(e[C])}return i}return void 0===e[A]&&console.warn("THREE.ObjectLoader: Undefined material",A),e[A]}}switch(A.type){case"Scene":C=new uo,void 0!==A.background&&Number.isInteger(A.background)&&(C.background=new nr(A.background)),void 0!==A.fog&&("Fog"===A.fog.type?C.fog=new co(A.fog.color,A.fog.near,A.fog.far):"FogExp2"===A.fog.type&&(C.fog=new mo(A.fog.color,A.fog.density)));break;case"PerspectiveCamera":C=new eE(A.fov,A.aspect,A.near,A.far),void 0!==A.focus&&(C.focus=A.focus),void 0!==A.zoom&&(C.zoom=A.zoom),void 0!==A.filmGauge&&(C.filmGauge=A.filmGauge),void 0!==A.filmOffset&&(C.filmOffset=A.filmOffset),void 0!==A.view&&(C.view=Object.assign({},A.view));break;case"OrthographicCamera":C=new qD(A.left,A.right,A.top,A.bottom,A.near,A.far),void 0!==A.zoom&&(C.zoom=A.zoom),void 0!==A.view&&(C.view=Object.assign({},A.view));break;case"AmbientLight":C=new XD(A.color,A.intensity);break;case"DirectionalLight":C=new YD(A.color,A.intensity);break;case"PointLight":C=new zD(A.color,A.intensity,A.distance,A.decay);break;case"RectAreaLight":C=new ZD(A.color,A.intensity,A.width,A.height);break;case"SpotLight":C=new JD(A.color,A.intensity,A.distance,A.angle,A.penumbra,A.decay);break;case"HemisphereLight":C=new TD(A.color,A.groundColor,A.intensity);break;case"LightProbe":C=(new $D).fromJSON(A);break;case"SkinnedMesh":n=r(A.geometry),h=E(A.material),C=new Yo(n,h),void 0!==A.bindMode&&(C.bindMode=A.bindMode),void 0!==A.bindMatrix&&C.bindMatrix.fromArray(A.bindMatrix),void 0!==A.skeleton&&(C.skeleton=A.skeleton);break;case"Mesh":n=r(A.geometry),h=E(A.material),C=new Qr(n,h);break;case"InstancedMesh":n=r(A.geometry),h=E(A.material);const i=A.count,e=A.instanceMatrix;C=new Ck(n,h,i),C.instanceMatrix=new lr(new Float32Array(e.array),16);break;case"LOD":C=new Uo;break;case"Line":C=new kk(r(A.geometry),E(A.material));break;case"LineLoop":C=new sk(r(A.geometry),E(A.material));break;case"LineSegments":C=new ak(r(A.geometry),E(A.material));break;case"PointCloud":case"Points":C=new Fk(r(A.geometry),E(A.material));break;case"Sprite":C=new Oo(E(A.material));break;case"Group":C=new go;break;case"Bone":C=new Xo;break;default:C=new Th}if(C.uuid=A.uuid,void 0!==A.name&&(C.name=A.name),void 0!==A.matrix?(C.matrix.fromArray(A.matrix),void 0!==A.matrixAutoUpdate&&(C.matrixAutoUpdate=A.matrixAutoUpdate),C.matrixAutoUpdate&&C.matrix.decompose(C.position,C.quaternion,C.scale)):(void 0!==A.position&&C.position.fromArray(A.position),void 0!==A.rotation&&C.rotation.fromArray(A.rotation),void 0!==A.quaternion&&C.quaternion.fromArray(A.quaternion),void 0!==A.scale&&C.scale.fromArray(A.scale)),void 0!==A.castShadow&&(C.castShadow=A.castShadow),void 0!==A.receiveShadow&&(C.receiveShadow=A.receiveShadow),A.shadow&&(void 0!==A.shadow.bias&&(C.shadow.bias=A.shadow.bias),void 0!==A.shadow.normalBias&&(C.shadow.normalBias=A.shadow.normalBias),void 0!==A.shadow.radius&&(C.shadow.radius=A.shadow.radius),void 0!==A.shadow.mapSize&&C.shadow.mapSize.fromArray(A.shadow.mapSize),void 0!==A.shadow.camera&&(C.shadow.camera=this.parseObject(A.shadow.camera))),void 0!==A.visible&&(C.visible=A.visible),void 0!==A.frustumCulled&&(C.frustumCulled=A.frustumCulled),void 0!==A.renderOrder&&(C.renderOrder=A.renderOrder),void 0!==A.userData&&(C.userData=A.userData),void 0!==A.layers&&(C.layers.mask=A.layers),void 0!==A.children){const n=A.children;for(let A=0;A<n.length;A++)C.add(this.parseObject(n[A],i,e,t))}if(void 0!==A.animations){const i=A.animations;for(let A=0;A<i.length;A++){const e=i[A];C.animations.push(t[e])}}if("LOD"===A.type){void 0!==A.autoUpdate&&(C.autoUpdate=A.autoUpdate);const i=A.levels;for(let A=0;A<i.length;A++){const e=i[A],t=C.getObjectByProperty("uuid",e.object);void 0!==t&&C.addLevel(t,e.distance)}}return C}bindSkeletons(A,i){0!==Object.keys(i).length&&A.traverse((function(A){if(!0===A.isSkinnedMesh&&void 0!==A.skeleton){const e=i[A.skeleton];void 0===e?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",A.skeleton):A.bind(e,A.bindMatrix)}}))}setTexturePath(A){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(A)}}const ha={UVMapping:Ue,CubeReflectionMapping:Ve,CubeRefractionMapping:We,EquirectangularReflectionMapping:ze,EquirectangularRefractionMapping:qe,CubeUVReflectionMapping:Qe,CubeUVRefractionMapping:Ye},ra={RepeatWrapping:Xe,ClampToEdgeWrapping:Ze,MirroredRepeatWrapping:_e},Ea={NearestFilter:$e,NearestMipmapNearestFilter:At,NearestMipmapLinearFilter:et,LinearFilter:Ct,LinearMipmapNearestFilter:nt,LinearMipmapLinearFilter:rt};function la(A){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),eD.call(this,A),this.options={premultiplyAlpha:"none"}}la.prototype=Object.assign(Object.create(eD.prototype),{constructor:la,isImageBitmapLoader:!0,setOptions:function(A){return this.options=A,this},load:function(A,i,e,t){void 0===A&&(A=""),void 0!==this.path&&(A=this.path+A),A=this.manager.resolveURL(A);const C=this,n=$g.get(A);if(void 0!==n)return C.manager.itemStart(A),setTimeout((function(){i&&i(n),C.manager.itemEnd(A)}),0),n;const h={};h.credentials="anonymous"===this.crossOrigin?"same-origin":"include",h.headers=this.requestHeader,fetch(A,h).then((function(A){return A.blob()})).then((function(A){return createImageBitmap(A,Object.assign(C.options,{colorSpaceConversion:"none"}))})).then((function(e){$g.add(A,e),i&&i(e),C.manager.itemEnd(A)})).catch((function(i){t&&t(i),C.manager.itemError(A),C.manager.itemEnd(A)})),C.manager.itemStart(A)}});class oa{constructor(){this.type="ShapePath",this.color=new nr,this.subPaths=[],this.currentPath=null}moveTo(A,i){return this.currentPath=new xD,this.subPaths.push(this.currentPath),this.currentPath.moveTo(A,i),this}lineTo(A,i){return this.currentPath.lineTo(A,i),this}quadraticCurveTo(A,i,e,t){return this.currentPath.quadraticCurveTo(A,i,e,t),this}bezierCurveTo(A,i,e,t,C,n){return this.currentPath.bezierCurveTo(A,i,e,t,C,n),this}splineThru(A){return this.currentPath.splineThru(A),this}toShapes(A,i){function e(A){const i=[];for(let e=0,t=A.length;e<t;e++){const t=A[e],C=new wD;C.curves=t.curves,i.push(C)}return i}function t(A,i){const e=i.length;let t=!1;for(let C=e-1,n=0;n<e;C=n++){let e=i[C],h=i[n],r=h.x-e.x,E=h.y-e.y;if(Math.abs(E)>Number.EPSILON){if(E<0&&(e=i[n],r=-r,h=i[C],E=-E),A.y<e.y||A.y>h.y)continue;if(A.y===e.y){if(A.x===e.x)return!0}else{const i=E*(A.x-e.x)-r*(A.y-e.y);if(0===i)return!0;if(i<0)continue;t=!t}}else{if(A.y!==e.y)continue;if(h.x<=A.x&&A.x<=e.x||e.x<=A.x&&A.x<=h.x)return!0}}return t}const C=Eg.isClockWise,n=this.subPaths;if(0===n.length)return[];if(!0===i)return e(n);let h,r,E;const l=[];if(1===n.length)return r=n[0],E=new wD,E.curves=r.curves,l.push(E),l;let o=!C(n[0].getPoints());o=A?!o:o;const k=[],g=[];let D,a,s=[],B=0;g[B]=void 0,s[B]=[];for(let i=0,e=n.length;i<e;i++)r=n[i],D=r.getPoints(),h=C(D),h=A?!h:h,h?(!o&&g[B]&&B++,g[B]={s:new wD,p:D},g[B].s.curves=r.curves,o&&B++,s[B]=[]):s[B].push({h:r,p:D[0]});if(!g[0])return e(n);if(g.length>1){let A=!1;const i=[];for(let A=0,i=g.length;A<i;A++)k[A]=[];for(let e=0,C=g.length;e<C;e++){const C=s[e];for(let n=0;n<C.length;n++){const h=C[n];let r=!0;for(let C=0;C<g.length;C++)t(h.p,g[C].p)&&(e!==C&&i.push({froms:e,tos:C,hole:n}),r?(r=!1,k[C].push(h)):A=!0);r&&k[e].push(h)}}i.length>0&&(A||(s=k))}for(let A=0,i=g.length;A<i;A++){E=g[A].s,l.push(E),a=s[A];for(let A=0,i=a.length;A<i;A++)E.holes.push(a[A].h)}return l}}class ka{constructor(A){this.type="Font",this.data=A}generateShapes(A,i=100){const e=[],t=function(A,i,e){const t=Array.from(A),C=i/e.resolution,n=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*C,h=[];let r=0,E=0;for(let A=0;A<t.length;A++){const i=t[A];if("\n"===i)r=0,E-=n;else{const A=ga(i,C,r,E,e);r+=A.offsetX,h.push(A.path)}}return h}(A,i,this.data);for(let A=0,i=t.length;A<i;A++)Array.prototype.push.apply(e,t[A].toShapes());return e}}function ga(A,i,e,t,C){const n=C.glyphs[A]||C.glyphs["?"];if(!n)return void console.error('THREE.Font: character "'+A+'" does not exists in font family '+C.familyName+".");const h=new oa;let r,E,l,o,k,g,D,a;if(n.o){const A=n._cachedOutline||(n._cachedOutline=n.o.split(" "));for(let C=0,n=A.length;C<n;){switch(A[C++]){case"m":r=A[C++]*i+e,E=A[C++]*i+t,h.moveTo(r,E);break;case"l":r=A[C++]*i+e,E=A[C++]*i+t,h.lineTo(r,E);break;case"q":l=A[C++]*i+e,o=A[C++]*i+t,k=A[C++]*i+e,g=A[C++]*i+t,h.quadraticCurveTo(k,g,l,o);break;case"b":l=A[C++]*i+e,o=A[C++]*i+t,k=A[C++]*i+e,g=A[C++]*i+t,D=A[C++]*i+e,a=A[C++]*i+t,h.bezierCurveTo(k,g,D,a,l,o)}}}return{offsetX:n.ha*i,path:h}}ka.prototype.isFont=!0;class Da extends eD{constructor(A){super(A)}load(A,i,e,t){const C=this,n=new CD(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(C.withCredentials),n.load(A,(function(A){let e;try{e=JSON.parse(A)}catch(i){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),e=JSON.parse(A.substring(65,A.length-2))}const t=C.parse(e);i&&i(t)}),e,t)}parse(A){return new ka(A)}}let aa;const sa={getContext:function(){return void 0===aa&&(aa=new(window.AudioContext||window.webkitAudioContext)),aa},setContext:function(A){aa=A}};class Ba extends eD{constructor(A){super(A)}load(A,i,e,t){const C=this,n=new CD(this.manager);n.setResponseType("arraybuffer"),n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(A,(function(e){try{const A=e.slice(0);sa.getContext().decodeAudioData(A,(function(A){i(A)}))}catch(i){t?t(i):console.error(i),C.manager.itemError(A)}}),e,t)}}class ja extends $D{constructor(A,i,e=1){super(void 0,e);const t=(new nr).set(A),C=(new nr).set(i),n=new Ln(t.r,t.g,t.b),h=new Ln(C.r,C.g,C.b),r=Math.sqrt(Math.PI),E=r*Math.sqrt(.75);this.sh.coefficients[0].copy(n).add(h).multiplyScalar(r),this.sh.coefficients[1].copy(n).sub(h).multiplyScalar(E)}}ja.prototype.isHemisphereLightProbe=!0;class ma extends $D{constructor(A,i=1){super(void 0,i);const e=(new nr).set(A);this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}ma.prototype.isAmbientLightProbe=!0;const ca=new oh,ua=new oh;class Fa{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new eE,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new eE,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(A){const i=this._cache;if(i.focus!==A.focus||i.fov!==A.fov||i.aspect!==A.aspect*this.aspect||i.near!==A.near||i.far!==A.far||i.zoom!==A.zoom||i.eyeSep!==this.eyeSep){i.focus=A.focus,i.fov=A.fov,i.aspect=A.aspect*this.aspect,i.near=A.near,i.far=A.far,i.zoom=A.zoom,i.eyeSep=this.eyeSep;const e=A.projectionMatrix.clone(),t=i.eyeSep/2,C=t*i.near/i.focus,n=i.near*Math.tan(fn.DEG2RAD*i.fov*.5)/i.zoom;let h,r;ua.elements[12]=-t,ca.elements[12]=t,h=-n*i.aspect+C,r=n*i.aspect+C,e.elements[0]=2*i.near/(r-h),e.elements[8]=(r+h)/(r-h),this.cameraL.projectionMatrix.copy(e),h=-n*i.aspect-C,r=n*i.aspect-C,e.elements[0]=2*i.near/(r-h),e.elements[8]=(r+h)/(r-h),this.cameraR.projectionMatrix.copy(e)}this.cameraL.matrixWorld.copy(A.matrixWorld).multiply(ua),this.cameraR.matrixWorld.copy(A.matrixWorld).multiply(ca)}}class Ga{constructor(A){this.autoStart=void 0===A||A,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=da(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let A=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const i=da();A=(i-this.oldTime)/1e3,this.oldTime=i,this.elapsedTime+=A}return A}}function da(){return("undefined"==typeof performance?Date:performance).now()}const fa=new Ln,pa=new Tn,va=new Ln,Ha=new Ln;class Ia extends Th{constructor(){super(),this.type="AudioListener",this.context=sa.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ga}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(A){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=A,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(A){return this.gain.gain.setTargetAtTime(A,this.context.currentTime,.01),this}updateMatrixWorld(A){super.updateMatrixWorld(A);const i=this.context.listener,e=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(fa,pa,va),Ha.set(0,0,-1).applyQuaternion(pa),i.positionX){const A=this.context.currentTime+this.timeDelta;i.positionX.linearRampToValueAtTime(fa.x,A),i.positionY.linearRampToValueAtTime(fa.y,A),i.positionZ.linearRampToValueAtTime(fa.z,A),i.forwardX.linearRampToValueAtTime(Ha.x,A),i.forwardY.linearRampToValueAtTime(Ha.y,A),i.forwardZ.linearRampToValueAtTime(Ha.z,A),i.upX.linearRampToValueAtTime(e.x,A),i.upY.linearRampToValueAtTime(e.y,A),i.upZ.linearRampToValueAtTime(e.z,A)}else i.setPosition(fa.x,fa.y,fa.z),i.setOrientation(Ha.x,Ha.y,Ha.z,e.x,e.y,e.z)}}class ya extends Th{constructor(A){super(),this.type="Audio",this.listener=A,this.context=A.context,this.gain=this.context.createGain(),this.gain.connect(A.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(A){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=A,this.connect(),this}setMediaElementSource(A){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(A),this.connect(),this}setMediaStreamSource(A){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(A),this.connect(),this}setBuffer(A){return this.buffer=A,this.sourceType="buffer",this.autoplay&&this.play(),this}play(A=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+A;const i=this.context.createBufferSource();return i.buffer=this.buffer,i.loop=this.loop,i.loopStart=this.loopStart,i.loopEnd=this.loopEnd,i.onended=this.onEnded.bind(this),i.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=i,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let A=1,i=this.filters.length;A<i;A++)this.filters[A-1].connect(this.filters[A]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let A=1,i=this.filters.length;A<i;A++)this.filters[A-1].disconnect(this.filters[A]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(A){return A||(A=[]),!0===this._connected?(this.disconnect(),this.filters=A.slice(),this.connect()):this.filters=A.slice(),this}setDetune(A){if(this.detune=A,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(A){return this.setFilters(A?[A]:[])}setPlaybackRate(A){if(!1!==this.hasPlaybackControl)return this.playbackRate=A,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(A){if(!1!==this.hasPlaybackControl)return this.loop=A,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(A){return this.loopStart=A,this}setLoopEnd(A){return this.loopEnd=A,this}getVolume(){return this.gain.gain.value}setVolume(A){return this.gain.gain.setTargetAtTime(A,this.context.currentTime,.01),this}}const ba=new Ln,Ma=new Tn,xa=new Ln,wa=new Ln;class Sa extends ya{constructor(A){super(A),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(A){return this.panner.refDistance=A,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(A){return this.panner.rolloffFactor=A,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(A){return this.panner.distanceModel=A,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(A){return this.panner.maxDistance=A,this}setDirectionalCone(A,i,e){return this.panner.coneInnerAngle=A,this.panner.coneOuterAngle=i,this.panner.coneOuterGain=e,this}updateMatrixWorld(A){if(super.updateMatrixWorld(A),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(ba,Ma,xa),wa.set(0,0,1).applyQuaternion(Ma);const i=this.panner;if(i.positionX){const A=this.context.currentTime+this.listener.timeDelta;i.positionX.linearRampToValueAtTime(ba.x,A),i.positionY.linearRampToValueAtTime(ba.y,A),i.positionZ.linearRampToValueAtTime(ba.z,A),i.orientationX.linearRampToValueAtTime(wa.x,A),i.orientationY.linearRampToValueAtTime(wa.y,A),i.orientationZ.linearRampToValueAtTime(wa.z,A)}else i.setPosition(ba.x,ba.y,ba.z),i.setOrientation(wa.x,wa.y,wa.z)}}class Ta{constructor(A,i=2048){this.analyser=A.context.createAnalyser(),this.analyser.fftSize=i,this.data=new Uint8Array(this.analyser.frequencyBinCount),A.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let A=0;const i=this.getFrequencyData();for(let e=0;e<i.length;e++)A+=i[e];return A/i.length}}class La{constructor(A,i,e){let t,C,n;switch(this.binding=A,this.valueSize=e,i){case"quaternion":t=this._slerp,C=this._slerpAdditive,n=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*e),this._workIndex=5;break;case"string":case"bool":t=this._select,C=this._select,n=this._setAdditiveIdentityOther,this.buffer=new Array(5*e);break;default:t=this._lerp,C=this._lerpAdditive,n=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*e)}this._mixBufferRegion=t,this._mixBufferRegionAdditive=C,this._setIdentity=n,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(A,i){const e=this.buffer,t=this.valueSize,C=A*t+t;let n=this.cumulativeWeight;if(0===n){for(let A=0;A!==t;++A)e[C+A]=e[A];n=i}else{n+=i;const A=i/n;this._mixBufferRegion(e,C,0,A,t)}this.cumulativeWeight=n}accumulateAdditive(A){const i=this.buffer,e=this.valueSize,t=e*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(i,t,0,A,e),this.cumulativeWeightAdditive+=A}apply(A){const i=this.valueSize,e=this.buffer,t=A*i+i,C=this.cumulativeWeight,n=this.cumulativeWeightAdditive,h=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,C<1){const A=i*this._origIndex;this._mixBufferRegion(e,t,A,1-C,i)}n>0&&this._mixBufferRegionAdditive(e,t,this._addIndex*i,1,i);for(let A=i,C=i+i;A!==C;++A)if(e[A]!==e[A+i]){h.setValue(e,t);break}}saveOriginalState(){const A=this.binding,i=this.buffer,e=this.valueSize,t=e*this._origIndex;A.getValue(i,t);for(let A=e,C=t;A!==C;++A)i[A]=i[t+A%e];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const A=3*this.valueSize;this.binding.setValue(this.buffer,A)}_setAdditiveIdentityNumeric(){const A=this._addIndex*this.valueSize,i=A+this.valueSize;for(let e=A;e<i;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const A=this._origIndex*this.valueSize,i=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[i+e]=this.buffer[A+e]}_select(A,i,e,t,C){if(t>=.5)for(let t=0;t!==C;++t)A[i+t]=A[e+t]}_slerp(A,i,e,t){Tn.slerpFlat(A,i,A,i,A,e,t)}_slerpAdditive(A,i,e,t,C){const n=this._workIndex*C;Tn.multiplyQuaternionsFlat(A,n,A,i,A,e),Tn.slerpFlat(A,i,A,i,A,n,t)}_lerp(A,i,e,t,C){const n=1-t;for(let h=0;h!==C;++h){const C=i+h;A[C]=A[C]*n+A[e+h]*t}}_lerpAdditive(A,i,e,t,C){for(let n=0;n!==C;++n){const C=i+n;A[C]=A[C]+A[e+n]*t}}}const Ra=new RegExp("[\\[\\]\\.:\\/]","g"),Pa="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Oa=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Na=/(WCOD+)?/.source.replace("WCOD",Pa),Ja=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ka=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ua=new RegExp("^"+Oa+Na+Ja+Ka+"$"),Va=["material","materials","bones"];function Wa(A,i,e){const t=e||za.parseTrackName(i);this._targetGroup=A,this._bindings=A.subscribe_(i,t)}function za(A,i,e){this.path=i,this.parsedPath=e||za.parseTrackName(i),this.node=za.findNode(A,this.parsedPath.nodeName)||A,this.rootNode=A}Object.assign(Wa.prototype,{getValue:function(A,i){this.bind();const e=this._targetGroup.nCachedObjects_,t=this._bindings[e];void 0!==t&&t.getValue(A,i)},setValue:function(A,i){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,C=e.length;t!==C;++t)e[t].setValue(A,i)},bind:function(){const A=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=A.length;i!==e;++i)A[i].bind()},unbind:function(){const A=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=A.length;i!==e;++i)A[i].unbind()}}),Object.assign(za,{Composite:Wa,create:function(A,i,e){return A&&A.isAnimationObjectGroup?new za.Composite(A,i,e):new za(A,i,e)},sanitizeNodeName:function(A){return A.replace(/\s/g,"_").replace(Ra,"")},parseTrackName:function(A){const i=Ua.exec(A);if(!i)throw new Error("PropertyBinding: Cannot parse trackName: "+A);const e={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]},t=e.nodeName&&e.nodeName.lastIndexOf(".");if(void 0!==t&&-1!==t){const A=e.nodeName.substring(t+1);-1!==Va.indexOf(A)&&(e.nodeName=e.nodeName.substring(0,t),e.objectName=A)}if(null===e.propertyName||0===e.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+A);return e},findNode:function(A,i){if(!i||""===i||"."===i||-1===i||i===A.name||i===A.uuid)return A;if(A.skeleton){const e=A.skeleton.getBoneByName(i);if(void 0!==e)return e}if(A.children){const e=function(A){for(let t=0;t<A.length;t++){const C=A[t];if(C.name===i||C.uuid===i)return C;const n=e(C.children);if(n)return n}return null},t=e(A.children);if(t)return t}return null}}),Object.assign(za.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(A,i){A[i]=this.node[this.propertyName]},function(A,i){const e=this.resolvedProperty;for(let t=0,C=e.length;t!==C;++t)A[i++]=e[t]},function(A,i){A[i]=this.resolvedProperty[this.propertyIndex]},function(A,i){this.resolvedProperty.toArray(A,i)}],SetterByBindingTypeAndVersioning:[[function(A,i){this.targetObject[this.propertyName]=A[i]},function(A,i){this.targetObject[this.propertyName]=A[i],this.targetObject.needsUpdate=!0},function(A,i){this.targetObject[this.propertyName]=A[i],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(A,i){const e=this.resolvedProperty;for(let t=0,C=e.length;t!==C;++t)e[t]=A[i++]},function(A,i){const e=this.resolvedProperty;for(let t=0,C=e.length;t!==C;++t)e[t]=A[i++];this.targetObject.needsUpdate=!0},function(A,i){const e=this.resolvedProperty;for(let t=0,C=e.length;t!==C;++t)e[t]=A[i++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(A,i){this.resolvedProperty[this.propertyIndex]=A[i]},function(A,i){this.resolvedProperty[this.propertyIndex]=A[i],this.targetObject.needsUpdate=!0},function(A,i){this.resolvedProperty[this.propertyIndex]=A[i],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(A,i){this.resolvedProperty.fromArray(A,i)},function(A,i){this.resolvedProperty.fromArray(A,i),this.targetObject.needsUpdate=!0},function(A,i){this.resolvedProperty.fromArray(A,i),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(A,i){this.bind(),this.getValue(A,i)},setValue:function(A,i){this.bind(),this.setValue(A,i)},bind:function(){let A=this.node;const i=this.parsedPath,e=i.objectName,t=i.propertyName;let C=i.propertyIndex;if(A||(A=za.findNode(this.rootNode,i.nodeName)||this.rootNode,this.node=A),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!A)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(e){let t=i.objectIndex;switch(e){case"materials":if(!A.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!A.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);A=A.material.materials;break;case"bones":if(!A.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);A=A.skeleton.bones;for(let i=0;i<A.length;i++)if(A[i].name===t){t=i;break}break;default:if(void 0===A[e])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);A=A[e]}if(void 0!==t){if(void 0===A[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,A);A=A[t]}}const n=A[t];if(void 0===n){const e=i.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+t+" but it wasn't found.",A)}let h=this.Versioning.None;this.targetObject=A,void 0!==A.needsUpdate?h=this.Versioning.NeedsUpdate:void 0!==A.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate);let r=this.BindingType.Direct;if(void 0!==C){if("morphTargetInfluences"===t){if(!A.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!A.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!A.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==A.morphTargetDictionary[C]&&(C=A.morphTargetDictionary[C])}r=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=C}else void 0!==n.fromArray&&void 0!==n.toArray?(r=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(r=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=t;this.getValue=this.GetterByBindingType[r],this.setValue=this.SetterByBindingTypeAndVersioning[r][h]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(za.prototype,{_getValue_unbound:za.prototype.getValue,_setValue_unbound:za.prototype.setValue});class qa{constructor(){this.uuid=fn.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const A={};this._indicesByUUID=A;for(let i=0,e=arguments.length;i!==e;++i)A[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}add(){const A=this._objects,i=this._indicesByUUID,e=this._paths,t=this._parsedPaths,C=this._bindings,n=C.length;let h=void 0,r=A.length,E=this.nCachedObjects_;for(let l=0,o=arguments.length;l!==o;++l){const o=arguments[l],k=o.uuid;let g=i[k];if(void 0===g){g=r++,i[k]=g,A.push(o);for(let A=0,i=n;A!==i;++A)C[A].push(new za(o,e[A],t[A]))}else if(g<E){h=A[g];const r=--E,l=A[r];i[l.uuid]=g,A[g]=l,i[k]=r,A[r]=o;for(let A=0,i=n;A!==i;++A){const i=C[A],n=i[r];let h=i[g];i[g]=n,void 0===h&&(h=new za(o,e[A],t[A])),i[r]=h}}else A[g]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=E}remove(){const A=this._objects,i=this._indicesByUUID,e=this._bindings,t=e.length;let C=this.nCachedObjects_;for(let n=0,h=arguments.length;n!==h;++n){const h=arguments[n],r=h.uuid,E=i[r];if(void 0!==E&&E>=C){const n=C++,l=A[n];i[l.uuid]=E,A[E]=l,i[r]=n,A[n]=h;for(let A=0,i=t;A!==i;++A){const i=e[A],t=i[n],C=i[E];i[E]=t,i[n]=C}}}this.nCachedObjects_=C}uncache(){const A=this._objects,i=this._indicesByUUID,e=this._bindings,t=e.length;let C=this.nCachedObjects_,n=A.length;for(let h=0,r=arguments.length;h!==r;++h){const r=arguments[h].uuid,E=i[r];if(void 0!==E)if(delete i[r],E<C){const h=--C,r=A[h],l=--n,o=A[l];i[r.uuid]=E,A[E]=r,i[o.uuid]=h,A[h]=o,A.pop();for(let A=0,i=t;A!==i;++A){const i=e[A],t=i[h],C=i[l];i[E]=t,i[h]=C,i.pop()}}else{const C=--n,h=A[C];C>0&&(i[h.uuid]=E),A[E]=h,A.pop();for(let A=0,i=t;A!==i;++A){const i=e[A];i[E]=i[C],i.pop()}}}this.nCachedObjects_=C}subscribe_(A,i){const e=this._bindingsIndicesByPath;let t=e[A];const C=this._bindings;if(void 0!==t)return C[t];const n=this._paths,h=this._parsedPaths,r=this._objects,E=r.length,l=this.nCachedObjects_,o=new Array(E);t=C.length,e[A]=t,n.push(A),h.push(i),C.push(o);for(let e=l,t=r.length;e!==t;++e){const t=r[e];o[e]=new za(t,A,i)}return o}unsubscribe_(A){const i=this._bindingsIndicesByPath,e=i[A];if(void 0!==e){const t=this._paths,C=this._parsedPaths,n=this._bindings,h=n.length-1,r=n[h];i[A[h]]=e,n[e]=r,n.pop(),C[e]=C[h],C.pop(),t[e]=t[h],t.pop()}}}qa.prototype.isAnimationObjectGroup=!0;class Qa{constructor(A,i,e=null,t=i.blendMode){this._mixer=A,this._clip=i,this._localRoot=e,this.blendMode=t;const C=i.tracks,n=C.length,h=new Array(n),r={endingStart:HC,endingEnd:HC};for(let A=0;A!==n;++A){const i=C[A].createInterpolant(null);h[A]=i,i.settings=r}this._interpolantSettings=r,this._interpolants=h,this._propertyBindings=new Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=GC,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(A){return this._startTime=A,this}setLoop(A,i){return this.loop=A,this.repetitions=i,this}setEffectiveWeight(A){return this.weight=A,this._effectiveWeight=this.enabled?A:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(A){return this._scheduleFading(A,0,1)}fadeOut(A){return this._scheduleFading(A,1,0)}crossFadeFrom(A,i,e){if(A.fadeOut(i),this.fadeIn(i),e){const e=this._clip.duration,t=A._clip.duration,C=t/e,n=e/t;A.warp(1,C,i),this.warp(n,1,i)}return this}crossFadeTo(A,i,e){return A.crossFadeFrom(this,i,e)}stopFading(){const A=this._weightInterpolant;return null!==A&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(A)),this}setEffectiveTimeScale(A){return this.timeScale=A,this._effectiveTimeScale=this.paused?0:A,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(A){return this.timeScale=this._clip.duration/A,this.stopWarping()}syncWith(A){return this.time=A.time,this.timeScale=A.timeScale,this.stopWarping()}halt(A){return this.warp(this._effectiveTimeScale,0,A)}warp(A,i,e){const t=this._mixer,C=t.time,n=this.timeScale;let h=this._timeScaleInterpolant;null===h&&(h=t._lendControlInterpolant(),this._timeScaleInterpolant=h);const r=h.parameterPositions,E=h.sampleValues;return r[0]=C,r[1]=C+e,E[0]=A/n,E[1]=i/n,this}stopWarping(){const A=this._timeScaleInterpolant;return null!==A&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(A)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(A,i,e,t){if(!this.enabled)return void this._updateWeight(A);const C=this._startTime;if(null!==C){const t=(A-C)*e;if(t<0||0===e)return;this._startTime=null,i=e*t}i*=this._updateTimeScale(A);const n=this._updateTime(i),h=this._updateWeight(A);if(h>0){const A=this._interpolants,i=this._propertyBindings;switch(this.blendMode){case MC:for(let e=0,t=A.length;e!==t;++e)A[e].evaluate(n),i[e].accumulateAdditive(h);break;case bC:default:for(let e=0,C=A.length;e!==C;++e)A[e].evaluate(n),i[e].accumulate(t,h)}}}_updateWeight(A){let i=0;if(this.enabled){i=this.weight;const e=this._weightInterpolant;if(null!==e){const t=e.evaluate(A)[0];i*=t,A>e.parameterPositions[1]&&(this.stopFading(),0===t&&(this.enabled=!1))}}return this._effectiveWeight=i,i}_updateTimeScale(A){let i=0;if(!this.paused){i=this.timeScale;const e=this._timeScaleInterpolant;if(null!==e){i*=e.evaluate(A)[0],A>e.parameterPositions[1]&&(this.stopWarping(),0===i?this.paused=!0:this.timeScale=i)}}return this._effectiveTimeScale=i,i}_updateTime(A){const i=this._clip.duration,e=this.loop;let t=this.time+A,C=this._loopCount;const n=e===dC;if(0===A)return-1===C?t:n&&1==(1&C)?i-t:t;if(e===FC){-1===C&&(this._loopCount=0,this._setEndings(!0,!0,!1));A:{if(t>=i)t=i;else{if(!(t<0)){this.time=t;break A}t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:A<0?-1:1})}}else{if(-1===C&&(A>=0?(C=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),t>=i||t<0){const e=Math.floor(t/i);t-=i*e,C+=Math.abs(e);const h=this.repetitions-C;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=A>0?i:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:A>0?1:-1});else{if(1===h){const i=A<0;this._setEndings(i,!i,n)}else this._setEndings(!1,!1,n);this._loopCount=C,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:e})}}else this.time=t;if(n&&1==(1&C))return i-t}return t}_setEndings(A,i,e){const t=this._interpolantSettings;e?(t.endingStart=IC,t.endingEnd=IC):(t.endingStart=A?this.zeroSlopeAtStart?IC:HC:yC,t.endingEnd=i?this.zeroSlopeAtEnd?IC:HC:yC)}_scheduleFading(A,i,e){const t=this._mixer,C=t.time;let n=this._weightInterpolant;null===n&&(n=t._lendControlInterpolant(),this._weightInterpolant=n);const h=n.parameterPositions,r=n.sampleValues;return h[0]=C,r[0]=i,h[1]=C+A,r[1]=e,this}}class Ya extends Fn{constructor(A){super(),this._root=A,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(A,i){const e=A._localRoot||this._root,t=A._clip.tracks,C=t.length,n=A._propertyBindings,h=A._interpolants,r=e.uuid,E=this._bindingsByRootAndName;let l=E[r];void 0===l&&(l={},E[r]=l);for(let A=0;A!==C;++A){const C=t[A],E=C.name;let o=l[E];if(void 0!==o)n[A]=o;else{if(o=n[A],void 0!==o){null===o._cacheIndex&&(++o.referenceCount,this._addInactiveBinding(o,r,E));continue}const t=i&&i._propertyBindings[A].binding.parsedPath;o=new La(za.create(e,E,t),C.ValueTypeName,C.getValueSize()),++o.referenceCount,this._addInactiveBinding(o,r,E),n[A]=o}h[A].resultBuffer=o.buffer}}_activateAction(A){if(!this._isActiveAction(A)){if(null===A._cacheIndex){const i=(A._localRoot||this._root).uuid,e=A._clip.uuid,t=this._actionsByClip[e];this._bindAction(A,t&&t.knownActions[0]),this._addInactiveAction(A,e,i)}const i=A._propertyBindings;for(let A=0,e=i.length;A!==e;++A){const e=i[A];0==e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(A)}}_deactivateAction(A){if(this._isActiveAction(A)){const i=A._propertyBindings;for(let A=0,e=i.length;A!==e;++A){const e=i[A];0==--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(A)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const A=this;this.stats={actions:{get total(){return A._actions.length},get inUse(){return A._nActiveActions}},bindings:{get total(){return A._bindings.length},get inUse(){return A._nActiveBindings}},controlInterpolants:{get total(){return A._controlInterpolants.length},get inUse(){return A._nActiveControlInterpolants}}}}_isActiveAction(A){const i=A._cacheIndex;return null!==i&&i<this._nActiveActions}_addInactiveAction(A,i,e){const t=this._actions,C=this._actionsByClip;let n=C[i];if(void 0===n)n={knownActions:[A],actionByRoot:{}},A._byClipCacheIndex=0,C[i]=n;else{const i=n.knownActions;A._byClipCacheIndex=i.length,i.push(A)}A._cacheIndex=t.length,t.push(A),n.actionByRoot[e]=A}_removeInactiveAction(A){const i=this._actions,e=i[i.length-1],t=A._cacheIndex;e._cacheIndex=t,i[t]=e,i.pop(),A._cacheIndex=null;const C=A._clip.uuid,n=this._actionsByClip,h=n[C],r=h.knownActions,E=r[r.length-1],l=A._byClipCacheIndex;E._byClipCacheIndex=l,r[l]=E,r.pop(),A._byClipCacheIndex=null;delete h.actionByRoot[(A._localRoot||this._root).uuid],0===r.length&&delete n[C],this._removeInactiveBindingsForAction(A)}_removeInactiveBindingsForAction(A){const i=A._propertyBindings;for(let A=0,e=i.length;A!==e;++A){const e=i[A];0==--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(A){const i=this._actions,e=A._cacheIndex,t=this._nActiveActions++,C=i[t];A._cacheIndex=t,i[t]=A,C._cacheIndex=e,i[e]=C}_takeBackAction(A){const i=this._actions,e=A._cacheIndex,t=--this._nActiveActions,C=i[t];A._cacheIndex=t,i[t]=A,C._cacheIndex=e,i[e]=C}_addInactiveBinding(A,i,e){const t=this._bindingsByRootAndName,C=this._bindings;let n=t[i];void 0===n&&(n={},t[i]=n),n[e]=A,A._cacheIndex=C.length,C.push(A)}_removeInactiveBinding(A){const i=this._bindings,e=A.binding,t=e.rootNode.uuid,C=e.path,n=this._bindingsByRootAndName,h=n[t],r=i[i.length-1],E=A._cacheIndex;r._cacheIndex=E,i[E]=r,i.pop(),delete h[C],0===Object.keys(h).length&&delete n[t]}_lendBinding(A){const i=this._bindings,e=A._cacheIndex,t=this._nActiveBindings++,C=i[t];A._cacheIndex=t,i[t]=A,C._cacheIndex=e,i[e]=C}_takeBackBinding(A){const i=this._bindings,e=A._cacheIndex,t=--this._nActiveBindings,C=i[t];A._cacheIndex=t,i[t]=A,C._cacheIndex=e,i[e]=C}_lendControlInterpolant(){const A=this._controlInterpolants,i=this._nActiveControlInterpolants++;let e=A[i];return void 0===e&&(e=new Jg(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),e.__cacheIndex=i,A[i]=e),e}_takeBackControlInterpolant(A){const i=this._controlInterpolants,e=A.__cacheIndex,t=--this._nActiveControlInterpolants,C=i[t];A.__cacheIndex=t,i[t]=A,C.__cacheIndex=e,i[e]=C}clipAction(A,i,e){const t=i||this._root,C=t.uuid;let n="string"==typeof A?Zg.findByName(t,A):A;const h=null!==n?n.uuid:A,r=this._actionsByClip[h];let E=null;if(void 0===e&&(e=null!==n?n.blendMode:bC),void 0!==r){const A=r.actionByRoot[C];if(void 0!==A&&A.blendMode===e)return A;E=r.knownActions[0],null===n&&(n=E._clip)}if(null===n)return null;const l=new Qa(this,n,i,e);return this._bindAction(l,E),this._addInactiveAction(l,h,C),l}existingAction(A,i){const e=i||this._root,t=e.uuid,C="string"==typeof A?Zg.findByName(e,A):A,n=C?C.uuid:A,h=this._actionsByClip[n];return void 0!==h&&h.actionByRoot[t]||null}stopAllAction(){const A=this._actions;for(let i=this._nActiveActions-1;i>=0;--i)A[i].stop();return this}update(A){A*=this.timeScale;const i=this._actions,e=this._nActiveActions,t=this.time+=A,C=Math.sign(A),n=this._accuIndex^=1;for(let h=0;h!==e;++h){i[h]._update(t,A,C,n)}const h=this._bindings,r=this._nActiveBindings;for(let A=0;A!==r;++A)h[A].apply(n);return this}setTime(A){this.time=0;for(let A=0;A<this._actions.length;A++)this._actions[A].time=0;return this.update(A)}getRoot(){return this._root}uncacheClip(A){const i=this._actions,e=A.uuid,t=this._actionsByClip,C=t[e];if(void 0!==C){const A=C.knownActions;for(let e=0,t=A.length;e!==t;++e){const t=A[e];this._deactivateAction(t);const C=t._cacheIndex,n=i[i.length-1];t._cacheIndex=null,t._byClipCacheIndex=null,n._cacheIndex=C,i[C]=n,i.pop(),this._removeInactiveBindingsForAction(t)}delete t[e]}}uncacheRoot(A){const i=A.uuid,e=this._actionsByClip;for(const A in e){const t=e[A].actionByRoot[i];void 0!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}const t=this._bindingsByRootAndName[i];if(void 0!==t)for(const A in t){const i=t[A];i.restoreOriginalState(),this._removeInactiveBinding(i)}}uncacheAction(A,i){const e=this.existingAction(A,i);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}Ya.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Xa{constructor(A){"string"==typeof A&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),A=arguments[1]),this.value=A}clone(){return new Xa(void 0===this.value.clone?this.value:this.value.clone())}}function Za(A,i,e){Fo.call(this,A,i),this.meshPerAttribute=e||1}function _a(A,i,e,t,C){this.buffer=A,this.type=i,this.itemSize=e,this.elementSize=t,this.count=C,this.version=0}function $a(A,i,e=0,t=1/0){this.ray=new lh(A,i),this.near=e,this.far=t,this.camera=null,this.layers=new Fh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function As(A,i){return A.distance-i.distance}function is(A,i,e,t){if(A.layers.test(i.layers)&&A.raycast(i,e),!0===t){const t=A.children;for(let A=0,C=t.length;A<C;A++)is(t[A],i,e,!0)}}Za.prototype=Object.assign(Object.create(Fo.prototype),{constructor:Za,isInstancedInterleavedBuffer:!0,copy:function(A){return Fo.prototype.copy.call(this,A),this.meshPerAttribute=A.meshPerAttribute,this},clone:function(A){const i=Fo.prototype.clone.call(this,A);return i.meshPerAttribute=this.meshPerAttribute,i},toJSON:function(A){const i=Fo.prototype.toJSON.call(this,A);return i.isInstancedInterleavedBuffer=!0,i.meshPerAttribute=this.meshPerAttribute,i}}),Object.defineProperty(_a.prototype,"needsUpdate",{set:function(A){!0===A&&this.version++}}),Object.assign(_a.prototype,{isGLBufferAttribute:!0,setBuffer:function(A){return this.buffer=A,this},setType:function(A,i){return this.type=A,this.elementSize=i,this},setItemSize:function(A){return this.itemSize=A,this},setCount:function(A){return this.count=A,this}}),Object.assign($a.prototype,{set:function(A,i){this.ray.set(A,i)},setFromCamera:function(A,i){i&&i.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(i.matrixWorld),this.ray.direction.set(A.x,A.y,.5).unproject(i).sub(this.ray.origin).normalize(),this.camera=i):i&&i.isOrthographicCamera?(this.ray.origin.set(A.x,A.y,(i.near+i.far)/(i.near-i.far)).unproject(i),this.ray.direction.set(0,0,-1).transformDirection(i.matrixWorld),this.camera=i):console.error("THREE.Raycaster: Unsupported camera type: "+i.type)},intersectObject:function(A,i=!1,e=[]){return is(A,this,e,i),e.sort(As),e},intersectObjects:function(A,i=!1,e=[]){for(let t=0,C=A.length;t<C;t++)is(A[t],this,e,i);return e.sort(As),e}});class es{constructor(A=1,i=0,e=0){return this.radius=A,this.phi=i,this.theta=e,this}set(A,i,e){return this.radius=A,this.phi=i,this.theta=e,this}copy(A){return this.radius=A.radius,this.phi=A.phi,this.theta=A.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(A){return this.setFromCartesianCoords(A.x,A.y,A.z)}setFromCartesianCoords(A,i,e){return this.radius=Math.sqrt(A*A+i*i+e*e),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(A,e),this.phi=Math.acos(fn.clamp(i/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class ts{constructor(A=1,i=0,e=0){return this.radius=A,this.theta=i,this.y=e,this}set(A,i,e){return this.radius=A,this.theta=i,this.y=e,this}copy(A){return this.radius=A.radius,this.theta=A.theta,this.y=A.y,this}setFromVector3(A){return this.setFromCartesianCoords(A.x,A.y,A.z)}setFromCartesianCoords(A,i,e){return this.radius=Math.sqrt(A*A+e*e),this.theta=Math.atan2(A,e),this.y=i,this}clone(){return(new this.constructor).copy(this)}}const Cs=new pn;class ns{constructor(A=new pn(1/0,1/0),i=new pn(-1/0,-1/0)){this.min=A,this.max=i}set(A,i){return this.min.copy(A),this.max.copy(i),this}setFromPoints(A){this.makeEmpty();for(let i=0,e=A.length;i<e;i++)this.expandByPoint(A[i]);return this}setFromCenterAndSize(A,i){const e=Cs.copy(i).multiplyScalar(.5);return this.min.copy(A).sub(e),this.max.copy(A).add(e),this}clone(){return(new this.constructor).copy(this)}copy(A){return this.min.copy(A.min),this.max.copy(A.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(A){return void 0===A&&(console.warn("THREE.Box2: .getCenter() target is now required"),A=new pn),this.isEmpty()?A.set(0,0):A.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(A){return void 0===A&&(console.warn("THREE.Box2: .getSize() target is now required"),A=new pn),this.isEmpty()?A.set(0,0):A.subVectors(this.max,this.min)}expandByPoint(A){return this.min.min(A),this.max.max(A),this}expandByVector(A){return this.min.sub(A),this.max.add(A),this}expandByScalar(A){return this.min.addScalar(-A),this.max.addScalar(A),this}containsPoint(A){return!(A.x<this.min.x||A.x>this.max.x||A.y<this.min.y||A.y>this.max.y)}containsBox(A){return this.min.x<=A.min.x&&A.max.x<=this.max.x&&this.min.y<=A.min.y&&A.max.y<=this.max.y}getParameter(A,i){return void 0===i&&(console.warn("THREE.Box2: .getParameter() target is now required"),i=new pn),i.set((A.x-this.min.x)/(this.max.x-this.min.x),(A.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(A){return!(A.max.x<this.min.x||A.min.x>this.max.x||A.max.y<this.min.y||A.min.y>this.max.y)}clampPoint(A,i){return void 0===i&&(console.warn("THREE.Box2: .clampPoint() target is now required"),i=new pn),i.copy(A).clamp(this.min,this.max)}distanceToPoint(A){return Cs.copy(A).clamp(this.min,this.max).sub(A).length()}intersect(A){return this.min.max(A.min),this.max.min(A.max),this}union(A){return this.min.min(A.min),this.max.max(A.max),this}translate(A){return this.min.add(A),this.max.add(A),this}equals(A){return A.min.equals(this.min)&&A.max.equals(this.max)}}ns.prototype.isBox2=!0;const hs=new Ln,rs=new Ln;class Es{constructor(A=new Ln,i=new Ln){this.start=A,this.end=i}set(A,i){return this.start.copy(A),this.end.copy(i),this}copy(A){return this.start.copy(A.start),this.end.copy(A.end),this}getCenter(A){return void 0===A&&(console.warn("THREE.Line3: .getCenter() target is now required"),A=new Ln),A.addVectors(this.start,this.end).multiplyScalar(.5)}delta(A){return void 0===A&&(console.warn("THREE.Line3: .delta() target is now required"),A=new Ln),A.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(A,i){return void 0===i&&(console.warn("THREE.Line3: .at() target is now required"),i=new Ln),this.delta(i).multiplyScalar(A).add(this.start)}closestPointToPointParameter(A,i){hs.subVectors(A,this.start),rs.subVectors(this.end,this.start);const e=rs.dot(rs);let t=rs.dot(hs)/e;return i&&(t=fn.clamp(t,0,1)),t}closestPointToPoint(A,i,e){const t=this.closestPointToPointParameter(A,i);return void 0===e&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),e=new Ln),this.delta(e).multiplyScalar(t).add(this.start)}applyMatrix4(A){return this.start.applyMatrix4(A),this.end.applyMatrix4(A),this}equals(A){return A.start.equals(this.start)&&A.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}function ls(A){Th.call(this),this.material=A,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}ls.prototype=Object.create(Th.prototype),ls.prototype.constructor=ls,ls.prototype.isImmediateRenderObject=!0;const os=new Ln;class ks extends Th{constructor(A,i){super(),this.light=A,this.light.updateMatrixWorld(),this.matrix=A.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const e=new br,t=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let A=0,i=1,e=32;A<e;A++,i++){const C=A/e*Math.PI*2,n=i/e*Math.PI*2;t.push(Math.cos(C),Math.sin(C),1,Math.cos(n),Math.sin(n),1)}e.setAttribute("position",new mr(t,3));const C=new nk({fog:!1,toneMapped:!1});this.cone=new ak(e,C),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const A=this.light.distance?this.light.distance:1e3,i=A*Math.tan(this.light.angle);this.cone.scale.set(i,i,A),os.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(os),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const gs=new Ln,Ds=new oh,as=new oh;class ss extends ak{constructor(A){const i=function A(i){const e=[];i&&i.isBone&&e.push(i);for(let t=0;t<i.children.length;t++)e.push.apply(e,A(i.children[t]));return e}(A),e=new br,t=[],C=[],n=new nr(0,0,1),h=new nr(0,1,0);for(let A=0;A<i.length;A++){const e=i[A];e.parent&&e.parent.isBone&&(t.push(0,0,0),t.push(0,0,0),C.push(n.r,n.g,n.b),C.push(h.r,h.g,h.b))}e.setAttribute("position",new mr(t,3)),e.setAttribute("color",new mr(C,3));super(e,new nk({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=A,this.bones=i,this.matrix=A.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(A){const i=this.bones,e=this.geometry,t=e.getAttribute("position");as.copy(this.root.matrixWorld).invert();for(let A=0,e=0;A<i.length;A++){const C=i[A];C.parent&&C.parent.isBone&&(Ds.multiplyMatrices(as,C.matrixWorld),gs.setFromMatrixPosition(Ds),t.setXYZ(e,gs.x,gs.y,gs.z),Ds.multiplyMatrices(as,C.parent.matrixWorld),gs.setFromMatrixPosition(Ds),t.setXYZ(e+1,gs.x,gs.y,gs.z),e+=2)}e.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(A)}}class Bs extends Qr{constructor(A,i,e){super(new cg(i,4,2),new hr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=A,this.light.updateMatrixWorld(),this.color=e,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const js=new Ln,ms=new nr,cs=new nr;class us extends Th{constructor(A,i,e){super(),this.light=A,this.light.updateMatrixWorld(),this.matrix=A.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const t=new sg(i);t.rotateY(.5*Math.PI),this.material=new hr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const C=t.getAttribute("position"),n=new Float32Array(3*C.count);t.setAttribute("color",new lr(n,3)),this.add(new Qr(t,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const A=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const i=A.geometry.getAttribute("color");ms.copy(this.light.color),cs.copy(this.light.groundColor);for(let A=0,e=i.count;A<e;A++){const t=A<e/2?ms:cs;i.setXYZ(A,t.r,t.g,t.b)}i.needsUpdate=!0}A.lookAt(js.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Fs extends ak{constructor(A=10,i=10,e=4473924,t=8947848){e=new nr(e),t=new nr(t);const C=i/2,n=A/i,h=A/2,r=[],E=[];for(let A=0,l=0,o=-h;A<=i;A++,o+=n){r.push(-h,0,o,h,0,o),r.push(o,0,-h,o,0,h);const i=A===C?e:t;i.toArray(E,l),l+=3,i.toArray(E,l),l+=3,i.toArray(E,l),l+=3,i.toArray(E,l),l+=3}const l=new br;l.setAttribute("position",new mr(r,3)),l.setAttribute("color",new mr(E,3));super(l,new nk({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class Gs extends ak{constructor(A=10,i=16,e=8,t=64,C=4473924,n=8947848){C=new nr(C),n=new nr(n);const h=[],r=[];for(let e=0;e<=i;e++){const t=e/i*(2*Math.PI),E=Math.sin(t)*A,l=Math.cos(t)*A;h.push(0,0,0),h.push(E,0,l);const o=1&e?C:n;r.push(o.r,o.g,o.b),r.push(o.r,o.g,o.b)}for(let i=0;i<=e;i++){const E=1&i?C:n,l=A-A/e*i;for(let A=0;A<t;A++){let i=A/t*(2*Math.PI),e=Math.sin(i)*l,C=Math.cos(i)*l;h.push(e,0,C),r.push(E.r,E.g,E.b),i=(A+1)/t*(2*Math.PI),e=Math.sin(i)*l,C=Math.cos(i)*l,h.push(e,0,C),r.push(E.r,E.g,E.b)}}const E=new br;E.setAttribute("position",new mr(h,3)),E.setAttribute("color",new mr(r,3));super(E,new nk({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const ds=new Ln,fs=new Ln,ps=new Ln;class vs extends Th{constructor(A,i,e){super(),this.light=A,this.light.updateMatrixWorld(),this.matrix=A.matrixWorld,this.matrixAutoUpdate=!1,this.color=e,void 0===i&&(i=1);let t=new br;t.setAttribute("position",new mr([-i,i,0,i,i,0,i,-i,0,-i,-i,0,-i,i,0],3));const C=new nk({fog:!1,toneMapped:!1});this.lightPlane=new kk(t,C),this.add(this.lightPlane),t=new br,t.setAttribute("position",new mr([0,0,0,0,0,1],3)),this.targetLine=new kk(t,C),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ds.setFromMatrixPosition(this.light.matrixWorld),fs.setFromMatrixPosition(this.light.target.matrixWorld),ps.subVectors(fs,ds),this.lightPlane.lookAt(fs),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(fs),this.targetLine.scale.z=ps.length()}}const Hs=new Ln,Is=new iE;class ys extends ak{constructor(A){const i=new br,e=new nk({color:16777215,vertexColors:!0,toneMapped:!1}),t=[],C=[],n={},h=new nr(16755200),r=new nr(16711680),E=new nr(43775),l=new nr(16777215),o=new nr(3355443);function k(A,i,e){g(A,e),g(i,e)}function g(A,i){t.push(0,0,0),C.push(i.r,i.g,i.b),void 0===n[A]&&(n[A]=[]),n[A].push(t.length/3-1)}k("n1","n2",h),k("n2","n4",h),k("n4","n3",h),k("n3","n1",h),k("f1","f2",h),k("f2","f4",h),k("f4","f3",h),k("f3","f1",h),k("n1","f1",h),k("n2","f2",h),k("n3","f3",h),k("n4","f4",h),k("p","n1",r),k("p","n2",r),k("p","n3",r),k("p","n4",r),k("u1","u2",E),k("u2","u3",E),k("u3","u1",E),k("c","t",l),k("p","c",o),k("cn1","cn2",o),k("cn3","cn4",o),k("cf1","cf2",o),k("cf3","cf4",o),i.setAttribute("position",new mr(t,3)),i.setAttribute("color",new mr(C,3)),super(i,e),this.type="CameraHelper",this.camera=A,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=A.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=n,this.update()}update(){const A=this.geometry,i=this.pointMap;Is.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),bs("c",i,A,Is,0,0,-1),bs("t",i,A,Is,0,0,1),bs("n1",i,A,Is,-1,-1,-1),bs("n2",i,A,Is,1,-1,-1),bs("n3",i,A,Is,-1,1,-1),bs("n4",i,A,Is,1,1,-1),bs("f1",i,A,Is,-1,-1,1),bs("f2",i,A,Is,1,-1,1),bs("f3",i,A,Is,-1,1,1),bs("f4",i,A,Is,1,1,1),bs("u1",i,A,Is,.7,1.1,-1),bs("u2",i,A,Is,-.7,1.1,-1),bs("u3",i,A,Is,0,2,-1),bs("cf1",i,A,Is,-1,0,1),bs("cf2",i,A,Is,1,0,1),bs("cf3",i,A,Is,0,-1,1),bs("cf4",i,A,Is,0,1,1),bs("cn1",i,A,Is,-1,0,-1),bs("cn2",i,A,Is,1,0,-1),bs("cn3",i,A,Is,0,-1,-1),bs("cn4",i,A,Is,0,1,-1),A.getAttribute("position").needsUpdate=!0}}function bs(A,i,e,t,C,n,h){Hs.set(C,n,h).unproject(t);const r=i[A];if(void 0!==r){const A=e.getAttribute("position");for(let i=0,e=r.length;i<e;i++)A.setXYZ(r[i],Hs.x,Hs.y,Hs.z)}}const Ms=new On;class xs extends ak{constructor(A,i=16776960){const e=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),t=new Float32Array(24),C=new br;C.setIndex(new lr(e,1)),C.setAttribute("position",new lr(t,3)),super(C,new nk({color:i,toneMapped:!1})),this.object=A,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(A){if(void 0!==A&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Ms.setFromObject(this.object),Ms.isEmpty())return;const i=Ms.min,e=Ms.max,t=this.geometry.attributes.position,C=t.array;C[0]=e.x,C[1]=e.y,C[2]=e.z,C[3]=i.x,C[4]=e.y,C[5]=e.z,C[6]=i.x,C[7]=i.y,C[8]=e.z,C[9]=e.x,C[10]=i.y,C[11]=e.z,C[12]=e.x,C[13]=e.y,C[14]=i.z,C[15]=i.x,C[16]=e.y,C[17]=i.z,C[18]=i.x,C[19]=i.y,C[20]=i.z,C[21]=e.x,C[22]=i.y,C[23]=i.z,t.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(A){return this.object=A,this.update(),this}copy(A){return ak.prototype.copy.call(this,A),this.object=A.object,this}}class ws extends ak{constructor(A,i=16776960){const e=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),t=new br;t.setIndex(new lr(e,1)),t.setAttribute("position",new mr([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(t,new nk({color:i,toneMapped:!1})),this.box=A,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(A){const i=this.box;i.isEmpty()||(i.getCenter(this.position),i.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(A))}}class Ss extends kk{constructor(A,i=1,e=16776960){const t=e,C=new br;C.setAttribute("position",new mr([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),C.computeBoundingSphere(),super(C,new nk({color:t,toneMapped:!1})),this.type="PlaneHelper",this.plane=A,this.size=i;const n=new br;n.setAttribute("position",new mr([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new Qr(n,new hr({color:t,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(A){let i=-this.plane.constant;Math.abs(i)<1e-8&&(i=1e-8),this.scale.set(.5*this.size,.5*this.size,i),this.children[0].material.side=i<0?Ae:$i,this.lookAt(this.plane.normal),super.updateMatrixWorld(A)}}const Ts=new Ln;let Ls,Rs;class Ps extends Th{constructor(A=new Ln(0,0,1),i=new Ln(0,0,0),e=1,t=16776960,C=.2*e,n=.2*C){super(),this.type="ArrowHelper",void 0===Ls&&(Ls=new br,Ls.setAttribute("position",new mr([0,0,0,0,1,0],3)),Rs=new Ik(0,.5,1,5,1),Rs.translate(0,-.5,0)),this.position.copy(i),this.line=new kk(Ls,new nk({color:t,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Qr(Rs,new hr({color:t,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(A),this.setLength(e,C,n)}setDirection(A){if(A.y>.99999)this.quaternion.set(0,0,0,1);else if(A.y<-.99999)this.quaternion.set(1,0,0,0);else{Ts.set(A.z,0,-A.x).normalize();const i=Math.acos(A.y);this.quaternion.setFromAxisAngle(Ts,i)}}setLength(A,i=.2*A,e=.2*i){this.line.scale.set(1,Math.max(1e-4,A-i),1),this.line.updateMatrix(),this.cone.scale.set(e,i,e),this.cone.position.y=A,this.cone.updateMatrix()}setColor(A){this.line.material.color.set(A),this.cone.material.color.set(A)}copy(A){return super.copy(A,!1),this.line.copy(A.line),this.cone.copy(A.cone),this}}class Os extends ak{constructor(A=1){const i=[0,0,0,A,0,0,0,0,0,0,A,0,0,0,0,0,0,A],e=new br;e.setAttribute("position",new mr(i,3)),e.setAttribute("color",new mr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(e,new nk({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const Ns=new Float32Array(1),Js=new Int32Array(Ns.buffer),Ks={toHalfFloat:function(A){Ns[0]=A;const i=Js[0];let e=i>>16&32768,t=i>>12&2047;const C=i>>23&255;return C<103?e:C>142?(e|=31744,e|=(255==C?0:1)&&8388607&i,e):C<113?(t|=2048,e|=(t>>114-C)+(t>>113-C&1),e):(e|=C-112<<10|t>>1,e+=1&t,e)}},Us=Math.pow(2,8),Vs=[.125,.215,.35,.446,.526,.582],Ws=5+Vs.length,zs={[TC]:0,[LC]:1,[PC]:2,[NC]:3,[JC]:4,[KC]:5,[RC]:6},qs=new hr({side:Ae,depthWrite:!1,depthTest:!1}),Qs=new Qr(new Xr,qs),Ys=new qD,{_lodPlanes:Xs,_sizeLods:Zs,_sigmas:_s}=rB(),$s=new nr;let AB=null;const iB=(1+Math.sqrt(5))/2,eB=1/iB,tB=[new Ln(1,1,1),new Ln(-1,1,1),new Ln(1,1,-1),new Ln(-1,1,-1),new Ln(0,iB,eB),new Ln(0,iB,-eB),new Ln(eB,0,iB),new Ln(-eB,0,iB),new Ln(iB,eB,0),new Ln(-iB,eB,0)];function CB(A){const i=Math.max(A.r,A.g,A.b),e=Math.min(Math.max(Math.ceil(Math.log2(i)),-128),127);A.multiplyScalar(Math.pow(2,-e));return(e+128)/255}class nB{constructor(A){this._renderer=A,this._pingPongRenderTarget=null,this._blurMaterial=function(A){const i=new Float32Array(A),e=new Ln(0,1,0);return new Ig({name:"SphericalGaussianBlur",defines:{n:A},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e},inputEncoding:{value:zs[TC]},outputEncoding:{value:zs[TC]}},vertexShader:gB(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${DB()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:Ce,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(A,i=0,e=.1,t=100){AB=this._renderer.getRenderTarget();const C=this._allocateTargets();return this._sceneToCubeUV(A,e,t,C),i>0&&this._blur(C,0,0,i),this._applyPMREM(C),this._cleanup(C),C}fromEquirectangular(A){return this._fromTexture(A)}fromCubemap(A){return this._fromTexture(A)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=kB(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=oB(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let A=0;A<Xs.length;A++)Xs[A].dispose()}_cleanup(A){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(AB),A.scissorTest=!1,lB(A,0,0,A.width,A.height)}_fromTexture(A){AB=this._renderer.getRenderTarget();const i=this._allocateTargets(A);return this._textureToCubeUV(A,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(A){const i={magFilter:$e,minFilter:$e,generateMipmaps:!1,type:lt,format:vt,encoding:hB(A)?A.encoding:PC,depthBuffer:!1},e=EB(i);return e.depthBuffer=!A,this._pingPongRenderTarget=EB(i),e}_compileMaterial(A){const i=new Qr(Xs[0],A);this._renderer.compile(i,Ys)}_sceneToCubeUV(A,i,e,t){const C=new eE(90,1,i,e),n=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],r=this._renderer,E=r.autoClear,l=r.outputEncoding,o=r.toneMapping;r.getClearColor($s),r.toneMapping=Re,r.outputEncoding=TC,r.autoClear=!1;let k=!1;const g=A.background;if(g){if(g.isColor){qs.color.copy(g).convertSRGBToLinear(),A.background=null;const i=CB(qs.color);qs.opacity=i,k=!0}}else{qs.color.copy($s).convertSRGBToLinear();const A=CB(qs.color);qs.opacity=A,k=!0}for(let i=0;i<6;i++){const e=i%3;0==e?(C.up.set(0,n[i],0),C.lookAt(h[i],0,0)):1==e?(C.up.set(0,0,n[i]),C.lookAt(0,h[i],0)):(C.up.set(0,n[i],0),C.lookAt(0,0,h[i])),lB(t,e*Us,i>2?Us:0,Us,Us),r.setRenderTarget(t),k&&r.render(Qs,C),r.render(A,C)}r.toneMapping=o,r.outputEncoding=l,r.autoClear=E}_textureToCubeUV(A,i){const e=this._renderer;A.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=kB()):null==this._equirectShader&&(this._equirectShader=oB());const t=A.isCubeTexture?this._cubemapShader:this._equirectShader,C=new Qr(Xs[0],t),n=t.uniforms;n.envMap.value=A,A.isCubeTexture||n.texelSize.value.set(1/A.image.width,1/A.image.height),n.inputEncoding.value=zs[A.encoding],n.outputEncoding.value=zs[i.texture.encoding],lB(i,0,0,3*Us,2*Us),e.setRenderTarget(i),e.render(C,Ys)}_applyPMREM(A){const i=this._renderer,e=i.autoClear;i.autoClear=!1;for(let i=1;i<Ws;i++){const e=Math.sqrt(_s[i]*_s[i]-_s[i-1]*_s[i-1]),t=tB[(i-1)%tB.length];this._blur(A,i-1,i,e,t)}i.autoClear=e}_blur(A,i,e,t,C){const n=this._pingPongRenderTarget;this._halfBlur(A,n,i,e,t,"latitudinal",C),this._halfBlur(n,A,e,e,t,"longitudinal",C)}_halfBlur(A,i,e,t,C,n,h){const r=this._renderer,E=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new Qr(Xs[t],E),o=E.uniforms,k=Zs[e]-1,g=isFinite(C)?Math.PI/(2*k):2*Math.PI/39,D=C/g,a=isFinite(C)?1+Math.floor(3*D):20;a>20&&console.warn(`sigmaRadians, ${C}, is too large and will clip, as it requested ${a} samples when the maximum is set to 20`);const s=[];let B=0;for(let A=0;A<20;++A){const i=A/D,e=Math.exp(-i*i/2);s.push(e),0==A?B+=e:A<a&&(B+=2*e)}for(let A=0;A<s.length;A++)s[A]=s[A]/B;o.envMap.value=A.texture,o.samples.value=a,o.weights.value=s,o.latitudinal.value="latitudinal"===n,h&&(o.poleAxis.value=h),o.dTheta.value=g,o.mipInt.value=8-e,o.inputEncoding.value=zs[A.texture.encoding],o.outputEncoding.value=zs[A.texture.encoding];const j=Zs[t];lB(i,3*Math.max(0,Us-2*j),(0===t?0:2*Us)+2*j*(t>4?t-8+4:0),3*j,2*j),r.setRenderTarget(i),r.render(l,Ys)}}function hB(A){return void 0!==A&&A.type===lt&&(A.encoding===TC||A.encoding===LC||A.encoding===RC)}function rB(){const A=[],i=[],e=[];let t=8;for(let C=0;C<Ws;C++){const n=Math.pow(2,t);i.push(n);let h=1/n;C>4?h=Vs[C-8+4-1]:0==C&&(h=0),e.push(h);const r=1/(n-1),E=-r/2,l=1+r/2,o=[E,E,l,E,l,l,E,E,l,l,E,l],k=6,g=6,D=3,a=2,s=1,B=new Float32Array(D*g*k),j=new Float32Array(a*g*k),m=new Float32Array(s*g*k);for(let A=0;A<k;A++){const i=A%3*2/3-1,e=A>2?0:-1,t=[i,e,0,i+2/3,e,0,i+2/3,e+1,0,i,e,0,i+2/3,e+1,0,i,e+1,0];B.set(t,D*g*A),j.set(o,a*g*A);const C=[A,A,A,A,A,A];m.set(C,s*g*A)}const c=new br;c.setAttribute("position",new lr(B,D)),c.setAttribute("uv",new lr(j,a)),c.setAttribute("faceIndex",new lr(m,s)),A.push(c),t>4&&t--}return{_lodPlanes:A,_sizeLods:i,_sigmas:e}}function EB(A){const i=new wn(3*Us,3*Us,A);return i.texture.mapping=Qe,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function lB(A,i,e,t,C){A.viewport.set(i,e,t,C),A.scissor.set(i,e,t,C)}function oB(){const A=new pn(1,1);return new Ig({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:A},inputEncoding:{value:zs[TC]},outputEncoding:{value:zs[TC]}},vertexShader:gB(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${DB()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:Ce,depthTest:!1,depthWrite:!1})}function kB(){return new Ig({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:zs[TC]},outputEncoding:{value:zs[TC]}},vertexShader:gB(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${DB()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:Ce,depthTest:!1,depthWrite:!1})}function gB(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function DB(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}const aB=0,sB=1,BB=0,jB=1,mB=2;function cB(A){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),A}function uB(A=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),A.isMultiMaterial=!0,A.materials=A,A.clone=function(){return A.slice()},A}function FB(A,i){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Fk(A,i)}function GB(A){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Oo(A)}function dB(A,i){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Fk(A,i)}function fB(A){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Bk(A)}function pB(A){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Bk(A)}function vB(A){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Bk(A)}function HB(A,i,e){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Ln(A,i,e)}function IB(A,i){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new lr(A,i).setUsage(kn)}function yB(A,i){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new or(A,i)}function bB(A,i){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new kr(A,i)}function MB(A,i){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new gr(A,i)}function xB(A,i){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Dr(A,i)}function wB(A,i){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ar(A,i)}function SB(A,i){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new sr(A,i)}function TB(A,i){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Br(A,i)}function LB(A,i){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new mr(A,i)}function RB(A,i){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new cr(A,i)}function PB(A){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Os(A)}function OB(A,i){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new xs(A,i)}function NB(A,i){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new ak(new Lk(A.geometry),new nk({color:void 0!==i?i:16777215}))}function JB(A,i){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new ak(new pg(A.geometry),new nk({color:void 0!==i?i:16777215}))}function KB(A){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new CD(A)}function UB(A){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new lD(A)}function VB(A,i,e){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new nE(A,e)}function WB(){console.error("THREE.CanvasRenderer has been removed")}function zB(){console.error("THREE.JSONLoader has been removed.")}kD.create=function(A,i){return console.log("THREE.Curve.create() has been deprecated"),A.prototype=Object.create(kD.prototype),A.prototype.constructor=A,A.prototype.getPoint=i,A},xD.prototype.fromPoints=function(A){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(A)},Fs.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},ss.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},eD.prototype.extractUrlBase=function(A){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ia.extractUrlBase(A)},eD.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},ns.prototype.center=function(A){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(A)},ns.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ns.prototype.isIntersectionBox=function(A){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(A)},ns.prototype.size=function(A){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(A)},On.prototype.center=function(A){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(A)},On.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},On.prototype.isIntersectionBox=function(A){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(A)},On.prototype.isIntersectionSphere=function(A){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(A)},On.prototype.size=function(A){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(A)},ih.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},lE.prototype.setFromMatrix=function(A){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(A)},Es.prototype.center=function(A){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(A)},fn.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},fn.nearestPowerOfTwo=function(A){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),fn.floorPowerOfTwo(A)},fn.nextPowerOfTwo=function(A){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),fn.ceilPowerOfTwo(A)},vn.prototype.flattenToArrayOffset=function(A,i){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(A,i)},vn.prototype.multiplyVector3=function(A){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),A.applyMatrix3(this)},vn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},vn.prototype.applyToBufferAttribute=function(A){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),A.applyMatrix3(this)},vn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},vn.prototype.getInverse=function(A){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(A).invert()},oh.prototype.extractPosition=function(A){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(A)},oh.prototype.flattenToArrayOffset=function(A,i){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(A,i)},oh.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Ln).setFromMatrixColumn(this,3)},oh.prototype.setRotationFromQuaternion=function(A){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(A)},oh.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},oh.prototype.multiplyVector3=function(A){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),A.applyMatrix4(this)},oh.prototype.multiplyVector4=function(A){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),A.applyMatrix4(this)},oh.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},oh.prototype.rotateAxis=function(A){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),A.transformDirection(this)},oh.prototype.crossVector=function(A){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),A.applyMatrix4(this)},oh.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},oh.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},oh.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},oh.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},oh.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},oh.prototype.applyToBufferAttribute=function(A){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),A.applyMatrix4(this)},oh.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},oh.prototype.makeFrustum=function(A,i,e,t,C,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(A,i,t,e,C,n)},oh.prototype.getInverse=function(A){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(A).invert()},Oh.prototype.isIntersectionLine=function(A){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(A)},Tn.prototype.multiplyVector3=function(A){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),A.applyQuaternion(this)},Tn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},lh.prototype.isIntersectionBox=function(A){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(A)},lh.prototype.isIntersectionPlane=function(A){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(A)},lh.prototype.isIntersectionSphere=function(A){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(A)},Xh.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Xh.prototype.barycoordFromPoint=function(A,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(A,i)},Xh.prototype.midpoint=function(A){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(A)},Xh.prototypenormal=function(A){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(A)},Xh.prototype.plane=function(A){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(A)},Xh.barycoordFromPoint=function(A,i,e,t,C){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Xh.getBarycoord(A,i,e,t,C)},Xh.normal=function(A,i,e,t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Xh.getNormal(A,i,e,t)},wD.prototype.extractAllPoints=function(A){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(A)},wD.prototype.extrude=function(A){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new kg(this,A)},wD.prototype.makeGeometry=function(A){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new mg(this,A)},pn.prototype.fromAttribute=function(A,i,e){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(A,i,e)},pn.prototype.distanceToManhattan=function(A){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(A)},pn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ln.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Ln.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Ln.prototype.getPositionFromMatrix=function(A){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(A)},Ln.prototype.getScaleFromMatrix=function(A){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(A)},Ln.prototype.getColumnFromMatrix=function(A,i){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(i,A)},Ln.prototype.applyProjection=function(A){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(A)},Ln.prototype.fromAttribute=function(A,i,e){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(A,i,e)},Ln.prototype.distanceToManhattan=function(A){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(A)},Ln.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},xn.prototype.fromAttribute=function(A,i,e){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(A,i,e)},xn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Th.prototype.getChildByName=function(A){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(A)},Th.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Th.prototype.translate=function(A,i){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(i,A)},Th.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Th.prototype.applyMatrix=function(A){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(A)},Object.defineProperties(Th.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(A){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=A}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Qr.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Qr.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),xC},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Uo.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty($o.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Yo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(kD.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(A){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=A}}),eE.prototype.setLens=function(A,i){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==i&&(this.filmGauge=i),this.setFocalLength(A)},Object.defineProperties(SD.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(A){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=A}},shadowCameraLeft:{set:function(A){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=A}},shadowCameraRight:{set:function(A){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=A}},shadowCameraTop:{set:function(A){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=A}},shadowCameraBottom:{set:function(A){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=A}},shadowCameraNear:{set:function(A){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=A}},shadowCameraFar:{set:function(A){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=A}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(A){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=A}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(A){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=A}},shadowMapHeight:{set:function(A){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=A}}}),Object.defineProperties(lr.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===kn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(kn)}}}),lr.prototype.setDynamic=function(A){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===A?kn:on),this},lr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},lr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},br.prototype.addIndex=function(A){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(A)},br.prototype.addAttribute=function(A,i){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),i&&i.isBufferAttribute||i&&i.isInterleavedBufferAttribute?"index"===A?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(i),this):this.setAttribute(A,i):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(A,new lr(arguments[1],arguments[2])))},br.prototype.addDrawCall=function(A,i,e){void 0!==e&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(A,i)},br.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},br.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},br.prototype.removeAttribute=function(A){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(A)},br.prototype.applyMatrix=function(A){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(A)},Object.defineProperties(br.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(ea.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(A){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=A}}}),Object.defineProperties($a.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(A){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=A}}}),Object.defineProperties(Fo.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===kn},set:function(A){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(A)}}}),Fo.prototype.setDynamic=function(A){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===A?kn:on),this},Fo.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},kg.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},kg.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},kg.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},uo.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Object.defineProperties(Xa.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(_h.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new nr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(A){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=A===ee}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(A){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=A}}}),Object.defineProperties(Mg.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(bg.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(A){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=A}}}),Object.defineProperties(AE.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(A){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=A}}}),Bo.prototype.clearTarget=function(A,i,e,t){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(A),this.clear(i,e,t)},Bo.prototype.animate=function(A){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(A)},Bo.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Bo.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Bo.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Bo.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Bo.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Bo.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Bo.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Bo.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Bo.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Bo.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Bo.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Bo.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Bo.prototype.enableScissorTest=function(A){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(A)},Bo.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Bo.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Bo.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Bo.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Bo.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Bo.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Bo.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Bo.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Bo.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Bo.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Bo.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(A){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=A}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(A){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=A}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(A){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===A?LC:TC}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ro.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(wn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(A){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=A}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(A){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=A}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(A){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=A}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(A){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=A}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(A){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=A}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(A){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=A}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(A){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=A}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(A){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=A}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(A){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=A}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(A){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=A}}}),Object.defineProperties(ya.prototype,{load:{value:function(A){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const i=this;return(new Ba).load(A,(function(A){i.setBuffer(A)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Ta.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},tE.prototype.updateCubeMap=function(A,i){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(A,i)},tE.prototype.clear=function(A,i,e,t){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(A,i,e,t)},In.crossOrigin=void 0,In.loadTexture=function(A,i,e,t){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const C=new oD;C.setCrossOrigin(this.crossOrigin);const n=C.load(A,e,void 0,t);return i&&(n.mapping=i),n},In.loadTextureCube=function(A,i,e,t){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const C=new ED;C.setCrossOrigin(this.crossOrigin);const n=C.load(A,e,void 0,t);return i&&(n.mapping=i),n},In.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},In.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const qB={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function QB(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ki}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ki);var YB=e(4),XB=e.n(YB),ZB={create:function(A,i){for(var e=new Array(i),t=0;t<i;++t)e[t]=A;return e},copy:function(A,i){for(var e=0;e<A.length;++e)i[e]=A[e]},clone:function(A){for(var i=new Array(A.length),e=0;e<A.length;++e)i[e]=A[e]},scaleNew:function(A,i,e){A.forEach((function(A,t){i[t]=A*e}))},shuffle:function(A){for(var i=A.length-1;i>0;--i){var e=Math.floor(Math.random()*(i+1)),t=A[i];A[i]=A[e],A[e]=t}}},_B={get:function(A,i){var e=new XMLHttpRequest;e.open("GET",A,!0),e.withCredentials=!1,e.onreadystatechange=function(){4!==e.readyState||200!==e.status&&0!==e.status||i(e.responseText)},e.send()}};var $B=function(A){var i=A.nMorphs%2==0?A.nMorphs:A.nMorphs+1;_B.get(A.url,(function(e){var t=JSON.parse(e),C=new br,n=t.base.vertices,h=n.length,r=[],E=ZB.create(-1,n.length),l=[];function o(A,i){if(-1===E[A])return E[A]=i,A;if(E[A]===i)return A;var e=E.length;return E.push(i),n.push(n[A]),l.push(A),e}t.base.faces.forEach((function(A){var i=A[0][0],e=A[1][0],t=A[2][0],C=A[0][1],n=A[1][1],h=A[2][1];if(i=o(i,C),e=o(e,n),t=o(t,h),r.push(i,t,e),A.length>3){var E=A[3][0];E=o(E,A[3][1]),r.push(i,E,t)}})),C.setIndex(r);var k=new Float32Array(3*n.length);n.forEach((function(A,i){k[3*i]=A[0],k[3*i+1]=A[1],k[3*i+2]=A[2]})),C.setAttribute("position",new lr(k,3,!1));var g=new Float32Array(2*n.length);E.forEach((function(A,i){var e=t.base.vts[A];void 0===e&&(e=[0,0]),g[2*i]=e[0],g[2*i+1]=e[1]})),C.setAttribute("uv",new lr(g,2,!1)),console.log("INFO in ThreeMorphAnimMeshBuilder: ",t.morphs.length,"morphs found");var D=[],a=h+l.length;t.morphs.forEach((function(A,i){var e=new Float32Array(3*a);A.forEach((function(A,i){e[3*i]=A[0],e[3*i+1]=A[1],e[3*i+2]=A[2]})),l.forEach((function(i,t){var C=3*(h+t),n=A[i];e[C]=n[0],e[C+1]=n[1],e[C+2]=n[2]})),D.push(e)})),D.length%2!=0&&D.push(new Float32Array(D[0].length)),C.computeBoundingSphere();for(var s=.5*C.boundingSphere.radius,B=0;B<i/2;++B){for(var j=new Float32Array(3*a),m=D[2*B],c=D[2*B+1],u=0;u<3*a;++u){var F=Math.round(A.morphPrecision*(1+m[u]/s)/2),G=Math.round(A.morphPrecision*(1+c[u]/s)/2);j[u]=F+G/A.morphPrecision}C.setAttribute("morphJeeliz"+B.toString(),new lr(j,3,!1))}C.computeVertexNormals(),C.morphRadius=s,A.successCallback(C)}))};var Aj=function(A,i){var e=A.nMorphs;e%2!=0&&++e;var t=sE.phong,C=t.vertexShader,n=t.fragmentShader,h=new oh,r=new uh(0,0,0,i),E=Object.assign({modelMatrixDelayed:{value:h},morphJeelizPrecision:{value:A.morphPrecision},morphJeelizRadius:{value:A.morphRadius},morphJeelizInfluences:{value:ZB.create(0,e)}},t.uniforms);function l(A,i,e){return A.replace(i,e)}for(var o,k,g,D=e/2,a="",s=[],B=0;B<D;++B){var j=2*B+1,m=(2*B).toString(),c=j.toString(),u=B.toString();a+="vec3 morphTargetJeeliz"+m+" = morphJeelizRadius*(vec3(-1.,-1.,-1.) + 2.*floor(morphJeeliz"+u+")/morphJeelizPrecision);\nvec3 morphTargetJeeliz"+c+" = morphJeelizRadius*(vec3(-1.,-1.,-1.) + 2.*fract(morphJeeliz"+u+"));\ntransformed += morphTargetJeeliz"+m+" * morphJeelizInfluences["+m+"];\ntransformed += morphTargetJeeliz"+c+" * morphJeelizInfluences["+c+"];\n",s.push("morphJeeliz"+u)}for(var F in o=C,k="#include <common>",g="uniform mat4 modelMatrixDelayed;\nuniform sampler2D flexMap;\nuniform float morphJeelizInfluences["+(2*D).toString()+"];\nuniform float morphJeelizPrecision, morphJeelizRadius;\nattribute vec3 "+s.join(",")+";",C=l(C=function(A,i){return A.replace(i,"")}(C=o.replace(k,k+"\n"+g),"#include <worldpos_vertex>"),"#include <project_vertex>","vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n    vec4 worldPositionDelayed = modelMatrixDelayed * vec4( transformed, 1.0 );\n    worldPosition = mix(worldPosition, worldPositionDelayed, texture2D(flexMap, uv).r);\n    vec4 mvPosition = viewMatrix * worldPosition;\n    gl_Position = projectionMatrix * mvPosition;"),C=l(C,"#include <morphtarget_vertex>",a),A){var G=null;switch(F){case"specular":case"diffuse":case"color":G=new nr(A[F]);break;default:G=A[F]}E[F]={value:G}}var d=new AE({vertexShader:C,fragmentShader:n,uniforms:E,morphTargets:!1,lights:!0,side:ie,precision:"highp"});for(var f in A)-1!==["map","specularMap","envMap","aoMap","alphaMap","lightMap","emissiveMap"].indexOf(f)&&(d[f]=A[f]);return d.set_rotationAmortized=function(A,i,e){r.fromArray(e),h.makeRotationFromEuler(r),h.setPosition(A),h.scale(i)},d},ij=function(){var A=.5,i=.5,e=[0,.5,1],C="ZYX",n=2e-4,h=.9,r=2048,E=XB.a.get_nMorphs(),l=null,o="",k={renderer:null,scene:null,camera:null,morphAnimMesh:null,ambientLight:null,dirLight:null},g=-9,D=-8,a=-1,s=0,B=1,j=-10,m=null,c={modelURL:!1,threeMat:!1,callback:!1,restoreState:s},u=[0,0,0],F=[0,0,0],G=0;function d(A){if(j===B){var i=Math.min(Math.max(A-G,5),30),e=XB.a.get_rotationStabilized();k.morphAnimMesh.rotation.fromArray(e);var t=Math.pow(h,i/16);F[0]*=t,F[1]*=t,F[2]*=t,F[0]+=n*i*(e[0]-u[0]),F[1]+=n*i*(e[1]-u[1]),F[2]+=n*i*(e[2]-u[2]),u[0]+=i*F[0],u[1]+=i*F[1],u[2]+=i*F[2],"ShaderMaterial"===k.morphAnimMesh.material.type&&k.morphAnimMesh.material.set_rotationAmortized(k.morphAnimMesh.position,k.morphAnimMesh.scale,u),k.renderer.render(k.scene,k.camera),G=A,m=requestAnimationFrame(d)}}function f(){return j===B&&(m&&(window.cancelAnimationFrame(m),m=!1),d(0),!0)}function p(A){if(k.morphAnimMesh)if(c.threeMat=A,j===a){var i=c.callback;c.callback=function(){i(),k.morphAnimMesh.material=A}}else k.morphAnimMesh.material=A}function v(A,i,e){if(A===c.modelURL&&i===c.threeMat)return!0;if(j===a){console.log("WARNING in THREE.JeelizHelper - load_model(): currently loading a model");var t=c.callback;return c.callback=function(){t(),v(A,i,e)},!0}return j!==s&&j!==B?(console.log("WARNING in  THREE.JeelizHelper - load_model(): invalid state"),!1):A===c.url&&k.morphAnimMesh?(p(i),e(),!0):(c.modelURL=A,c.threeMat=i,c.callback=e,c.restoreState=j,j=a,k.morphAnimMesh&&(k.scene.remove(k.morphAnimMesh),k.morphAnimMesh=!1),$B({url:o+A,morphPrecision:r,nMorphs:E,successCallback:function(A){var e=new Qr(A,i);e.rotation.order=C,k.morphAnimMesh=e;var t=XB.a.get_morphTargetInfluencesStabilized();k.morphAnimMesh.userData.morphJeelizInfluences=t,XB.a.on_detect((function(A){A})),k.scene.add(k.morphAnimMesh),j=c.restoreState,f(),c.callback(e);var n=document.createElement("div");document.body.appendChild(n)}}),!0)}function H(A){return(new oD).load(o+A)}var I={ready:!1,init:function(t){if(!t)t={};o=t.assetsParentPath?t.assetsParentPath:"./",XB.a.init({canvas:t.canvas,NNC:t.NN,videoSettings:t.videoSettings,callbackReady:function(C){if(C)return console.log("ERROR: cannot init JEELIZFACEEXPRESSIONS. errCode =",C),void(t.errorCallback&&t.errorCallback(C));var n;console.log("INFO: JEELIZFACEEXPRESSIONS is ready!"),j=g,n=t.canvasThree,l=n,k.renderer=new Bo({antialias:!0,canvas:l,preserveDrawingBuffer:!0,alpha:!0}),k.renderer.toneMapping=Je,k.renderer.outputEncoding=LC,k.renderer.setClearAlpha(0),k.scene=new uo,k.ambientLight=new XD(16777215),k.ambientLight.intensity=A,k.scene.add(k.ambientLight),k.dirLight=new YD(16777215),k.dirLight.position.fromArray(e),k.dirLight.intensity=i,k.scene.add(k.dirLight),k.camera=new eE(35,l.width/l.height,10,1e4),k.camera.position.set(0,0,500),k.camera.lookAt(new Ln(0,0,0)),j=D,j=s,I.ready=!0;var h=function(){if(I.set_positionScale(t.position?t.position:[0,0,0],t.scale?t.scale:1),t.successCallback){var A=XB.a.get_video();t.successCallback(A)}I.animate()};void 0===t.model?v(t.meshURL,!1,(function(){I.set_materialParameters(t.matParameters),h()})):t.model&&t.mat?v(t.model,t.mat,h):t.model&&t.matParams&&v(t.model,!1,(function(){I.set_materialParameters(t.matParams),h()}))}})},get_three:function(){return{three:t,threeRenderer:k.renderer,threeCamera:k.camera,threeAmbientLight:k.ambientLight,threeDirLight:k.dirLight,threeScene:k.scene}},get_threeEmoji:function(){return k.morphAnimMesh},load_weboji:function(A,i,e){return v(A,!1,(function(){I.set_materialParameters(i),e&&e()}))},change_material:function(A){p(A)},set_positionScale:function(A,i){A&&k.morphAnimMesh.position.fromArray(A),void 0!==i&&k.morphAnimMesh.scale.set(-i,i,i)},set_materialParameters:function(A){var i=Object.assign({shininess:30,color:16777215,diffuse:16777215,specular:16777215,morphTargets:!1,morphPrecision:r,morphRadius:k.morphAnimMesh.geometry.morphRadius,nMorphs:E,morphJeelizInfluences:k.morphAnimMesh.userData.morphJeelizInfluences},A);["specularMap","flexMap","envMap","alphaMap","lightMap","emissiveMap"].forEach((function(e){A[e+"URL"]&&(i[e]=H(A[e+"URL"]))})),A.diffuseMapURL&&(i.map=H(A.diffuseMapURL)),p(Aj(i,C))},animate:function(){(j===s||j===a&&c.state===j.idle)&&(j=B,XB.a.switch_sleep(!1),f())},stop:function(){XB.a.switch_sleep(!0),m&&(cancelAnimationFrame(m),m=null),j===a?c.state=s:j=s},resize:function(A,i){k.renderer.setSize(A,i),l.style.width=null,l.style.height=null,k.camera.aspect=A/i,k.camera.updateProjectionMatrix()}};return I}(),ej=e(39);function tj(A){return(tj="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A})(A)}function Cj(A){return function(A){if(Array.isArray(A))return nj(A)}(A)||function(A){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(A))return Array.from(A)}(A)||function(A,i){if(!A)return;if("string"==typeof A)return nj(A,i);var e=Object.prototype.toString.call(A).slice(8,-1);"Object"===e&&A.constructor&&(e=A.constructor.name);if("Map"===e||"Set"===e)return Array.from(A);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return nj(A,i)}(A)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nj(A,i){(null==i||i>A.length)&&(i=A.length);for(var e=0,t=new Array(i);e<i;e++)t[e]=A[e];return t}function hj(A,i){for(var e=0;e<i.length;e++){var t=i[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(A,t.key,t)}}function rj(A,i){return(rj=Object.setPrototypeOf||function(A,i){return A.__proto__=i,A})(A,i)}function Ej(A){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(A){return!1}}();return function(){var e,t=oj(A);if(i){var C=oj(this).constructor;e=Reflect.construct(t,arguments,C)}else e=t.apply(this,arguments);return lj(this,e)}}function lj(A,i){return!i||"object"!==tj(i)&&"function"!=typeof i?function(A){if(void 0===A)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return A}(A):i}function oj(A){return(oj=Object.setPrototypeOf?Object.getPrototypeOf:function(A){return A.__proto__||Object.getPrototypeOf(A)})(A)}var kj=function(A){!function(A,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");A.prototype=Object.create(i&&i.prototype,{constructor:{value:A,writable:!0,configurable:!0}}),i&&rj(A,i)}(h,A);var i,e,t,C=Ej(h);function h(A){var i;!function(A,i){if(!(A instanceof i))throw new TypeError("Cannot call a class as a function")}(this,h),i=C.call(this,A);var e=Math.min(window.innerWidth,window.innerHeight);e*=window.devicePixelRatio||1;var t=document.createElement("canvas");return t.width=t.height=e,i.getUserMedia=new Promise((function(A,i){var e=document.createElement("canvas");ij.init({canvasThree:t,canvas:e,videoSettings:{isAudio:!0},assetsParentPath:"../../assets/3D/",NN:ej,meshURL:"meshes/fox11_v0.json",matParameters:{diffuseMapURL:"textures/Fox_albedo.png",specularMapURL:"textures/Fox_specular.png",flexMapURL:"textures/Fox_flex.png"},successCallback:function(i){document.body.appendChild(e),e.style.position="fixed",e.style.top="0",e.style.right="0",e.style.maxWidth="33vmin",e.style.borderRadius="0px 0px 0px 20px";var C=i.srcObject.getAudioTracks()[0],n=t.captureStream(30).getVideoTracks()[0],h=new MediaStream([n,C]);A(h)},errorCallback:function(A){alert("CANNOT INIT WEBOJI: "+A),i(A)},position:[0,-60,0],scale:1.1})})),i.socket=Ji.a.connect(),i}return i=h,(e=[{key:"componentDidMount",value:function(){this.props.addRoom()}},{key:"render",value:function(){var A=this;return n.a.createElement("div",null,n.a.createElement(pi,{media:function(i){return A.media=i},socket:this.socket,getUserMedia:this.getUserMedia}),n.a.createElement(Oi,{socket:this.socket,media:this.media,getUserMedia:this.getUserMedia}))}}])&&hj(i.prototype,e),t&&hj(i,t),h}(C.Component),gj=EA((function(A){return{rooms:new Set(Cj(A.rooms))}}),(function(A,i){return{addRoom:function(){return gA.dispatch({type:"ADD_ROOM",room:i.match.params.room})}}}))(kj);e(72);Object(h.render)(n.a.createElement(D,{store:gA},n.a.createElement(RA,null,n.a.createElement(qA,null,n.a.createElement($A,{exact:!0,path:"/",component:Bi}),n.a.createElement($A,{path:"/r/:room",component:gj}),n.a.createElement($A,{path:"*",component:function(){return n.a.createElement("h1",null,"404.. This page is not found!")}})))),document.getElementById("app"))}]);